[{"path":"https://eliocamp.github.io/rcdo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Elio Campitelli. Maintainer, author.","code":""},{"path":"https://eliocamp.github.io/rcdo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Campitelli E (2024). rcdo: Create CDO Commands R Functions. R package version 0.0.0.9000, https://eliocamp.github.io/rcdo/.","code":"@Manual{,   title = {rcdo: Create CDO Commands from R Functions},   author = {Elio Campitelli},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://eliocamp.github.io/rcdo/}, }"},{"path":"https://eliocamp.github.io/rcdo/index.html","id":"rcdo","dir":"","previous_headings":"","what":"Create CDO Commands from R Functions","title":"Create CDO Commands from R Functions","text":"rcdo wrapper around Climate Data Operators.","code":""},{"path":"https://eliocamp.github.io/rcdo/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create CDO Commands from R Functions","text":"can install development version rcdo GitHub : operators supported partially documented. functions start cdo_ name operator (e.g. selname operator cdo_selname() function)","code":"# install.packages(\"pak\") pak::pak(\"eliocamp/rcdo\")"},{"path":"https://eliocamp.github.io/rcdo/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Create CDO Commands from R Functions","text":"ymonmean operator computes monthly annual cycle. rcdo function cdo_ymonmean() output just prints command place holder output. Use cdo_execute() actually run command. outpuf file specified, result saved tempfile. Operators can chained. Lets select just Southern Hemisphere first. Now also select 500 hPa level","code":"library(rcdo) ncep <- \"hgt_ncep.nc\" ncep |>    cdo_ymonmean()  #> CDO command: #>    cdo ymonmean [ 'hgt_ncep.nc' ] {{output}} ncep |>    cdo_ymonmean() |>    cdo_execute() #> [1] \"/tmp/Rtmp89RjCK/file71812ea48dcc\" #> attr(,\"mtime\") #> [1] \"2024-07-04 20:11:34 AEST\" #> attr(,\"size\") #> [1] 8631345 ncep |>    cdo_sellonlatbox(lon1 = 0, lon2 = 360, lat1 = -90, lat2 = 0) |>    cdo_ymonmean()  #> CDO command: #>    cdo ymonmean [ -sellonlatbox,0,360,-90,0 [ 'hgt_ncep.nc' ] ] {{output}} ncep |>    cdo_sellonlatbox(lon1 = 0, lon2 = 360, lat1 = -90, lat2 = 0) |>    cdo_sellevel(level = 500) |>    cdo_ymonmean()  #> CDO command: #>    cdo ymonmean [ -sellevel,500 [ -sellonlatbox,0,360,-90,0 [ 'hgt_ncep.nc' ] ] ] {{output}} ncep |>    cdo_sellonlatbox(lon1 = 0, lon2 = 360, lat1 = -90, lat2 = 0) |>    cdo_sellevel(level = 500) |>    cdo_ymonmean()  #> CDO command: #>    cdo ymonmean [ -sellevel,500 [ -sellonlatbox,0,360,-90,0 [ 'hgt_ncep.nc' ] ] ] {{output}}"},{"path":"https://eliocamp.github.io/rcdo/index.html","id":"prior-art","dir":"","previous_headings":"","what":"Prior art","title":"Create CDO Commands from R Functions","text":"ClimateOperators package also wrapps CDO, ’s approach different. Instead wrapping operator function parameters arguments, provides generic cdo() function runs operators user needs write strings. Instead one write","code":"ncep |>    rcdo::cdo_sellonlatbox(lon1 = 0, lon2 = 360, lat1 = -90, lat2 = 0) ClimateOperators::cdo(\"sellonlatbox,0,360,-90,0\", ncep, output_file)"},{"path":"https://eliocamp.github.io/rcdo/reference/adisit.html","id":null,"dir":"Reference","previous_headings":"","what":"Potential temperature to insitu temperature and vice versa — cdo_adipot","title":"Potential temperature to insitu temperature and vice versa — cdo_adipot","text":"Potential temperature insitu temperature vice versa","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/adisit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Potential temperature to insitu temperature and vice versa — cdo_adipot","text":"","code":"cdo_adipot(ifile, pressure = NULL, ofile = NULL)  cdo_adisit(ifile, pressure = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/adisit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Potential temperature to insitu temperature and vice versa — cdo_adipot","text":"ifile String path input file. pressure FLOAT - Pressure bar (constant value assigned levels) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/adisit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Potential temperature to insitu temperature and vice versa — cdo_adipot","text":"","code":"adisit  Potential temperature to in-situ temperature         This is a special operator for the post processing of the ocean and sea ice model MPIOM.         It converts potential temperature adiabatically to in-situ temperature to(t, s, p).         Required input fields are sea water potential temperature (name=tho; code=2) and sea water salinity (name=sao; code=5).         Pressure is calculated from the level information or can be specified by the optional parameter.         Output fields are sea water temperature (name=to; code=20) and sea water salinity (name=s; code=5). adipot  In-situ temperature to potential temperature         This is a special operator for the post processing of the ocean and sea ice model MPIOM.         It converts in-situ temperature to potential temperature tho(to, s, p). Required input fields         are sea water in-situ temperature (name=t; code=2) and sea water salinity (name=sao,s; code=5).         Pressure is calculated from the level information or can be specified by the optional parameter.         Output fields are sea water temperature (name=tho; code=2) and sea water salinity (name=s; code=5)."},{"path":"https://eliocamp.github.io/rcdo/reference/afterburner.html","id":null,"dir":"Reference","previous_headings":"","what":"ECHAM standard post processor — cdo_after","title":"ECHAM standard post processor — cdo_after","text":"\\\"afterburner\\\" standard post processor ECHAM GRIB NetCDF data provides following operations:  - Extract specified variables levels - Compute derived variables - Transform spectral data Gaussian grid representation - Vertical interpolation pressure levels - Compute temporal means  operator reads selection parameters namelist stdin. Use UNIX redirection \\\"<namelistfile\\\" read namelist file.  input files combined CDO operators optimized reader operator.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/afterburner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ECHAM standard post processor — cdo_after","text":"","code":"cdo_after(ifiles, vct = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/afterburner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ECHAM standard post processor — cdo_after","text":"ifiles Character vector path input files. vct STRING - File VCT ASCII format ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/apply.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply operators — apply","title":"Apply operators — apply","text":"apply utility runs named operators input file. input files must enclosed square brackets. utility can used series input files. operators one input file (infiles). incomplete list operators: copy, cat, merge, mergetime, select, ENSSTAT. parameter operators blank-separated list CDO operators. Use quotation marks one operator needed. operator may one input output stream.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/arith.html","id":null,"dir":"Reference","previous_headings":"","what":"Arithmetic on two datasets — cdo_add","title":"Arithmetic on two datasets — cdo_add","text":"module performs simple arithmetic two datasets. number fields infile1 infile2. fields outfile inherit meta data infile1. operators module simply process one field two input files. Neither order variables date checked. One input files can contain one timestep one variable.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/arith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arithmetic on two datasets — cdo_add","text":"","code":"cdo_add(ifile1, ifile2, ofile = NULL)  cdo_atan2(ifile1, ifile2, ofile = NULL)  cdo_div(ifile1, ifile2, ofile = NULL)  cdo_max(ifile1, ifile2, ofile = NULL)  cdo_min(ifile1, ifile2, ofile = NULL)  cdo_mul(ifile1, ifile2, ofile = NULL)  cdo_sub(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/arith.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arithmetic on two datasets — cdo_add","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/arith.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Arithmetic on two datasets — cdo_add","text":"","code":"add    Add two fields        o(t,x) = i_1(t,x) + i_2(t,x) sub    Subtract two fields        o(t,x) = i_1(t,x) - i_2(t,x) mul    Multiply two fields        o(t,x) = i_1(t,x) * i_2(t,x) div    Divide two fields        o(t,x) = i_1(t,x) / i_2(t,x) min    Minimum of two fields        o(t,x) = min(i_1(t,x), i_2(t,x)) max    Maximum of two fields        o(t,x) = max(i_1(t,x), i_2(t,x)) atan2  Arc tangent of two fields        The atan2 operator calculates the arc tangent of two fields. The result is        in radians, which is between -PI and PI (inclusive).         o(t,x) = atan2(i_1(t,x), i_2(t,x))"},{"path":"https://eliocamp.github.io/rcdo/reference/arithc.html","id":null,"dir":"Reference","previous_headings":"","what":"Arithmetic with a constant — cdo_addc","title":"Arithmetic with a constant — cdo_addc","text":"module performs simple arithmetic field elements dataset constant. fields outfile inherit meta data infile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/arithc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arithmetic with a constant — cdo_addc","text":"","code":"cdo_addc(ifile, c = NULL, ofile = NULL)  cdo_divc(ifile, c = NULL, ofile = NULL)  cdo_maxc(ifile, c = NULL, ofile = NULL)  cdo_minc(ifile, c = NULL, ofile = NULL)  cdo_mulc(ifile, c = NULL, ofile = NULL)  cdo_subc(ifile, c = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/arithc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arithmetic with a constant — cdo_addc","text":"ifile String path input file. c FLOAT - Constant ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/arithc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Arithmetic with a constant — cdo_addc","text":"","code":"addc  Add a constant       o(t,x) = i(t,x) + c subc  Subtract a constant       o(t,x) = i(t,x) - c mulc  Multiply with a constant       o(t,x) = i(t,x) * c divc  Divide by a constant       o(t,x) = i(t,x) / c minc  Minimum of a field and a constant       o(t,x) = min(i(t,x), c) maxc  Maximum of a field and a constant       o(t,x) = max(i(t,x), c)"},{"path":"https://eliocamp.github.io/rcdo/reference/arithdays.html","id":null,"dir":"Reference","previous_headings":"","what":"Arithmetic with days — cdo_divdpm","title":"Arithmetic with days — cdo_divdpm","text":"module multiplies divides timestep dataset corresponding days per month days per year. result functions depends used calendar input data.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/arithdays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arithmetic with days — cdo_divdpm","text":"","code":"cdo_divdpm(ifile, ofile = NULL)  cdo_divdpy(ifile, ofile = NULL)  cdo_muldpm(ifile, ofile = NULL)  cdo_muldpy(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/arithdays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arithmetic with days — cdo_divdpm","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/arithdays.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Arithmetic with days — cdo_divdpm","text":"","code":"muldpm  Multiply with days per month         o(t,x) = i(t,x) * days_per_month divdpm  Divide by days per month         o(t,x) = i(t,x) / days_per_month muldpy  Multiply with days per year         o(t,x) = i(t,x) * days_per_year divdpy  Divide by days per year         o(t,x) = i(t,x) / days_per_year"},{"path":"https://eliocamp.github.io/rcdo/reference/arithlat.html","id":null,"dir":"Reference","previous_headings":"","what":"Arithmetic with latitude — cdo_divcoslat","title":"Arithmetic with latitude — cdo_divcoslat","text":"module multiplies divides field element cosine latitude.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/arithlat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arithmetic with latitude — cdo_divcoslat","text":"","code":"cdo_divcoslat(ifile, ofile = NULL)  cdo_mulcoslat(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/arithlat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arithmetic with latitude — cdo_divcoslat","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/arithlat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Arithmetic with latitude — cdo_divcoslat","text":"","code":"mulcoslat  Multiply with the cosine of the latitude            o(t,x) = i(t,x) * cos(latitude(x)) divcoslat  Divide by cosine of the latitude            o(t,x) = i(t,x) / cos(latitude(x))"},{"path":"https://eliocamp.github.io/rcdo/reference/bitrounding.html","id":null,"dir":"Reference","previous_headings":"","what":"Bit rounding — cdo_bitrounding","title":"Bit rounding — cdo_bitrounding","text":"operator calculates field number necessary mantissa bits get certain information level data. number significant bits (numbits) rounding data performed. allows data compressed higher level.  default value information level 0.9999 can adjusted parameter inflevel. means 99.99% information mantissa bits preserved.  Alternatively, number significant bits can set variables numbits parameter. Furthermore, numbits can assigned variable via filename parameter. case, numbits still calculated variables present file.  analysis bit information based Julia library BitInformation.jl (https://github.com/milankl/BitInformation.jl). procedure derive number significant mantissa bits adapted Python library xbitinfo (https://github.com/observingClouds/xbitinfo). Quantize number mantissa bits done IEEE rounding using code NetCDF 4.9.0.  Currently 32-bit float data rounded. Data missing values yet supported calculation significant bits.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/bitrounding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bit rounding — cdo_bitrounding","text":"","code":"cdo_bitrounding(   ifile,   inflevel = NULL,   addbits = NULL,   minbits = NULL,   maxbits = NULL,   numsteps = NULL,   numbits = NULL,   printbits = NULL,   filename = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/bitrounding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bit rounding — cdo_bitrounding","text":"ifile String path input file. inflevel FLOAT - Information level (0 - 1) [default: 0.9999] addbits INTEGER - Add bits number significant bits [default: 0] minbits INTEGER - Minimum value number bits [default: 1] maxbits INTEGER - Maximum value number bits [default: 23] numsteps INTEGER - Set 1 run calculation first time step numbits INTEGER - Set number significant bits printbits BOOL - Print max. numbits per variable 1st timestep stdout [format: name=numbits] filename STRING - Read number significant bits per variable file [format: name=numbits] ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/cdo_execute.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a CDO operation — cdo_execute","title":"Execute a CDO operation — cdo_execute","text":"Execute CDO operation","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/cdo_execute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a CDO operation — cdo_execute","text":"","code":"cdo_execute(   operation,   output = temp_output(input),   options = NULL,   verbose = FALSE )"},{"path":"https://eliocamp.github.io/rcdo/reference/cdo_execute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a CDO operation — cdo_execute","text":"operation CDO operation output output file base string output files. Defaults temporary files. options character vector CDO options. verbose whether print command executed.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/cdo_install.html","id":null,"dir":"Reference","previous_headings":"","what":"Install the supported CDO version — cdo_install","title":"Install the supported CDO version — cdo_install","text":"Install supported CDO version","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/cdo_install.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install the supported CDO version — cdo_install","text":"","code":"cdo_install(   reinstall = FALSE,   proj = \"/usr/\",   netcdf = \"/usr/\",   eccodes = \"/usr/\" )  cdo_version()"},{"path":"https://eliocamp.github.io/rcdo/reference/cdo_install.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install the supported CDO version — cdo_install","text":"reinstall Logical. Set true force reinstallation.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/cdo_install.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install the supported CDO version — cdo_install","text":"rcdo work normal CDO installation installed version one used generate package, small inconsistencies documentation, missing operators, extra operators changes syntax. cdo_install() attempt download, configure, compile install CDO version 2.4.2 package data directory. version CDO exists, package use . Otherwise, use system's installation.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/cdo_set_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Set output and options — cdo_set_output","title":"Set output and options — cdo_set_output","text":"Set output options","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/cdo_set_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set output and options — cdo_set_output","text":"","code":"cdo_set_output(operation, output)  cdo_set_options(operation, options)"},{"path":"https://eliocamp.github.io/rcdo/reference/cdo_set_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set output and options — cdo_set_output","text":"operation CDO operation output output file base string output files options character vector CDO options.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/cmor.html","id":null,"dir":"Reference","previous_headings":"","what":"Climate Model Output Rewriting to produce CMIPcompliant data — cmor","title":"Climate Model Output Rewriting to produce CMIPcompliant data — cmor","text":"CDO operator cmor converts infile CMIP-compliant format using CMOR library. output file contains single output variable. name output files generated CMOR according template based DRS (Data reference Syntax) project. CMOR checks applies information delivered project dependend MIPtable infile. Additional information required conversion can configured via keyvalues optional parameters.  specifying variable selector keyvalue, e.g. cmor_name=tas, user can pre-select subset infile variables. name code specified, corresponding cmor_name can also found MIPtable also required map infile variable CMOR-variable. mapping variables operator call, one can specify mapping table via keyword mapping_table.  Global attributes must collected info files can specified via keyword info. required optional global attributes well information table file formats given 'cdo cmor manual'.  questions remain, hesitate ask send email wachsmannATdkrz.de.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/cmorlite.html","id":null,"dir":"Reference","previous_headings":"","what":"CMOR lite — cdo_cmorlite","title":"CMOR lite — cdo_cmorlite","text":"CMOR (Climate Model Output Rewriter) library comprises set functions, can used produce CF-compliant NetCDF files fulfill requirements many climate community's standard model experiments. experiments collectively referred MIP's. Much metadata written output files defined MIP-specific tables, typically made available MIP's web site.  CDO operator cmorlite process header variable section MIP tables writes result internal IO library CDI. addition CMOR 2 3 table format, CDO parameter table format also supported. following parameter table entries available:  Entry           & Type        & Description name            & WORD        & Name variable out_name        & WORD        & New name variable type            & WORD        & Data type (real double) standard_name   & WORD        & defined CF standard name table long_name       & STRING      & Describing variable units           & STRING      & Specifying units variable comment         & STRING      & Information concerning variable cell_methods    & STRING      & Information concerning calculation means climatologies cell_measures   & STRING      & Indicates names variables containing cell areas volumes missing_value   & FLOAT       & Specifying missing data identified valid_min       & FLOAT       & Minimum valid value valid_max       & FLOAT       & Maximum valid value ok_min_mean_abs & FLOAT       & Minimum absolute mean ok_max_mean_abs & FLOAT       & Maximum absolute mean factor          & FLOAT       & Scale factor delete          & INTEGER     & Set 1 delete variable convert         & INTEGER     & Set 1 convert unit necessary  entries stored variables attributes, handled differently. variable name used search key parameter table. valid_min, valid_max, ok_min_mean_abs ok_max_mean_abs used check range data.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/cmorlite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CMOR lite — cdo_cmorlite","text":"","code":"cdo_cmorlite(ifile, table = NULL, convert = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/cmorlite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CMOR lite — cdo_cmorlite","text":"ifile String path input file. table STRING - Name CMOR table specified PCMDI convert STRING - Converts units necessary ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/collgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect horizontal grid — cdo_collgrid","title":"Collect horizontal grid — cdo_collgrid","text":"operator collects data input files one output file. input files need variables number timesteps different horizonal grid region. source regions structured lon/lat grid, regions together must result new structured lat/long grid box. Data unstructured grid concatenated order input files. parameter nx needs specified curvilinear grids.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/collgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect horizontal grid — cdo_collgrid","text":"","code":"cdo_collgrid(ifiles, nx = NULL, names = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/collgrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect horizontal grid — cdo_collgrid","text":"ifiles Character vector path input files. nx INTEGER - Number regions x direction [default: number input files] names STRING - Comma-separated list variable names [default: variables] ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/collgrid.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Collect horizontal grid — cdo_collgrid","text":"operator needs open input files simultaneously. maximum number open files depends operating system!","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/comp.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparison of two fields — cdo_eq","title":"Comparison of two fields — cdo_eq","text":"module compares two datasets field field. resulting field mask containing 1 comparison true 0 . number fields infile1 infile2. One input files can contain one timestep one field. fields outfile inherit meta data infile1 infile2. type comparison depends chosen operator.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/comp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparison of two fields — cdo_eq","text":"","code":"cdo_eq(ifile1, ifile2, ofile = NULL)  cdo_ge(ifile1, ifile2, ofile = NULL)  cdo_gt(ifile1, ifile2, ofile = NULL)  cdo_le(ifile1, ifile2, ofile = NULL)  cdo_lt(ifile1, ifile2, ofile = NULL)  cdo_ne(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/comp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparison of two fields — cdo_eq","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/comp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Comparison of two fields — cdo_eq","text":"","code":"eq  Equal               /   1   if i_1(t,x) EQ i_2(t,x)  AND  i_1(t,x),i_2(t,x) NE miss     o(t,x) = &lt;    0   if i_1(t,x) NE i_2(t,x)  AND  i_1(t,x),i_2(t,x) NE miss               \\\\  miss if i_1(t,x) EQ miss      OR   i_2(t,x) EQ miss ne  Not equal               /   1   if i_1(t,x) NE i_2(t,x)  AND  i_1(t,x),i_2(t,x) NE miss     o(t,x) = &lt;    0   if i_1(t,x) EQ i_2(t,x)  AND  i_1(t,x),i_2(t,x) NE miss               \\\\  miss if i_1(t,x) EQ miss      OR   i_2(t,x) EQ miss le  Less equal               /   1   if i_1(t,x) LE i_2(t,x)  AND  i_1(t,x),i_2(t,x) NE miss     o(t,x) = &lt;    0   if i_1(t,x) GT i_2(t,x)  AND  i_1(t,x),i_2(t,x) NE miss               \\\\  miss if i_1(t,x) EQ miss      OR   i_2(t,x) EQ miss lt  Less than               /   1   if i_1(t,x) LT i_2(t,x)  AND  i_1(t,x),i_2(t,x) NE miss     o(t,x) = &lt;    0   if i_1(t,x) GE i_2(t,x)  AND  i_1(t,x),i_2(t,x) NE miss               \\\\  miss if i_1(t,x) EQ miss      OR   i_2(t,x) EQ miss ge  Greater equal               /   1   if i_1(t,x) GE i_2(t,x)  AND  i_1(t,x),i_2(t,x) NE miss     o(t,x) = &lt;    0   if i_1(t,x) LT i_2(t,x)  AND  i_1(t,x),i_2(t,x) NE miss               \\\\  miss if i_1(t,x) EQ miss      OR   i_2(t,x) EQ miss gt  Greater than               /   1   if i_1(t,x) GT i_2(t,x)  AND  i_1(t,x),i_2(t,x) NE miss     o(t,x) = &lt;    0   if i_1(t,x) LE i_2(t,x)  AND  i_1(t,x),i_2(t,x) NE miss               \\\\  miss if i_1(t,x) EQ miss      OR   i_2(t,x) EQ miss"},{"path":"https://eliocamp.github.io/rcdo/reference/compc.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparison of a field with a constant — cdo_eqc","title":"Comparison of a field with a constant — cdo_eqc","text":"module compares fields dataset constant. resulting field mask containing 1 comparison true 0 . type comparison depends chosen operator.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/compc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparison of a field with a constant — cdo_eqc","text":"","code":"cdo_eqc(ifile, c = NULL, ofile = NULL)  cdo_gec(ifile, c = NULL, ofile = NULL)  cdo_gtc(ifile, c = NULL, ofile = NULL)  cdo_lec(ifile, c = NULL, ofile = NULL)  cdo_ltc(ifile, c = NULL, ofile = NULL)  cdo_nec(ifile, c = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/compc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparison of a field with a constant — cdo_eqc","text":"ifile String path input file. c FLOAT - Constant ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/compc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Comparison of a field with a constant — cdo_eqc","text":"","code":"eqc  Equal constant                /   1   if i(t,x) EQ c     AND  i(t,x),c NE miss      o(t,x) = &lt;    0   if i(t,x) NE c     AND  i(t,x),c NE miss                \\\\  miss if i(t,x) EQ miss  OR   c EQ miss nec  Not equal constant                /   1   if i(t,x) NE c     AND  i(t,x),c NE miss      o(t,x) = &lt;    0   if i(t,x) EQ c     AND  i(t,x),c NE miss                \\\\  miss if i(t,x) EQ miss  OR   c EQ miss lec  Less equal constant                /   1   if i(t,x) LE c     AND  i(t,x),c NE miss      o(t,x) = &lt;    0   if i(t,x) GT c     AND  i(t,x),c NE miss                \\\\  miss if i(t,x) EQ miss  OR   c EQ miss ltc  Less than constant                /   1   if i(t,x) LT c     AND  i(t,x),c NE miss      o(t,x) = &lt;    0   if i(t,x) GE c     AND  i(t,x),c NE miss                \\\\  miss if i(t,x) EQ miss  OR   c EQ miss gec  Greater equal constant                /   1   if i(t,x) GE c     AND  i(t,x),c NE miss      o(t,x) = &lt;    0   if i(t,x) LT c     AND  i(t,x),c NE miss                \\\\  miss if i(t,x) EQ miss  OR   c EQ miss gtc  Greater than constant                /   1   if i(t,x) GT c     AND  i(t,x),c NE miss      o(t,x) = &lt;    0   if i(t,x) LE c     AND  i(t,x),c NE miss                \\\\  miss if i(t,x) EQ miss  OR   c EQ miss"},{"path":"https://eliocamp.github.io/rcdo/reference/cond.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional select one field — cdo_ifnotthen","title":"Conditional select one field — cdo_ifnotthen","text":"module selects field elements infile2 respect infile1 writes outfile. fields infile1 handled mask. value equal zero treated \\\"true\\ zero treated \\\"false\\\". number fields infile1 either infile2 one timestep infile2 one. fields outfile inherit meta data infile2.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/cond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional select one field — cdo_ifnotthen","text":"","code":"cdo_ifnotthen(ifile1, ifile2, ofile = NULL)  cdo_ifthen(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/cond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional select one field — cdo_ifnotthen","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/cond.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditional select one field — cdo_ifnotthen","text":"","code":"ifthen     If then                     / i_2(t,x) if i_1(t,x) NE 0  AND  i_1(t,x) NE miss            o(t,x) =                     \\\\ miss     if i_1(t,x) EQ 0  OR   i_1(t,x) EQ miss ifnotthen  If not then                     / i_2(t,x) if i_1(t,x) EQ 0  AND  i_1(t,x) NE miss            o(t,x) =                     \\\\ miss     if i_1(t,x) NE 0  OR   i_1(t,x) EQ miss"},{"path":"https://eliocamp.github.io/rcdo/reference/cond2.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional select two fields — cdo_ifthenelse","title":"Conditional select two fields — cdo_ifthenelse","text":"operator selects field elements infile2 infile3 respect infile1 writes outfile. fields infile1 handled mask. value equal zero treated \\\"true\\ zero treated \\\"false\\\". number fields infile1 either infile2 one timestep infile2 one. infile2 infile3 need number fields. fields outfile inherit meta data infile2.  / i_2(t,x) i_1(t,x) NE 0   i_1(t,x) NE miss o(t,x) = <  i_3(t,x) i_1(t,x) EQ 0   i_1[t,x) NE miss \\ miss     i_1(t,x) EQ miss","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/cond2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional select two fields — cdo_ifthenelse","text":"","code":"cdo_ifthenelse(ifile1, ifile2, ifile3, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/cond2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional select two fields — cdo_ifthenelse","text":"ifile1, ifile2, ifile3 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/condc.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional select a constant — cdo_ifnotthenc","title":"Conditional select a constant — cdo_ifnotthenc","text":"module creates fields constant value missing value. fields infile handled mask. value equal zero treated \\\"true\\ zero treated \\\"false\\\".","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/condc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional select a constant — cdo_ifnotthenc","text":"","code":"cdo_ifnotthenc(ifile, c = NULL, ofile = NULL)  cdo_ifthenc(ifile, c = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/condc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional select a constant — cdo_ifnotthenc","text":"ifile String path input file. c FLOAT - Constant ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/condc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditional select a constant — cdo_ifnotthenc","text":"","code":"ifthenc     If then constant                      / c      if i(t,x) NE 0  AND  i(t,x) NE miss             o(t,x) =                      \\\\ miss   if i(t,x) EQ 0  OR   i(t,x) EQ miss ifnotthenc  If not then constant                      / c      if i(t,x) EQ 0  AND  i(t,x) NE miss             o(t,x) =                      \\\\ miss   if i(t,x) NE 0  OR   i(t,x) EQ miss"},{"path":"https://eliocamp.github.io/rcdo/reference/consecstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Consecute timestep periods — cdo_consecsum","title":"Consecute timestep periods — cdo_consecsum","text":"module computes periods timesteps infile certain property valid. property can chosen creating mask original data, expected input format operators module. Depending operator full information period just length ending date computed.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/consecstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consecute timestep periods — cdo_consecsum","text":"","code":"cdo_consecsum(ifile, ofile = NULL)  cdo_consects(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/consecstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consecute timestep periods — cdo_consecsum","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/consecstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Consecute timestep periods — cdo_consecsum","text":"","code":"consecsum  Consecutive Sum            This operator computes periods of consecutive timesteps similar to a            runsum, but periods are finished, when the mask value is 0. That way            multiple periods can be found. Timesteps from the input are preserved. Missing            values are handled like 0, i.e. finish periods of consecutive timesteps. consects   Consecutive Timesteps            In contrast to the operator above consects only computes the length of each            period together with its last timestep. To be able to perform statistical            analysis like min, max or mean, everything else is set to missing value."},{"path":"https://eliocamp.github.io/rcdo/reference/copy.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy datasets — cdo_cat","title":"Copy datasets — cdo_cat","text":"module contains operators copy, clone concatenate datasets. infiles arbitrary number input files. input files need structure variables different timesteps.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/copy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy datasets — cdo_cat","text":"","code":"cdo_cat(ifiles, ofile = NULL)  cdo_clone(ifiles, ofile = NULL)  cdo_copy(ifiles, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/copy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy datasets — cdo_cat","text":"ifiles Character vector path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/copy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Copy datasets — cdo_cat","text":"","code":"copy   Copy datasets        Copies all input datasets to outfile. clone  Clone datasets        Copies all input datasets to outfile. In contrast to the copy operator, clone tries        not to change the input data. GRIB records are neither decoded nor decompressed. cat    Concatenate datasets        Concatenates all input datasets and appends the result to the end        of outfile. If outfile does not exist it will be created."},{"path":"https://eliocamp.github.io/rcdo/reference/dayarith.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily arithmetic — cdo_dayadd","title":"Daily arithmetic — cdo_dayadd","text":"module performs simple arithmetic time series one timestep day, month year. field infile1 corresponding field timestep infile2 day, month year used. input files need structure variables. Usually infile2 generated operator module DAYSTAT.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/dayarith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily arithmetic — cdo_dayadd","text":"","code":"cdo_dayadd(ifile1, ifile2, ofile = NULL)  cdo_daydiv(ifile1, ifile2, ofile = NULL)  cdo_daymul(ifile1, ifile2, ofile = NULL)  cdo_daysub(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/dayarith.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Daily arithmetic — cdo_dayadd","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/dayarith.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Daily arithmetic — cdo_dayadd","text":"","code":"dayadd  Add daily time series         Adds a time series and a daily time series. daysub  Subtract daily time series         Subtracts a time series and a daily time series. daymul  Multiply daily time series         Multiplies a time series and a daily time series. daydiv  Divide daily time series         Divides a time series and a daily time series."},{"path":"https://eliocamp.github.io/rcdo/reference/daypctl.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily percentile values — cdo_daypctl","title":"Daily percentile values — cdo_daypctl","text":"operator computes percentiles timesteps day infile1. algorithm uses histograms minimum maximum bounds given infile2 infile3, respectively. default number histogram bins 101. default can overridden defining environment variable CDO_PCTL_NBINS. files infile2 infile3 result corresponding daymin daymax operations, respectively. time outfile determined time middle contributing timesteps infile1. can change CDO option –timestat_date <first|middle|last>. every adjacent sequence t_1, ...,t_n timesteps day :  o(t,x) = pth percentile {(t',x), t_1<t'<=t_n}","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/daypctl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily percentile values — cdo_daypctl","text":"","code":"cdo_daypctl(ifile1, ifile2, ifile3, p = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/daypctl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Daily percentile values — cdo_daypctl","text":"ifile1, ifile2, ifile3 Strings path input files. p FLOAT - Percentile number {0, ..., 100} ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/daystat.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily statistics — cdo_dayavg","title":"Daily statistics — cdo_dayavg","text":"module computes statistical values timesteps day. Depending chosen operator minimum, maximum, range, sum, average, variance standard deviation timesteps day written outfile. time outfile determined time middle contributing timesteps infile. can change CDO option –timestat_date <first|middle|last>.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/daystat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily statistics — cdo_dayavg","text":"","code":"cdo_dayavg(ifile, complete_only = NULL, ofile = NULL)  cdo_daymax(ifile, complete_only = NULL, ofile = NULL)  cdo_daymean(ifile, complete_only = NULL, ofile = NULL)  cdo_daymin(ifile, complete_only = NULL, ofile = NULL)  cdo_dayrange(ifile, complete_only = NULL, ofile = NULL)  cdo_daystd(ifile, complete_only = NULL, ofile = NULL)  cdo_daystd1(ifile, complete_only = NULL, ofile = NULL)  cdo_daysum(ifile, complete_only = NULL, ofile = NULL)  cdo_dayvar(ifile, complete_only = NULL, ofile = NULL)  cdo_dayvar1(ifile, complete_only = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/daystat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Daily statistics — cdo_dayavg","text":"ifile String path input file. complete_only BOOL - Process last day complete ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/daystat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Daily statistics — cdo_dayavg","text":"","code":"daymin    Daily minimum           For every adjacent sequence t_1, ...,t_n of timesteps of the same day it is:            o(t,x) = min\\{i(t',x), t_1&lt;t'&lt;=t_n\\} daymax    Daily maximum           For every adjacent sequence t_1, ...,t_n of timesteps of the same day it is:            o(t,x) = max\\{i(t',x), t_1&lt;t'&lt;=t_n\\} dayrange  Daily range           For every adjacent sequence t_1, ...,t_n of timesteps of the same day it is:            o(t,x) = range\\{i(t',x), t_1&lt;t'&lt;=t_n\\} daysum    Daily sum           For every adjacent sequence t_1, ...,t_n of timesteps of the same day it is:            o(t,x) = sum\\{i(t',x), t_1&lt;t'&lt;=t_n\\} daymean   Daily mean           For every adjacent sequence t_1, ...,t_n of timesteps of the same day it is:            o(t,x) = mean\\{i(t',x), t_1&lt;t'&lt;=t_n\\} dayavg    Daily average           For every adjacent sequence t_1, ...,t_n of timesteps of the same day it is:            o(t,x) = avg\\{i(t',x), t_1&lt;t'&lt;=t_n\\} daystd    Daily standard deviation           Normalize by n. For every adjacent sequence t_1, ...,t_n of timesteps of the same day it is:            o(t,x) = std\\{i(t',x), t_1&lt;t'&lt;=t_n\\} daystd1   Daily standard deviation (n-1)           Normalize by (n-1). For every adjacent sequence t_1, ...,t_n of timesteps of the same day it is:            o(t,x) = std1\\{i(t',x), t_1&lt;t'&lt;=t_n\\} dayvar    Daily variance           Normalize by n. For every adjacent sequence t_1, ...,t_n of timesteps of the same day it is:            o(t,x) = var\\{i(t',x), t_1&lt;t'&lt;=t_n\\} dayvar1   Daily variance (n-1)           Normalize by (n-1). For every adjacent sequence t_1, ...,t_n of timesteps of the same day it is:            o(t,x) = var1\\{i(t',x), t_1&lt;t'&lt;=t_n\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/deltat.html","id":null,"dir":"Reference","previous_headings":"","what":"Difference between timesteps — cdo_deltat","title":"Difference between timesteps — cdo_deltat","text":"operator computes difference timestep.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/deltat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Difference between timesteps — cdo_deltat","text":"","code":"cdo_deltat(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/deltat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Difference between timesteps — cdo_deltat","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/derivepar.html","id":null,"dir":"Reference","previous_headings":"","what":"Derived model parameters — cdo_gheight","title":"Derived model parameters — cdo_gheight","text":"module contains operators calculate derived model parameters. currently parameters sea level pressure geopotential height. necessary input variables identified GRIB1 code number NetCDF CF standard name. Supported GRIB1 parameter tables : WMO standard table number 2 ECMWF local table number 128.  CF standard name            & Units      & GRIB 1 code surface_air_pressure      &  Pa        &  134 air_temperature           &  K         &  130 specific_humidity         &  kg/kg     &  133 surface_geopotential      &  m2 s-2    &  129 geopotential_height       &  m         &  156","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/derivepar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derived model parameters — cdo_gheight","text":"","code":"cdo_gheight(ifile, ofile = NULL)  cdo_gheight_half(ifile, ofile = NULL)  cdo_sealevelpressure(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/derivepar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derived model parameters — cdo_gheight","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/derivepar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Derived model parameters — cdo_gheight","text":"","code":"sealevelpressure  Sea level pressure                   This operator computes the sea level pressure (air_pressure_at_sea_level). Required input fields                   are surface_air_pressure, surface_geopotential and air_temperature on full hybrid sigma pressure levels. gheight           Geopotential height on full-levels                   This operator computes the geopotential height (geopotential_height) on model full-levels in metres.                   Required input fields are surface_air_pressure, surface_geopotential, specific_humidity and air_temperature                   on full hybrid sigma pressure levels. Note, this procedure is an approximation, which doesn't take into                   account the effects of e.g. cloud ice and water, rain and snow. gheight_half      Geopotential height on half-levels                   This operator computes the geopotential height (geopotential_height) on model half-levels in metres.                   Required input fields are surface_air_pressure, surface_geopotential, specific_humidity and air_temperature                   on full hybrid sigma pressure levels. Note, this procedure is an approximation, which doesn't take into                   account the effects of e.g. cloud ice and water, rain and snow."},{"path":"https://eliocamp.github.io/rcdo/reference/detrend.html","id":null,"dir":"Reference","previous_headings":"","what":"Detrend time series — cdo_detrend","title":"Detrend time series — cdo_detrend","text":"Every time series infile linearly detrended. every field element x timesteps t belong sample S(x), (t,x) NE miss. assumed timesteps equidistant, case set parameter equal=false.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/detrend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detrend time series — cdo_detrend","text":"","code":"cdo_detrend(ifile, equal = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/detrend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detrend time series — cdo_detrend","text":"ifile String path input file. equal BOOL - Set false unequal distributed timesteps (default: true) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/detrend.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Detrend time series — cdo_detrend","text":"operator keep fields timesteps concurrently memory. enough memory available use operators trend subtrend.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/dhourstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiday hourly statistics — cdo_dhouravg","title":"Multiday hourly statistics — cdo_dhouravg","text":"module computes statistical values hour day. Depending chosen operator minimum, maximum, range, sum, average, variance standard deviation hour day infile written outfile. date information output field date last contributing input field.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/dhourstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiday hourly statistics — cdo_dhouravg","text":"","code":"cdo_dhouravg(ifile, ofile = NULL)  cdo_dhourmax(ifile, ofile = NULL)  cdo_dhourmean(ifile, ofile = NULL)  cdo_dhourmin(ifile, ofile = NULL)  cdo_dhourrange(ifile, ofile = NULL)  cdo_dhourstd(ifile, ofile = NULL)  cdo_dhourstd1(ifile, ofile = NULL)  cdo_dhoursum(ifile, ofile = NULL)  cdo_dhourvar(ifile, ofile = NULL)  cdo_dhourvar1(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/dhourstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiday hourly statistics — cdo_dhouravg","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/dhourstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiday hourly statistics — cdo_dhouravg","text":"","code":"dhourmin    Multi-day hourly minimum             o(01,x) = min\\{i(t,x), day(i(t)) = 01\\}                              ...             o(24,x) = min\\{i(t,x), day(i(t)) = 24\\} dhourmax    Multi-day hourly maximum             o(01,x) = max\\{i(t,x), day(i(t)) = 01\\}                              ...             o(24,x) = max\\{i(t,x), day(i(t)) = 24\\} dhourrange  Multi-day hourly range             o(01,x) = range\\{i(t,x), day(i(t)) = 01\\}                              ...             o(24,x) = range\\{i(t,x), day(i(t)) = 24\\} dhoursum    Multi-day hourly sum             o(01,x) = sum\\{i(t,x), day(i(t)) = 01\\}                              ...             o(24,x) = sum\\{i(t,x), day(i(t)) = 24\\} dhourmean   Multi-day hourly mean             o(01,x) = mean\\{i(t,x), day(i(t)) = 01\\}                              ...             o(24,x) = mean\\{i(t,x), day(i(t)) = 24\\} dhouravg    Multi-day hourly average             o(01,x) = avg\\{i(t,x), day(i(t)) = 01\\}                              ...             o(24,x) = avg\\{i(t,x), day(i(t)) = 24\\} dhourstd    Multi-day hourly standard deviation             Normalize by n.              o(01,x) = std\\{i(t,x), day(i(t)) = 01\\}                              ...             o(24,x) = std\\{i(t,x), day(i(t)) = 24\\} dhourstd1   Multi-day hourly standard deviation (n-1)             Normalize by (n-1).              o(01,x) = std1\\{i(t,x), day(i(t)) = 01\\}                              ...             o(24,x) = std1\\{i(t,x), day(i(t)) = 24\\} dhourvar    Multi-day hourly variance             Normalize by n.              o(01,x) = var\\{i(t,x), day(i(t)) = 01\\}                              ...             o(24,x) = var\\{i(t,x), day(i(t)) = 24\\} dhourvar1   Multi-day hourly variance (n-1)             Normalize by (n-1).              o(01,x) = var1\\{i(t,x), day(i(t)) = 01\\}                              ...             o(24,x) = var1\\{i(t,x), day(i(t)) = 24\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two datasets field by field — diff","title":"Compare two datasets field by field — diff","text":"Compares contents two datasets field field. input datasets need structure fields need dimensions. Try option names number variables differ. Exit status 0 inputs 1 differ.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/diff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare two datasets field by field — diff","text":"","code":"diff   Compare two datasets listed by parameter id        Provides statistics on differences between two datasets.        For each pair of fields the operator prints one line with the following information:        - Date and Time        - Level, Gridsize and number of Missing values        - Number of different values        - Occurrence of coefficient pairs with different signs (S)        - Occurrence of zero values (Z)        - Maxima of absolute difference of coefficient pairs        - Maxima of relative difference of non-zero coefficient pairs with equal signs        - Parameter identifier diffn  Compare two datasets listed by parameter name        The same as operator diff. Using the name instead of the        identifier to label the parameter."},{"path":"https://eliocamp.github.io/rcdo/reference/distgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribute horizontal grid — cdo_distgrid","title":"Distribute horizontal grid — cdo_distgrid","text":"operator distributes dataset smaller pieces. output file contains different region horizontal source grid. 2D Lon/Lat grids can split nx*ny pieces, target grid region contains structured longitude/latitude box source grid. Data unstructured grid split nx pieces. output files named <obase><xxx><suffix> suffix filename extension derived file format. xxx five digits number target region.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/distgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribute horizontal grid — cdo_distgrid","text":"","code":"cdo_distgrid(ifile, nx = NULL, ny = NULL, obase = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/distgrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribute horizontal grid — cdo_distgrid","text":"ifile String path input file. nx INTEGER - Number regions x direction, number pieces unstructured grids ny INTEGER - Number regions y direction [default: 1] obase String basename output files.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/distgrid.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Distribute horizontal grid — cdo_distgrid","text":"operator needs open output files simultaneously. maximum number open files depends operating system!","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/dminutestat.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiday by the minute statistics — cdo_dminuteavg","title":"Multiday by the minute statistics — cdo_dminuteavg","text":"module computes statistical values minute day. Depending chosen operator minimum, maximum, range, sum, average, variance standard deviation minute day infile written outfile. date information output field date last contributing input field.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/dminutestat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiday by the minute statistics — cdo_dminuteavg","text":"","code":"cdo_dminuteavg(ifile, ofile = NULL)  cdo_dminutemax(ifile, ofile = NULL)  cdo_dminutemean(ifile, ofile = NULL)  cdo_dminutemin(ifile, ofile = NULL)  cdo_dminuterange(ifile, ofile = NULL)  cdo_dminutestd(ifile, ofile = NULL)  cdo_dminutestd1(ifile, ofile = NULL)  cdo_dminutesum(ifile, ofile = NULL)  cdo_dminutevar(ifile, ofile = NULL)  cdo_dminutevar1(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/dminutestat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiday by the minute statistics — cdo_dminuteavg","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/dminutestat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiday by the minute statistics — cdo_dminuteavg","text":"","code":"dminutemin    Multi-day by the minute minimum               o(01,x) = min\\{i(t,x), day(i(t)) = 01\\}                                ...               o(1440,x) = min\\{i(t,x), day(i(t)) = 1440\\} dminutemax    Multi-day by the minute maximum               o(01,x) = max\\{i(t,x), day(i(t)) = 01\\}                                ...               o(1440,x) = max\\{i(t,x), day(i(t)) = 1440\\} dminuterange  Multi-day by the minute range               o(01,x) = range\\{i(t,x), day(i(t)) = 01\\}                                ...               o(1440,x) = range\\{i(t,x), day(i(t)) = 1440\\} dminutesum    Multi-day by the minute sum               o(01,x) = sum\\{i(t,x), day(i(t)) = 01\\}                                ...               o(1440,x) = sum\\{i(t,x), day(i(t)) = 1440\\} dminutemean   Multi-day by the minute mean               o(01,x) = mean\\{i(t,x), day(i(t)) = 01\\}                                ...               o(1440,x) = mean\\{i(t,x), day(i(t)) = 1440\\} dminuteavg    Multi-day by the minute average               o(01,x) = avg\\{i(t,x), day(i(t)) = 01\\}                                ...               o(1440,x) = avg\\{i(t,x), day(i(t)) = 1440\\} dminutestd    Multi-day by the minute standard deviation               Normalize by n.                o(01,x) = std\\{i(t,x), day(i(t)) = 01\\}                                ...               o(1440,x) = std\\{i(t,x), day(i(t)) = 1440\\} dminutestd1   Multi-day by the minute standard deviation (n-1)               Normalize by (n-1).                o(01,x) = std1\\{i(t,x), day(i(t)) = 01\\}                                ...               o(1440,x) = std1\\{i(t,x), day(i(t)) = 1440\\} dminutevar    Multi-day by the minute variance               Normalize by n.                o(01,x) = var\\{i(t,x), day(i(t)) = 01\\}                                ...               o(1440,x) = var\\{i(t,x), day(i(t)) = 1440\\} dminutevar1   Multi-day by the minute variance (n-1)               Normalize by (n-1).                o(01,x) = var1\\{i(t,x), day(i(t)) = 01\\}                                ...               o(1440,x) = var1\\{i(t,x), day(i(t)) = 1440\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/duplicate.html","id":null,"dir":"Reference","previous_headings":"","what":"Duplicates a dataset — cdo_duplicate","title":"Duplicates a dataset — cdo_duplicate","text":"operator duplicates contents infile writes result outfile. optional parameter sets number duplicates, default 2.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/duplicate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Duplicates a dataset — cdo_duplicate","text":"","code":"cdo_duplicate(ifile, ndup = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/duplicate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Duplicates a dataset — cdo_duplicate","text":"ifile String path input file. ndup INTEGER - Number duplicates, default 2. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecacdd.html","id":null,"dir":"Reference","previous_headings":"","what":"Consecutive dry days index per time period — cdo_eca_cdd","title":"Consecutive dry days index per time period — cdo_eca_cdd","text":"Let infile time series daily precipitation amount RR, largest number consecutive days RR less R counted. R optional parameter default R = 1 mm. output variable number dry periods N days. Parameter comma-separated list \\\"key=values\\\" pairs.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecacdd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consecutive dry days index per time period — cdo_eca_cdd","text":"","code":"cdo_eca_cdd(ifile, R = NULL, N = NULL, freq = NULL, ofile = NULL)  cdo_etccdi_cdd(ifile, R = NULL, N = NULL, freq = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecacdd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consecutive dry days index per time period — cdo_eca_cdd","text":"ifile String path input file. R FLOAT - Precipitation threshold (unit: mm; default: R = 1 mm) N INTEGER - Minimum number days exceeded (default: N = 5) freq STRING - Output frequency (year, month) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecacdd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Consecutive dry days index per time period — cdo_eca_cdd","text":"","code":"eca_cdd     Consecutive dry days index per time period             The operator counts over the entire time series.             The date information of a timestep in outfile is the date of             the last contributing timestep in infile. etccdi_cdd  Consecutive dry days index per time period             The default output frequency is yearly.             Periods within overlapping years are accounted for the first year.             The date information of a timestep in outfile is the mid of             the frequency interval."},{"path":"https://eliocamp.github.io/rcdo/reference/ecacfd.html","id":null,"dir":"Reference","previous_headings":"","what":"Consecutive frost days index per time period — cdo_eca_cfd","title":"Consecutive frost days index per time period — cdo_eca_cfd","text":"Let infile time series daily minimum temperature TN, largest number consecutive days TN < 0 °C counted. Note TN given units Kelvin. output variable number frost periods N days. date information timestep outfile date last contributing timestep infile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecacfd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consecutive frost days index per time period — cdo_eca_cfd","text":"","code":"cdo_eca_cfd(ifile, N = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecacfd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consecutive frost days index per time period — cdo_eca_cfd","text":"ifile String path input file. N INTEGER - Minimum number days exceeded (default: N = 5) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecacsu.html","id":null,"dir":"Reference","previous_headings":"","what":"Consecutive summer days index per time period — cdo_eca_csu","title":"Consecutive summer days index per time period — cdo_eca_csu","text":"Let infile time series daily maximum temperature TX, largest number consecutive days TX > T counted. number T optional parameter default T = 25°C. Note TN given units Kelvin, whereas T given degrees Celsius. output variable number summer periods N days. date information timestep outfile date last contributing timestep infile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecacsu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consecutive summer days index per time period — cdo_eca_csu","text":"","code":"cdo_eca_csu(ifile, T = NULL, N = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecacsu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consecutive summer days index per time period — cdo_eca_csu","text":"ifile String path input file. T FLOAT - Temperature threshold (unit: °C; default: T = 25°C) N INTEGER - Minimum number days exceeded (default: N = 5) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecacwd.html","id":null,"dir":"Reference","previous_headings":"","what":"Consecutive wet days index per time period — cdo_eca_cwd","title":"Consecutive wet days index per time period — cdo_eca_cwd","text":"Let infile time series daily precipitation amount RR, largest number consecutive days RR least R counted. R optional parameter default R = 1 mm. output variable number wet periods N days. Parameter comma-separated list \\\"key=values\\\" pairs.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecacwd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consecutive wet days index per time period — cdo_eca_cwd","text":"","code":"cdo_eca_cwd(ifile, R = NULL, N = NULL, freq = NULL, ofile = NULL)  cdo_etccdi_cwd(ifile, R = NULL, N = NULL, freq = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecacwd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consecutive wet days index per time period — cdo_eca_cwd","text":"ifile String path input file. R FLOAT - Precipitation threshold (unit: mm; default: R = 1 mm) N INTEGER - Minimum number days exceeded (default: N = 5) freq STRING - Output frequency (year, month) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecacwd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Consecutive wet days index per time period — cdo_eca_cwd","text":"","code":"eca_cwd     Consecutive wet days index per time period             The operator counts over the entire time series.             The date information of a timestep in outfile is the date of             the last contributing timestep in infile. etccdi_cwd  Consecutive wet days index per time period             The default output frequency is yearly.             Periods within overlapping years are accounted for the first year.             The date information of a timestep in outfile is the mid of             the frequency interval."},{"path":"https://eliocamp.github.io/rcdo/reference/ecacwdi.html","id":null,"dir":"Reference","previous_headings":"","what":"Cold wave duration index wrt mean of reference period — cdo_eca_cwdi","title":"Cold wave duration index wrt mean of reference period — cdo_eca_cwdi","text":"Let infile1 time series daily minimum temperature TN, let infile2 mean TNnorm daily minimum temperatures period used reference. counted number days , intervals least nday consecutive days, TN < TNnorm - T. numbers nday T optional parameters default nday = 6 T = 5°C. output variable number cold waves longer equal nday days. TNnorm calculated mean minimum temperatures five day window centred calendar day given climate reference period. Note TN TNnorm given units. date information timestep outfile date last contributing timestep infile1.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecacwdi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cold wave duration index wrt mean of reference period — cdo_eca_cwdi","text":"","code":"cdo_eca_cwdi(ifile1, ifile2, nday = NULL, T = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecacwdi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cold wave duration index wrt mean of reference period — cdo_eca_cwdi","text":"ifile1, ifile2 Strings path input files. nday INTEGER - Number consecutive days (default: nday = 6) T FLOAT - Temperature offset (unit: °C; default: T = 5°C) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecacwfi.html","id":null,"dir":"Reference","previous_headings":"","what":"Coldspell days index wrt 10th percentile of reference period — cdo_eca_cwfi","title":"Coldspell days index wrt 10th percentile of reference period — cdo_eca_cwfi","text":"Let infile1 time series daily mean temperature TG, infile2 10th percentile TGn10 daily mean temperatures period used reference. counted number days , intervals least nday consecutive days, TG < TGn10. number nday optional parameter default nday = 6. output variable number cold-spell periods longer equal nday days. TGn10 calculated 10th percentile daily mean temperatures five day window centred calendar day given climate reference period. Note TG TGn10 given units.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecacwfi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coldspell days index wrt 10th percentile of reference period — cdo_eca_cwfi","text":"","code":"cdo_eca_cwfi(ifile1, ifile2, nday = NULL, freq = NULL, ofile = NULL)  cdo_etccdi_csdi(ifile1, ifile2, nday = NULL, freq = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecacwfi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coldspell days index wrt 10th percentile of reference period — cdo_eca_cwfi","text":"ifile1, ifile2 Strings path input files. nday INTEGER - Number consecutive days (default: nday = 6) freq STRING - Output frequency (year, month) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecacwfi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coldspell days index wrt 10th percentile of reference period — cdo_eca_cwfi","text":"","code":"eca_cwfi     Cold-spell days index wrt 10th percentile of reference period              The operator counts over the entire time series.              The date information of a timestep in outfile is the date of              the last contributing timestep in infile. etccdi_csdi  Cold-spell duration index              The default output frequency is yearly.              Periods within overlapping years are accounted for the first year.              The date information of a timestep in outfile is the mid of              the frequency interval."},{"path":"https://eliocamp.github.io/rcdo/reference/ecaetr.html","id":null,"dir":"Reference","previous_headings":"","what":"Intraperiod extreme temperature range — cdo_eca_etr","title":"Intraperiod extreme temperature range — cdo_eca_etr","text":"Let infile1 infile2 time series thr maximum minimum temperature TX TN, respectively. extreme temperature range difference maximum TX minimum TN. Note TX TN given units. date information timestep outfile date last contributing timesteps infile1 infile2.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecaetr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intraperiod extreme temperature range — cdo_eca_etr","text":"","code":"cdo_eca_etr(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecaetr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intraperiod extreme temperature range — cdo_eca_etr","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecafd.html","id":null,"dir":"Reference","previous_headings":"","what":"Frost days index per time period — cdo_eca_fd","title":"Frost days index per time period — cdo_eca_fd","text":"Let infile time series daily minimum temperature TN, number days TN < 0 °C counted. Note TN given units Kelvin. Parameter comma-separated list \\\"key=value\\\" pairs.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecafd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frost days index per time period — cdo_eca_fd","text":"","code":"cdo_eca_fd(ifile, freq = NULL, ofile = NULL)  cdo_etccdi_fd(ifile, freq = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecafd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frost days index per time period — cdo_eca_fd","text":"ifile String path input file. freq STRING - Output frequency (year, month) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecafd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Frost days index per time period — cdo_eca_fd","text":"","code":"eca_fd     Frost days index per time period            The operator counts over the entire time series.            The date information of a timestep in outfile is the date of            the last contributing timestep in infile. etccdi_fd  Frost days index per time period            The default output frequency is yearly.            The date information of a timestep in outfile is the mid of            the frequency interval."},{"path":"https://eliocamp.github.io/rcdo/reference/ecagsl.html","id":null,"dir":"Reference","previous_headings":"","what":"Thermal Growing season length index — cdo_eca_gsl","title":"Thermal Growing season length index — cdo_eca_gsl","text":"Let infile1 time series daily mean temperature TG, infile2 land-water mask. Within period 12 months, thermal growing season length officially defined number days : - first occurrence least nday consecutive days TG > T - first occurrence least nday consecutive days TG < T within last 6 months northern hemisphere, period corresponds regular year, whereas southern hemisphere, starts July 1st. Please note, definition may lead weird results concerning values TG = T: first half period, days contribute gsl, within second half. Moreover definition lead discontinuous values equatorial regions.  numbers nday T optional parameter default nday = 6 T = 5°C. number fland optional parameter default value fland = 0.5 denotes fraction grid point covered land order included calculation. output variable start day year growing season. Note TG given units Kelvin, whereas T given degrees Celsius.  date information timestep outfile date last contributing timestep infile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecagsl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thermal Growing season length index — cdo_eca_gsl","text":"","code":"cdo_eca_gsl(ifile1, ifile2, nday = NULL, T = NULL, fland = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecagsl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thermal Growing season length index — cdo_eca_gsl","text":"ifile1, ifile2 Strings path input files. nday INTEGER - Number consecutive days (default: nday = 6) T FLOAT - Temperature threshold (unit: °C; default: T = 5°C) fland FLOAT - Land fraction threshold (default: fland = 0.5) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecahd.html","id":null,"dir":"Reference","previous_headings":"","what":"Heating degree days per time period — cdo_eca_hd","title":"Heating degree days per time period — cdo_eca_hd","text":"Let infile time series daily mean temperature TG, heating degree days defined sum T1 - TG, values TG < T2 considered. T1 T2 omitted, temperature 17°C used parameters. T1 given, T2 set T1. Note TG given units kelvin, whereas T1 T2 given degrees Celsius. date information timestep outfile date last contributing timestep infile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecahd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heating degree days per time period — cdo_eca_hd","text":"","code":"cdo_eca_hd(ifile, T1 = NULL, T2 = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecahd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heating degree days per time period — cdo_eca_hd","text":"ifile String path input file. T1 FLOAT - Temperature limit (unit: °C; default: T1 = 17°C) T2 FLOAT - Temperature limit (unit: °C; default: T2 = T1) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecahwdi.html","id":null,"dir":"Reference","previous_headings":"","what":"Heat wave duration index wrt mean of reference period — cdo_eca_hwdi","title":"Heat wave duration index wrt mean of reference period — cdo_eca_hwdi","text":"Let infile1 time series daily maximum temperature TX, let infile2 mean TXnorm daily maximum temperatures period used reference. counted number days , intervals least nday consecutive days, TX > TXnorm + T. numbers nday T optional parameters default nday = 6 T = 5°C. output variable number heat waves longer equal nday days. TXnorm calculated mean maximum temperatures five day window centred calendar day given climate reference period. Note TX TXnorm given units. date information timestep outfile date last contributing timestep infile1.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecahwdi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heat wave duration index wrt mean of reference period — cdo_eca_hwdi","text":"","code":"cdo_eca_hwdi(ifile1, ifile2, nday = NULL, T = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecahwdi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heat wave duration index wrt mean of reference period — cdo_eca_hwdi","text":"ifile1, ifile2 Strings path input files. nday INTEGER - Number consecutive days (default: nday = 6) T FLOAT - Temperature offset (unit: °C; default: T = 5°C) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecahwfi.html","id":null,"dir":"Reference","previous_headings":"","what":"Warm spell days index wrt 90th percentile of reference period — cdo_eca_hwfi","title":"Warm spell days index wrt 90th percentile of reference period — cdo_eca_hwfi","text":"Let infile1 time series daily mean temperature TG, infile2 90th percentile TGn90 daily mean temperatures period used reference. counted number days , intervals least nday consecutive days, TG > TGn90. number nday optional parameter default nday = 6. output variable number warm-spell periods longer equal nday days. TGn90 calculated 90th percentile daily mean temperatures five day window centred calendar day given climate reference period. Note TG TGn90 given units. Parameter comma-separated list \\\"key=values\\\" pairs.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecahwfi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Warm spell days index wrt 90th percentile of reference period — cdo_eca_hwfi","text":"","code":"cdo_eca_hwfi(ifile1, ifile2, nday = NULL, freq = NULL, ofile = NULL)  cdo_etccdi_wsdi(ifile1, ifile2, nday = NULL, freq = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecahwfi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Warm spell days index wrt 90th percentile of reference period — cdo_eca_hwfi","text":"ifile1, ifile2 Strings path input files. nday INTEGER - Number consecutive days (default: nday = 6) freq STRING - Output frequency (year, month) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecahwfi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Warm spell days index wrt 90th percentile of reference period — cdo_eca_hwfi","text":"","code":"eca_hwfi     Warm spell days index wrt 90th percentile of reference period              The operator counts over the entire time series.              The date information of a timestep in outfile is the date of              the last contributing timestep in infile. etccdi_wsdi  Warm Spell Duration Index              The default output frequency is yearly.              Periods within overlapping years are accounted for the first year.              The date information of a timestep in outfile is the mid of              the frequency interval."},{"path":"https://eliocamp.github.io/rcdo/reference/ecaid.html","id":null,"dir":"Reference","previous_headings":"","what":"Ice days index per time period — cdo_eca_id","title":"Ice days index per time period — cdo_eca_id","text":"Let infile time series daily maximum temperature TX, number days TX < 0 °C counted. Note TX given units Kelvin. Parameter comma-separated list \\\"key=values\\\" pairs.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecaid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ice days index per time period — cdo_eca_id","text":"","code":"cdo_eca_id(ifile, freq = NULL, ofile = NULL)  cdo_etccdi_id(ifile, freq = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecaid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ice days index per time period — cdo_eca_id","text":"ifile String path input file. freq STRING - Output frequency (year, month) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecaid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ice days index per time period — cdo_eca_id","text":"","code":"eca_id     Ice days index per time period            The operator counts over the entire time series.            The date information of a timestep in outfile is the date of            the last contributing timestep in infile. etccdi_id  Ice days index per time period            The default output frequency is yearly.            The date information of a timestep in outfile is the mid of            the frequency interval."},{"path":"https://eliocamp.github.io/rcdo/reference/ecapd.html","id":null,"dir":"Reference","previous_headings":"","what":"Precipitation days index per time period — cdo_eca_pd","title":"Precipitation days index per time period — cdo_eca_pd","text":"Let infile time series daily precipitation amount RR [mm] (alternatively [kg m-2]), number days RR least x mm counted. eca_r10mm eca_r20mm specific ECA operators daily precipitation amount 10 20 mm respectively. date information timestep outfile date last contributing timestep infile except etccdi operator. Parameter comma-separated list \\\"key=values\\\" pairs.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecapd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precipitation days index per time period — cdo_eca_pd","text":"","code":"cdo_eca_pd(ifile, x = NULL, freq = NULL, ofile = NULL)  cdo_eca_r10mm(ifile, x = NULL, freq = NULL, ofile = NULL)  cdo_eca_r20mm(ifile, x = NULL, freq = NULL, ofile = NULL)  cdo_etccdi_r1mm(ifile, x = NULL, freq = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecapd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Precipitation days index per time period — cdo_eca_pd","text":"ifile String path input file. x FLOAT - Daily precipitation amount threshold [mm] freq STRING - Output frequency (year, month) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecapd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Precipitation days index per time period — cdo_eca_pd","text":"","code":"eca_pd       Precipitation days index per time period              Generic ECA operator with daily precipitation sum exceeding x mm. eca_r10mm    Heavy precipitation days index per time period              Specific ECA operator with daily precipitation sum exceeding 10 mm. eca_r20mm    Very heavy precipitation days index per time period              Specific ECA operator with daily precipitation sum exceeding 20 mm. etccdi_r1mm  Precipitation days index per time period              The default output frequency is yearly.              The date information of a timestep in outfile is the mid of              the frequency interval."},{"path":"https://eliocamp.github.io/rcdo/reference/ecapd.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Precipitation days index per time period — cdo_eca_pd","text":"Precipitation rates [mm/s] converted precipitation amounts (multiply 86400 s). Apart metadata information result eca_pd,1 eca_rr1 .","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecar75p.html","id":null,"dir":"Reference","previous_headings":"","what":"Moderate wet days wrt 75th percentile of reference period — cdo_eca_r75p","title":"Moderate wet days wrt 75th percentile of reference period — cdo_eca_r75p","text":"Let infile1 time series RR daily precipitation amount wet days (precipitation >= 1 mm) infile2 75th percentile RRn75 daily precipitation amount wet days period used reference. percentage wet days RR > RRn75 calculated. RRn75 calculated 75th percentile wet days given climate reference period. Usually infile2 generated operator ydaypctl,75. date information timestep outfile date last contributing timestep infile1.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecar75p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moderate wet days wrt 75th percentile of reference period — cdo_eca_r75p","text":"","code":"cdo_eca_r75p(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecar75p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moderate wet days wrt 75th percentile of reference period — cdo_eca_r75p","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecar75ptot.html","id":null,"dir":"Reference","previous_headings":"","what":"Precipitation percent due to R75p days — cdo_eca_r75ptot","title":"Precipitation percent due to R75p days — cdo_eca_r75ptot","text":"Let infile1 time series RR daily precipitation amount wet days (precipitation >= 1 mm) infile2 75th percentile RRn75 daily precipitation amount wet days period used reference. ratio precipitation sum wet days RR > RRn75 total precipitation sum calculated. RRn75 calculated 75th percentile wet days given climate reference period. Usually infile2 generated operator ydaypctl,75. date information timestep outfile date last contributing timestep infile1.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecar75ptot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precipitation percent due to R75p days — cdo_eca_r75ptot","text":"","code":"cdo_eca_r75ptot(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecar75ptot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Precipitation percent due to R75p days — cdo_eca_r75ptot","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecar90p.html","id":null,"dir":"Reference","previous_headings":"","what":"Wet days wrt 90th percentile of reference period — cdo_eca_r90p","title":"Wet days wrt 90th percentile of reference period — cdo_eca_r90p","text":"Let infile1 time series RR daily precipitation amount wet days (precipitation >= 1 mm) infile2 90th percentile RRn90 daily precipitation amount wet days period used reference. percentage wet days RR > RRn90 calculated. RRn90 calculated 90th percentile wet days given climate reference period. Usually infile2 generated operator ydaypctl,90. date information timestep outfile date last contributing timestep infile1.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecar90p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wet days wrt 90th percentile of reference period — cdo_eca_r90p","text":"","code":"cdo_eca_r90p(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecar90p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wet days wrt 90th percentile of reference period — cdo_eca_r90p","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecar90ptot.html","id":null,"dir":"Reference","previous_headings":"","what":"Precipitation percent due to R90p days — cdo_eca_r90ptot","title":"Precipitation percent due to R90p days — cdo_eca_r90ptot","text":"Let infile1 time series RR daily precipitation amount wet days (precipitation >= 1 mm) infile2 90th percentile RRn90 daily precipitation amount wet days period used reference. ratio precipitation sum wet days RR > RRn90 total precipitation sum calculated. RRn90 calculated 90th percentile wet days given climate reference period. Usually infile2 generated operator ydaypctl,90. date information timestep outfile date last contributing timestep infile1.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecar90ptot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precipitation percent due to R90p days — cdo_eca_r90ptot","text":"","code":"cdo_eca_r90ptot(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecar90ptot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Precipitation percent due to R90p days — cdo_eca_r90ptot","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecar95p.html","id":null,"dir":"Reference","previous_headings":"","what":"Very wet days wrt 95th percentile of reference period — cdo_eca_r95p","title":"Very wet days wrt 95th percentile of reference period — cdo_eca_r95p","text":"Let infile1 time series RR daily precipitation amount wet days (precipitation >= 1 mm) infile2 95th percentile RRn95 daily precipitation amount wet days period used reference. percentage wet days RR > RRn95 calculated. RRn95 calculated 95th percentile wet days given climate reference period. Usually infile2 generated operator ydaypctl,95. date information timestep outfile date last contributing timestep infile1.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecar95p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Very wet days wrt 95th percentile of reference period — cdo_eca_r95p","text":"","code":"cdo_eca_r95p(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecar95p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Very wet days wrt 95th percentile of reference period — cdo_eca_r95p","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecar95ptot.html","id":null,"dir":"Reference","previous_headings":"","what":"Precipitation percent due to R95p days — cdo_eca_r95ptot","title":"Precipitation percent due to R95p days — cdo_eca_r95ptot","text":"Let infile1 time series RR daily precipitation amount wet days (precipitation >= 1 mm) infile2 95th percentile RRn95 daily precipitation amount wet days period used reference. ratio precipitation sum wet days RR > RRn95 total precipitation sum calculated. RRn95 calculated 95th percentile wet days given climate reference period. Usually infile2 generated operator ydaypctl,95. date information timestep outfile date last contributing timestep infile1.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecar95ptot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precipitation percent due to R95p days — cdo_eca_r95ptot","text":"","code":"cdo_eca_r95ptot(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecar95ptot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Precipitation percent due to R95p days — cdo_eca_r95ptot","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecar99p.html","id":null,"dir":"Reference","previous_headings":"","what":"Extremely wet days wrt 99th percentile of reference period — cdo_eca_r99p","title":"Extremely wet days wrt 99th percentile of reference period — cdo_eca_r99p","text":"Let infile1 time series RR daily precipitation amount wet days (precipitation >= 1 mm) infile2 99th percentile RRn99 daily precipitation amount wet days period used reference. percentage wet days RR > RRn99 calculated. RRn99 calculated 99th percentile wet days given climate reference period. Usually infile2 generated operator ydaypctl,99. date information timestep outfile date last contributing timestep infile1.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecar99p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extremely wet days wrt 99th percentile of reference period — cdo_eca_r99p","text":"","code":"cdo_eca_r99p(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecar99p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extremely wet days wrt 99th percentile of reference period — cdo_eca_r99p","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecar99ptot.html","id":null,"dir":"Reference","previous_headings":"","what":"Precipitation percent due to R99p days — cdo_eca_r99ptot","title":"Precipitation percent due to R99p days — cdo_eca_r99ptot","text":"Let infile1 time series RR daily precipitation amount wet days (precipitation >= 1 mm) infile2 99th percentile RRn99 daily precipitation amount wet days period used reference. ratio precipitation sum wet days RR > RRn99 total precipitation sum calculated. RRn99 calculated 99th percentile wet days given climate reference period. Usually infile2 generated operator ydaypctl,99. date information timestep outfile date last contributing timestep infile1.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecar99ptot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precipitation percent due to R99p days — cdo_eca_r99ptot","text":"","code":"cdo_eca_r99ptot(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecar99ptot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Precipitation percent due to R99p days — cdo_eca_r99ptot","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecarr1.html","id":null,"dir":"Reference","previous_headings":"","what":"Wet days index per time period — cdo_eca_rr1","title":"Wet days index per time period — cdo_eca_rr1","text":"Let infile time series daily precipitation amount RR [mm] (alternatively [kg m-2]), number days RR least R counted. R optional parameter default R = 1 mm. date information timestep outfile date last contributing timestep infile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecarr1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wet days index per time period — cdo_eca_rr1","text":"","code":"cdo_eca_rr1(ifile, R = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecarr1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wet days index per time period — cdo_eca_rr1","text":"ifile String path input file. R FLOAT - Precipitation threshold (unit: mm; default: R = 1 mm) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecarx1day.html","id":null,"dir":"Reference","previous_headings":"","what":"Highest one day precipitation amount per time period — cdo_eca_rx1day","title":"Highest one day precipitation amount per time period — cdo_eca_rx1day","text":"Let infile time series daily precipitation amount RR, maximum RR written outfile. optional parameter mode set 'm' maximum daily precipitation amounts determined month. Parameter comma-separated list \\\"key=values\\\" pairs.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecarx1day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Highest one day precipitation amount per time period — cdo_eca_rx1day","text":"","code":"cdo_eca_rx1day(ifile, freq = NULL, ofile = NULL)  cdo_etccdi_rx1day(ifile, freq = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecarx1day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Highest one day precipitation amount per time period — cdo_eca_rx1day","text":"ifile String path input file. freq STRING - Output frequency (year, month) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecarx1day.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Highest one day precipitation amount per time period — cdo_eca_rx1day","text":"","code":"eca_rx1day     Highest one day precipitation amount per time period                The operator counts over the entire time series.                The date information of a timestep in outfile is the date of                the last contributing timestep in infile. etccdi_rx1day  Maximum 1-day Precipitation                The default output frequency is yearly.                The date information of a timestep in outfile is the mid of                the frequency interval."},{"path":"https://eliocamp.github.io/rcdo/reference/ecarx5day.html","id":null,"dir":"Reference","previous_headings":"","what":"Highest fiveday precipitation amount per time period — cdo_eca_rx5day","title":"Highest fiveday precipitation amount per time period — cdo_eca_rx5day","text":"Let infile time series 5-day precipitation totals RR, maximum RR written outfile. output variable number 5 day period precipitation totals greater x mm, x optional parameter default x = 50 mm. Parameter comma-separated list \\\"key=values\\\" pairs.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecarx5day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Highest fiveday precipitation amount per time period — cdo_eca_rx5day","text":"","code":"cdo_eca_rx5day(ifile, x = NULL, freq = NULL, ofile = NULL)  cdo_etccdi_rx5day(ifile, x = NULL, freq = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecarx5day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Highest fiveday precipitation amount per time period — cdo_eca_rx5day","text":"ifile String path input file. x FLOAT - Precipitation threshold (unit: mm; default: x = 50 mm) freq STRING - Output frequency (year, month) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecarx5day.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Highest fiveday precipitation amount per time period — cdo_eca_rx5day","text":"","code":"eca_rx5day     Highest five-day precipitation amount per time period                The operator counts over the entire time series.                The date information of a timestep in outfile is the date of                the last contributing timestep in infile. etccdi_rx5day  Highest five-day precipitation amount per time period                The default output frequency is yearly.                Periods within overlapping years are accounted for the first year.                The date information of a timestep in outfile is the mid of                the frequency interval."},{"path":"https://eliocamp.github.io/rcdo/reference/ecasdii.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple daily intensity index per time period — cdo_eca_sdii","title":"Simple daily intensity index per time period — cdo_eca_sdii","text":"Let infile time series daily precipitation amount RR, mean precipitation amount wet days (RR >= R) written outfile. R optional parameter default R = 1 mm. date information timestep outfile date last contributing timestep infile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecasdii.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple daily intensity index per time period — cdo_eca_sdii","text":"","code":"cdo_eca_sdii(ifile, R = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecasdii.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple daily intensity index per time period — cdo_eca_sdii","text":"ifile String path input file. R FLOAT - Precipitation threshold (unit: mm; default: R = 1 mm) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecasu.html","id":null,"dir":"Reference","previous_headings":"","what":"Summer days index per time period — cdo_eca_su","title":"Summer days index per time period — cdo_eca_su","text":"Let infile time series daily maximum temperature TX, number days TX > T counted. number T optional parameter default T = 25°C. Note TX given units Kelvin, whereas T given degrees Celsius. Parameter comma-separated list \\\"key=values\\\" pairs.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecasu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summer days index per time period — cdo_eca_su","text":"","code":"cdo_eca_su(ifile, T = NULL, freq = NULL, ofile = NULL)  cdo_etccdi_su(ifile, T = NULL, freq = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecasu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summer days index per time period — cdo_eca_su","text":"ifile String path input file. T FLOAT - Temperature threshold (unit: °C; default: T = 25°C) freq STRING - Output frequency (year, month) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecasu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summer days index per time period — cdo_eca_su","text":"","code":"eca_su     Summer days index per time period            The operator counts over the entire time series.            The date information of a timestep in outfile is the date of            the last contributing timestep in infile. etccdi_su  Summer days index per time period            The default output frequency is yearly.            The date information of a timestep in outfile is the mid of            the frequency interval."},{"path":"https://eliocamp.github.io/rcdo/reference/ecatg10p.html","id":null,"dir":"Reference","previous_headings":"","what":"Cold days percent wrt 10th percentile of reference period — cdo_eca_tg10p","title":"Cold days percent wrt 10th percentile of reference period — cdo_eca_tg10p","text":"Let infile1 time series daily mean temperature TG, infile2 10th percentile TGn10 daily mean temperatures period used reference. percentage time TG < TGn10 calculated. TGn10 calculated 10th percentile daily mean temperatures five day window centred calendar day given climate reference period. Note TG TGn10 given units. date information timestep outfile date last contributing timestep infile1.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecatg10p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cold days percent wrt 10th percentile of reference period — cdo_eca_tg10p","text":"","code":"cdo_eca_tg10p(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecatg10p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cold days percent wrt 10th percentile of reference period — cdo_eca_tg10p","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecatg90p.html","id":null,"dir":"Reference","previous_headings":"","what":"Warm days percent wrt 90th percentile of reference period — cdo_eca_tg90p","title":"Warm days percent wrt 90th percentile of reference period — cdo_eca_tg90p","text":"Let infile1 time series daily mean temperature TG, infile2 90th percentile TGn90 daily mean temperatures period used reference. percentage time TG > TGn90 calculated. TGn90 calculated 90th percentile daily mean temperatures five day window centred calendar day given climate reference period. Note TG TGn90 given units. date information timestep outfile date last contributing timestep infile1.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecatg90p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Warm days percent wrt 90th percentile of reference period — cdo_eca_tg90p","text":"","code":"cdo_eca_tg90p(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecatg90p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Warm days percent wrt 90th percentile of reference period — cdo_eca_tg90p","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecatn10p.html","id":null,"dir":"Reference","previous_headings":"","what":"Cold nights percent wrt 10th percentile of reference period — cdo_eca_tn10p","title":"Cold nights percent wrt 10th percentile of reference period — cdo_eca_tn10p","text":"Let infile1 time serie daily minimum temperature TN, infile2 10th percentile TNn10 daily minimum temperatures period used reference. percentage time TN < TNn10 calculated. TNn10 calculated 10th percentile daily minimum temperatures five day window centred calendar day given climate reference period. Note TN TNn10 given units. date information timestep outfile date last contributing timestep infile1.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecatn10p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cold nights percent wrt 10th percentile of reference period — cdo_eca_tn10p","text":"","code":"cdo_eca_tn10p(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecatn10p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cold nights percent wrt 10th percentile of reference period — cdo_eca_tn10p","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecatn90p.html","id":null,"dir":"Reference","previous_headings":"","what":"Warm nights percent wrt 90th percentile of reference period — cdo_eca_tn90p","title":"Warm nights percent wrt 90th percentile of reference period — cdo_eca_tn90p","text":"Let infile1 time series daily minimum temperature TN, infile2 90th percentile TNn90 daily minimum temperatures period used reference. percentage time TN > TNn90 calculated. TNn90 calculated 90th percentile daily minimum temperatures five day window centred calendar day given climate reference period. Note TN TNn90 given units. date information timestep outfile date last contributing timestep infile1.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecatn90p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Warm nights percent wrt 90th percentile of reference period — cdo_eca_tn90p","text":"","code":"cdo_eca_tn90p(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecatn90p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Warm nights percent wrt 90th percentile of reference period — cdo_eca_tn90p","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecatr.html","id":null,"dir":"Reference","previous_headings":"","what":"Tropical nights index per time period — cdo_eca_tr","title":"Tropical nights index per time period — cdo_eca_tr","text":"Let infile time series daily minimum temperature TN, number days TN > T counted. number T optional parameter default T = 20°C. Note TN given units Kelvin, whereas T given degrees Celsius. Parameter comma-separated list \\\"key=values\\\" pairs.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecatr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tropical nights index per time period — cdo_eca_tr","text":"","code":"cdo_eca_tr(ifile, T = NULL, freq = NULL, ofile = NULL)  cdo_etccdi_tr(ifile, T = NULL, freq = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecatr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tropical nights index per time period — cdo_eca_tr","text":"ifile String path input file. T FLOAT - Temperature threshold (unit: °C; default: T = 20°C) freq STRING - Output frequency (year, month) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecatr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tropical nights index per time period — cdo_eca_tr","text":"","code":"eca_tr     Tropical nights index per time period            The operator counts over the entire time series.            The date information of a timestep in outfile is the date of            the last contributing timestep in infile. etccdi_tr  Tropical nights index per time period            The default output frequency is yearly.            The date information of a timestep in outfile is the mid of            the frequency interval."},{"path":"https://eliocamp.github.io/rcdo/reference/ecatx10p.html","id":null,"dir":"Reference","previous_headings":"","what":"Very cold days percent wrt 10th percentile of reference period — cdo_eca_tx10p","title":"Very cold days percent wrt 10th percentile of reference period — cdo_eca_tx10p","text":"Let infile1 time series daily maximum temperature TX, infile2 10th percentile TXn10 daily maximum temperatures period used reference. percentage time TX < TXn10. calculated. TXn10 calculated 10th percentile daily maximum temperatures five day window centred calendar day given climate reference period. Note TX TXn10 givenin units. date information timestep outfile date last contributing timestep infile1.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecatx10p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Very cold days percent wrt 10th percentile of reference period — cdo_eca_tx10p","text":"","code":"cdo_eca_tx10p(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecatx10p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Very cold days percent wrt 10th percentile of reference period — cdo_eca_tx10p","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecatx90p.html","id":null,"dir":"Reference","previous_headings":"","what":"Very warm days percent wrt 90th percentile of reference period — cdo_eca_tx90p","title":"Very warm days percent wrt 90th percentile of reference period — cdo_eca_tx90p","text":"Let infile1 time series daily maximum temperature TX, infile2 90th percentile TXn90 daily maximum temperatures period used reference. percentage time TX > TXn90. calculated. TXn90 calculated 90th percentile daily maximum temperatures five day window centred calendar day given climate reference period. Note TX TXn90 given units. date information timestep outfile date last contributing timestep infile1.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ecatx90p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Very warm days percent wrt 90th percentile of reference period — cdo_eca_tx90p","text":"","code":"cdo_eca_tx90p(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ecatx90p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Very warm days percent wrt 90th percentile of reference period — cdo_eca_tx90p","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/enlarge.html","id":null,"dir":"Reference","previous_headings":"","what":"Enlarge fields — cdo_enlarge","title":"Enlarge fields — cdo_enlarge","text":"Enlarge fields infile user given horizontal grid. Normally last field element used enlargement. however input output grid regular lon/lat grids, zonal meridional enlargement possible. Zonal enlargement takes place, xsize input field 1 ysize grids . meridional enlargement ysize 1 xsize grids size.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/enlarge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enlarge fields — cdo_enlarge","text":"","code":"cdo_enlarge(ifile, grid = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/enlarge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enlarge fields — cdo_enlarge","text":"ifile String path input file. grid STRING - Target grid description file name ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ensstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical values over an ensemble — cdo_ensavg","title":"Statistical values over an ensemble — cdo_ensavg","text":"module computes statistical values ensemble input files. Depending chosen operator, minimum, maximum, range, sum, average, standard deviation, variance, skewness, kurtosis, median certain percentile input files written outfile. input files need structure variables. date information timestep outfile date first input file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ensstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical values over an ensemble — cdo_ensavg","text":"","code":"cdo_ensavg(ifiles, p = NULL, ofile = NULL)  cdo_enskurt(ifiles, p = NULL, ofile = NULL)  cdo_ensmax(ifiles, p = NULL, ofile = NULL)  cdo_ensmean(ifiles, p = NULL, ofile = NULL)  cdo_ensmedian(ifiles, p = NULL, ofile = NULL)  cdo_ensmin(ifiles, p = NULL, ofile = NULL)  cdo_enspctl(ifiles, p = NULL, ofile = NULL)  cdo_ensrange(ifiles, p = NULL, ofile = NULL)  cdo_ensskew(ifiles, p = NULL, ofile = NULL)  cdo_ensstd(ifiles, p = NULL, ofile = NULL)  cdo_ensstd1(ifiles, p = NULL, ofile = NULL)  cdo_enssum(ifiles, p = NULL, ofile = NULL)  cdo_ensvar(ifiles, p = NULL, ofile = NULL)  cdo_ensvar1(ifiles, p = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ensstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical values over an ensemble — cdo_ensavg","text":"ifiles Character vector path input files. p FLOAT - Percentile number {0, ..., 100} ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ensstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Statistical values over an ensemble — cdo_ensavg","text":"","code":"ensmin     Ensemble minimum            o(t,x) = min\\{i1(t,x), i2(t,x), ..., in(t,x)\\} ensmax     Ensemble maximum            o(t,x) = max\\{i1(t,x), i2(t,x), ..., in(t,x)\\} ensrange   Ensemble range            o(t,x) = range\\{i1(t,x), i2(t,x), ..., in(t,x)\\} enssum     Ensemble sum            o(t,x) = sum\\{i1(t,x), i2(t,x), ..., in(t,x)\\} ensmean    Ensemble mean            o(t,x) = mean\\{i1(t,x), i2(t,x), ..., in(t,x)\\} ensavg     Ensemble average            o(t,x) = avg\\{i1(t,x), i2(t,x), ..., in(t,x)\\} ensstd     Ensemble standard deviation            Normalize by n.             o(t,x) = std\\{i1(t,x), i2(t,x), ..., in(t,x)\\} ensstd1    Ensemble standard deviation (n-1)            Normalize by (n-1).             o(t,x) = std1\\{i1(t,x), i2(t,x), ..., in(t,x)\\} ensvar     Ensemble variance            Normalize by n.             o(t,x) = var\\{i1(t,x), i2(t,x), ..., in(t,x)\\} ensvar1    Ensemble variance (n-1)            Normalize by (n-1).             o(t,x) = var1\\{i1(t,x), i2(t,x), ..., in(t,x)\\} ensskew    Ensemble skewness            o(t,x) = skew\\{i1(t,x), i2(t,x), ..., in(t,x)\\} enskurt    Ensemble kurtosis            o(t,x) = kurt\\{i1(t,x), i2(t,x), ..., in(t,x)\\} ensmedian  Ensemble median            o(t,x) = median\\{i1(t,x), i2(t,x), ..., in(t,x)\\} enspctl    Ensemble percentiles            o(t,x) = pth percentile \\{i1(t,x), i2(t,x), ..., in(t,x)\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/ensstat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Statistical values over an ensemble — cdo_ensavg","text":"Operators module need open input files simultaneously. maximum number open files depends operating system!","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ensstat2.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical values over an ensemble — cdo_ensrkhistspace","title":"Statistical values over an ensemble — cdo_ensrkhistspace","text":"module computes statistical values ensemble ensfiles using obsfile reference. Depending operator ranked Histogram roc-curve Ensembles ensfiles reference obsfile written outfile. date grid information timestep outfile date first input file. Thus input files required structure terms gridsize, variable definitions number timesteps.  Operators module use obsfile reference (instance observation) whereas ensfiles understood ensemble consisting n (n number ensfiles) members.  operators ensrkhistspace ensrkhisttime compute Ranked Histograms. Therefor vertical axis utilized Histogram axis, prohibits use files containing one level. histogram axis nensfiles+1 bins level 0 containing grid point number observations smaller ensembles level nensfiles+1 indicating number observations larger ensembles.  ensrkhisttime computes ranked histogram timestep reducing horizontal grid 1x1 grid keeping time axis obsfile. Contrary ensrkhistspace  computes histogram grid point keeping horizontal grid variable reducing time-axis. time information last timestep obsfile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ensstat2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical values over an ensemble — cdo_ensrkhistspace","text":"","code":"cdo_ensrkhistspace(ifiles, ofile = NULL)  cdo_ensrkhisttime(ifiles, ofile = NULL)  cdo_ensroc(ifiles, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ensstat2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical values over an ensemble — cdo_ensrkhistspace","text":"ifiles Character vector path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ensstat2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Statistical values over an ensemble — cdo_ensrkhistspace","text":"","code":"ensrkhistspace  Ranked Histogram averaged over space ensrkhisttime   Ranked Histogram averaged over time ensroc          Ensemble Receiver Operating characteristics"},{"path":"https://eliocamp.github.io/rcdo/reference/ensval.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensemble validation tools — cdo_ensbrs","title":"Ensemble validation tools — cdo_ensbrs","text":"module computes ensemble validation scores decomposition Brier cumulative ranked probability score (CRPS). first file used reference can climatology, observation reanalysis skill ensembles given infiles measured. Depending operator number output files generated containing skill score decomposition corresponding operator. output averaged  horizontal fields using appropriate weights level timestep rfile.  input files need structure variables. date information timestep outfile date first input file. output files named <outfilebase>.<type>.<filesuffix> <type> depends operator <filesuffix> determined output file type. three output files operator enscrps four output files operator ensbrs.  CRPS decomposition Reliability potential CRPS calculated appropriate averaging field members (note, CRPS average linearly). three output files <type> following meaning: crps CRPS, reli reliability crpspot potential crps. relation CRPS = CRPS_{pot} + RELI holds.  Brier score Ensemble given infiles respect reference given rfile threshold x calculated. four output files <type> following meaning: brs Brier score wrt threshold  x; brsreli Brier score reliability wrt threshold x; brsreso Brier score resolution wrt threshold x; brsunct Brier score uncertainty wrt threshold x. analogy CRPS following relation holds: BRS(x) = RELI(x)-RESO(x)+ UNCT(x).  implementation decomposition CRPS Brier Score follows Hans Hersbach (2000): Decomposition Continuous Ranked Probability Score Ensemble Prediction Systems, : Weather Forecasting (15) pp. 559-570.  CRPS code decomposition verified CRAN - ensemble validation package R. Differences occur grid-cell area uniform implementation R account .","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ensval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensemble validation tools — cdo_ensbrs","text":"","code":"cdo_ensbrs(ifiles, obase = NULL)  cdo_enscrps(ifiles, obase = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ensval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensemble validation tools — cdo_ensbrs","text":"ifiles Character vector path input files. obase String basename output files.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ensval.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ensemble validation tools — cdo_ensbrs","text":"","code":"enscrps  Ensemble CRPS and decomposition ensbrs   Ensemble Brier score          Ensemble Brier Score and Decomposition"},{"path":"https://eliocamp.github.io/rcdo/reference/eofcoeff.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal coefficients of EOFs — cdo_eofcoeff","title":"Principal coefficients of EOFs — cdo_eofcoeff","text":"module calculates time series principal coefficients given EOF (empirical orthogonal functions) data. Time steps infile1 assumed EOFs, time steps infile2 assumed time series. Note, operator calculates non weighted dot product fields infile1 infile2. consistency set environment variable CDO_WEIGHT_MODE=using eof eof3d.  separate file containing time series principal coefficients time information infile2 EOF infile1. Output files numbered <obase><neof><suffix> neof+1 number EOF (timestep) infile1 suffix filename extension derived file format.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/eofcoeff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal coefficients of EOFs — cdo_eofcoeff","text":"","code":"cdo_eofcoeff(ifile1, ifile2, obase = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/eofcoeff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal coefficients of EOFs — cdo_eofcoeff","text":"ifile1, ifile2 Strings path input files. obase String basename output files.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/eofs.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical Orthogonal Functions — cdo_eof","title":"Empirical Orthogonal Functions — cdo_eof","text":"module calculates empirical orthogonal functions data infile eigen values scatter matrix (covariance matrix) S data sample z(t). detailed description can found .  Please note, input data assumed anomalies.  operator eof chosen, EOFs computed either time spatial space, whichever fastest. user already knows, computation faster, module can forced perform computation time- gridspace using operators eoftime eofspatial, respectively. can enhance performance, especially long time series, number timesteps larger number grid-points. Data infile assumed anomalies. , behavior module well defined. execution outfile1 contain eigen-values outfile2 eigenvectors e_j. EOFs eigen-values computed. However, first neof EOFs written outfile2. Nonetheless, outfile1 contains eigen-values.  Missing values fully supported. Support checked non-changing masks missing values time. Although still results, trustworthy, warning occur. latter case suggest replace missing values 0 infile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/eofs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical Orthogonal Functions — cdo_eof","text":"","code":"cdo_eof(ifile, neof = NULL, ofile1 = NULL, ofile2 = NULL)  cdo_eof3d(ifile, neof = NULL, ofile1 = NULL, ofile2 = NULL)  cdo_eofspatial(ifile, neof = NULL, ofile1 = NULL, ofile2 = NULL)  cdo_eoftime(ifile, neof = NULL, ofile1 = NULL, ofile2 = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/eofs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical Orthogonal Functions — cdo_eof","text":"ifile String path input file. neof INTEGER - Number eigen functions ofile1, ofile2 Strings path output files.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/eofs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Empirical Orthogonal Functions — cdo_eof","text":"","code":"eof         Calculate EOFs in spatial or time space eoftime     Calculate EOFs in time space eofspatial  Calculate EOFs in spatial space eof3d       Calculate 3-Dimensional EOFs in time space"},{"path":"https://eliocamp.github.io/rcdo/reference/expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate expressions — cdo_aexpr","title":"Evaluate expressions — cdo_aexpr","text":"module arithmetically processes every timestep input dataset. individual assignment statement end semi-colon. special key used template. statement template replaced variable names. Unlike regular variables, temporary variables never written output stream. define temporary variable simply prefix variable name underscore (e.g. _varname) variable declared.  following operators supported:  Operator   & Meaning             & Example   & Result =      & assignment          & x = y     & Assigns y x +      & addition            & x + y     & Sum x y -      & subtraction         & x - y     & Difference x y *      & multiplication      & x * y     & Product x y /      & division            & x / y     & Quotient x y ^      & exponentiation      & x ^y      & Exponentiates x y ==     & equal            & x == y    &  1, x equal y; else 0 !=     & equal        & x != y    &  1, x equal y; else 0 >      & greater        & x > y     &  1, x greater y; else 0 <      & less           & x < y     &  1, x less y; else 0 >=     & greater equal       & x >= y    &  1, x greater equal y; else 0 <=     & less equal          & x <= y    &  1, x less equal y; else 0 <=>    & less equal greater  & x <=> y   & -1, x less y; 1, x greater y; else 0 &&     & logical         & x && y    &  1, x y equal 0; else 0 ||     & logical          & x || y    &  1, x y equal 0; else 0 !      & logical         & !x        &  1, x equal 0; else 0 ?:     & ternary conditional & x ? y : z & y, x equal 0, else z  following functions supported:  Math intrinsics:  abs(x)      \"    \"    Absolute value x floor(x)    \"    \"    Round largest integral value greater x ceil(x)     \"    \"    Round smallest integral value less x float(x)    \"    \"    32-bit float value x int(x)      \"    \"    Integer value x nint(x)     \"    \"    Nearest integer value x sqr(x)      \"    \"    Square x sqrt(x)     \"    \"    Square Root x exp(x)      \"    \"    Exponential x ln(x)       \"    \"    Natural logarithm x log10(x)    \"    \"    Base 10 logarithm x sin(x)      \"    \"    Sine x, x specified radians cos(x)      \"    \"    Cosine x, x specified radians tan(x)      \"    \"    Tangent x, x specified radians asin(x)     \"    \"    Arc-sine x, x specified radians acos(x)     \"    \"    Arc-cosine x, x specified radians atan(x)     \"    \"    Arc-tangent x, x specified radians sinh(x)     \"    \"    Hyperbolic sine x, x specified radians cosh(x)     \"    \"    Hyperbolic cosine x, x specified radians tanh(x)     \"    \"    Hyperbolic tangent x, x specified radians asinh(x)    \"    \"    Inverse hyperbolic sine x, x specified radians acosh(x)    \"    \"    Inverse hyperbolic cosine x, x specified radians atanh(x)    \"    \"    Inverse hyperbolic tangent x, x specified radians rad(x)      \"    \"    Convert x degrees radians deg(x)      \"    \"    Convert x radians degrees rand(x)     \"    \"    Replace x pseudo-random numbers range 0 1 isMissval(x)\"    \"    Returns 1 x missing  mod(x,y)    \"    \"    Floating-point remainder x/ y min(x,y)    \"    \"    Minimum value x y max(x,y)    \"    \"    Maximum value x y pow(x,y)    \"    \"    Power function hypot(x,y)  \"    \"    Euclidean distance function, sqrt(xx + yy) atan2(x,y)  \"    \"    Arc tangent function y/x, using signs determine quadrants  Coordinates:  clon(x)      \"    \"    Longitude coordinate x (available x geographical coordinates) clat(x)      \"    \"    Latitude coordinate x (available x geographical coordinates) gridarea(x)  \"    \"    Grid cell area x (available x geographical coordinates) gridindex(x) \"    \"    Grid cell indices x clev(x)      \"    \"    Level coordinate x (0, x 2D surface variable) clevidx(x)   \"    \"    Level index x (0, x 2D surface variable) cthickness(x)\"    \"    Layer thickness, upper minus lower level bound x (1, level bounds missing) ctimestep()  \"    \"    Timestep number (1 N) cdate()      \"    \"    Verification date YYYYMMDD ctime()      \"    \"    Verification time HHMMSS.millisecond cdeltat()    \"    \"    Difference current last timestep seconds cday()       \"    \"    Day DD cmonth()     \"    \"    Month MM cyear()      \"    \"    Year YYYY csecond()    \"    \"    Second SS.millisecond cminute()    \"    \"    Minute MM chour()      \"    \"    Hour HH  Constants:  ngp(x)    \"    \"    Number horizontal grid points nlev(x)   \"    \"    Number vertical levels size(x)   \"    \"    Total number elements (ngp(x)*nlev(x)) missval(x)\"    \"    Returns missing value variable x  Statistics field:  fldmin(x), fldmax(x), fldrange(x), fldsum(x), fldmean(x), fldavg(x), fldstd(x), fldstd1(x), fldvar(x), fldvar1(x), fldskew(x), fldkurt(x), fldmedian(x)  Zonal statistics regular 2D grids:  zonmin(x), zonmax(x), zonrange(x), zonsum(x), zonmean(x), zonavg(x), zonstd(x), zonstd1(x), zonvar(x), zonvar1(x), zonskew(x), zonkurt(x), zonmedian(x)  Vertical statistics:  vertmin(x), vertmax(x), vertrange(x), vertsum(x), vertmean(x), vertavg(x), vertstd(x), vertstd1(x), vertvar(x), vertvar1(x)  Miscellaneous:  sellevel(x,k)          \"    \"    Select level k variable x sellevidx(x,k)         \"    \"    Select level index k variable x sellevelrange(x,k1,k2) \"    \"    Select levels variable x range k1 k2 sellevidxrange(x,k1,k2)\"    \"    Select level indices variable x range k1 k2 remove(x)              \"    \"    Remove variable x output stream","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate expressions — cdo_aexpr","text":"","code":"cdo_aexpr(ifile, instr = NULL, filename = NULL, ofile = NULL)  cdo_aexprf(ifile, instr = NULL, filename = NULL, ofile = NULL)  cdo_expr(ifile, instr = NULL, filename = NULL, ofile = NULL)  cdo_exprf(ifile, instr = NULL, filename = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate expressions — cdo_aexpr","text":"ifile String path input file. instr STRING - Processing instructions (need 'quoted' cases) filename STRING - File processing instructions ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/expr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate expressions — cdo_aexpr","text":"","code":"expr    Evaluate expressions         The processing instructions are read from the parameter. exprf   Evaluate expressions script         Contrary to expr the processing instructions are read from a file. aexpr   Evaluate expressions and append results         Same as expr, but keep input variables and append results aexprf  Evaluate expression script and append results         Same as exprf, but keep input variables and append results"},{"path":"https://eliocamp.github.io/rcdo/reference/expr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Evaluate expressions — cdo_aexpr","text":"input stream contains duplicate entries variable name last one used.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/fdns.html","id":null,"dir":"Reference","previous_headings":"","what":"Frost days where no snow index per time period — cdo_fdns","title":"Frost days where no snow index per time period — cdo_fdns","text":"Let infile1 time series daily minimum temperature TN infile2 corresponding series daily surface snow amounts. number days TN < 0 °C surface snow amount less 1 cm counted. temperature TN given units Kelvin. date information timestep outfile date last contributing timestep infile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/fdns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frost days where no snow index per time period — cdo_fdns","text":"","code":"cdo_fdns(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/fdns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frost days where no snow index per time period — cdo_fdns","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/filedes.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset description — filedes","title":"Dataset description — filedes","text":"module provides operators print meta information dataset. printed meta-data depends chosen operator.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/filedes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dataset description — filedes","text":"","code":"partab    Parameter table           Prints all available meta information of the variables. codetab   Parameter code table           Prints a code table with a description of all variables.           For each variable the operator prints one line listing the           code, name, description and units. griddes   Grid description           Prints the description of all grids. zaxisdes  Z-axis description           Prints the description of all z-axes. vct       Vertical coordinate table           Prints the vertical coordinate table."},{"path":"https://eliocamp.github.io/rcdo/reference/filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Time series filtering — cdo_bandpass","title":"Time series filtering — cdo_bandpass","text":"module takes time series gridpoint infile (fast fourier) transforms frequency domain. According particular operator parameters certain frequencies filtered (set zero) frequency domain spectrum (inverse fast fourier) transformed back time domain. determine frequency time-axis infile used. (Data constant time increment since assumption applies transformation. However, time increment different zero.) frequencies given parameter interpreted per year. done assumption 365-day calendar. Consequently want perform multiyear-filtering accurately delete 29th February. infile 360 year calendar frequency parameters fmin respectively fmax multiplied factor 360/365 order obtain accurate results. set frequency filter frequency parameters adjusted frequency data. fmin rounded fmax always rounded . Consequently possible use bandpass fmin=fmax without getting zero-field outfile. Hints efficient usage: - get reliable results time-series detrended (cdo detrend) - lowest frequency greater zero can contained infile 1/(N*dT), - greatest frequency 1/(2dT) (Nyquist frequency), N number timesteps dT time increment infile years.  Missing value support operators module implemented, yet!","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time series filtering — cdo_bandpass","text":"","code":"cdo_bandpass(ifile, fmin = NULL, fmax = NULL, ofile = NULL)  cdo_highpass(ifile, fmin = NULL, fmax = NULL, ofile = NULL)  cdo_lowpass(ifile, fmin = NULL, fmax = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time series filtering — cdo_bandpass","text":"ifile String path input file. fmin FLOAT    Minimum - frequency per year passes filter. fmax FLOAT    Maximum - frequency per year passes filter. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Time series filtering — cdo_bandpass","text":"","code":"bandpass  Bandpass filtering           Bandpass filtering (pass for frequencies between fmin and fmax).           Suppresses all variability outside the frequency range specified by \\[fmin,fmax\\]. lowpass   Lowpass filtering           Lowpass filtering (pass for frequencies lower than fmax).           Suppresses all variability with frequencies greater than fmax. highpass  Highpass filtering           Highpass filtering (pass for frequencies greater than fmin).           Suppresses all variabilty with frequencies lower than fmin."},{"path":"https://eliocamp.github.io/rcdo/reference/filter.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Time series filtering — cdo_bandpass","text":"better performace operators use CDO configure option –-fftw3.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/fldcor.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation in grid space — cdo_fldcor","title":"Correlation in grid space — cdo_fldcor","text":"correlation coefficient quantity gives quality least squares fitting original data. operator correlates gridpoints two fields timestep.  S(t) = {x, i_1(t,x) != missval i_2(t,x) != missval}   o(t,1) = Cor{(i_1(t,x), i_2(t,x)), x_1 < x <= x_n}  w(x) area weights obtained input streams. every timestep t field elements x belong sample, i_1(t,x) != missval i_2(t,x) != missval.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/fldcor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation in grid space — cdo_fldcor","text":"","code":"cdo_fldcor(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/fldcor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation in grid space — cdo_fldcor","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/fldcovar.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance in grid space — cdo_fldcovar","title":"Covariance in grid space — cdo_fldcovar","text":"operator calculates covariance two fields gridpoints timestep.  S(t) = {x, i_1(t,x) != missval i_2(t,x) != missval}   o(t,1) = Covar{(i_1(t,x), i_2(t,x)), x_1 < x <= x_n}  w(x) area weights obtained input streams. every timestep t field elements x belong sample, i_1(t,x) != missval i_2(t,x) != missval.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/fldcovar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance in grid space — cdo_fldcovar","text":"","code":"cdo_fldcovar(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/fldcovar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance in grid space — cdo_fldcovar","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/fldstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical values over a field — cdo_fldavg","title":"Statistical values over a field — cdo_fldavg","text":"module computes statistical values input fields. field horizontal layer data variable. Depending chosen operator, minimum, maximum, range, sum, integral, average, standard deviation, variance, skewness, kurtosis, median certain percentile field written outfile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/fldstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical values over a field — cdo_fldavg","text":"","code":"cdo_fldavg(ifile, weights = NULL, p = NULL, ofile = NULL)  cdo_fldcount(ifile, weights = NULL, p = NULL, ofile = NULL)  cdo_fldint(ifile, weights = NULL, p = NULL, ofile = NULL)  cdo_fldkurt(ifile, weights = NULL, p = NULL, ofile = NULL)  cdo_fldmax(ifile, weights = NULL, p = NULL, ofile = NULL)  cdo_fldmean(ifile, weights = NULL, p = NULL, ofile = NULL)  cdo_fldmedian(ifile, weights = NULL, p = NULL, ofile = NULL)  cdo_fldmin(ifile, weights = NULL, p = NULL, ofile = NULL)  cdo_fldpctl(ifile, weights = NULL, p = NULL, ofile = NULL)  cdo_fldrange(ifile, weights = NULL, p = NULL, ofile = NULL)  cdo_fldskew(ifile, weights = NULL, p = NULL, ofile = NULL)  cdo_fldstd(ifile, weights = NULL, p = NULL, ofile = NULL)  cdo_fldstd1(ifile, weights = NULL, p = NULL, ofile = NULL)  cdo_fldsum(ifile, weights = NULL, p = NULL, ofile = NULL)  cdo_fldvar(ifile, weights = NULL, p = NULL, ofile = NULL)  cdo_fldvar1(ifile, weights = NULL, p = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/fldstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical values over a field — cdo_fldavg","text":"ifile String path input file. weights BOOL - weights=FALSE disables weighting grid cell area [default: weights=TRUE] p FLOAT - Percentile number {0, ..., 100} ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/fldstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Statistical values over a field — cdo_fldavg","text":"","code":"fldmin     Field minimum            For every gridpoint x_1, ..., x_n of the same field it is:             o(t,1) = min\\{i(t,x'), x_1&lt;x'&lt;=x_n\\} fldmax     Field maximum            For every gridpoint x_1, ..., x_n of the same field it is:             o(t,1) = max\\{i(t,x'), x_1&lt;x'&lt;=x_n\\} fldrange   Field range            For every gridpoint x_1, ..., x_n of the same field it is:             o(t,1) = range\\{i(t,x'), x_1&lt;x'&lt;=x_n\\} fldsum     Field sum            For every gridpoint x_1, ..., x_n of the same field it is:             o(t,1) = sum\\{i(t,x'), x_1&lt;x'&lt;=x_n\\} fldint     Field integral            For every gridpoint x_1, ..., x_n of the same field it is:             o(t,1) = sum\\{i(t,x')*cellarea(x'), x_1&lt;x'&lt;=x_n\\} fldmean    Field mean            For every gridpoint x_1, ..., x_n of the same field it is:             o(t,1) = mean\\{i(t,x'), x_1&lt;x'&lt;=x_n\\}            weighted by area weights obtained by the input field. fldavg     Field average            For every gridpoint x_1, ..., x_n of the same field it is:             o(t,1) = avg\\{i(t,x'), x_1&lt;x'&lt;=x_n\\}            weighted by area weights obtained by the input field. fldstd     Field standard deviation            Normalize by n. For every gridpoint x_1, ..., x_n of the same field it is:             o(t,1) = std\\{i(t,x'), x_1&lt;x'&lt;=x_n\\}            weighted by area weights obtained by the input field. fldstd1    Field standard deviation (n-1)            Normalize by (n-1). For every gridpoint x_1, ..., x_n of the same field it is:             o(t,1) = std1\\{i(t,x'), x_1&lt;x'&lt;=x_n\\}            weighted by area weights obtained by the input field. fldvar     Field variance            Normalize by n. For every gridpoint x_1, ..., x_n of the same field it is:             o(t,1) = var\\{i(t,x'), x_1&lt;x'&lt;=x_n\\}            weighted by area weights obtained by the input field. fldvar1    Field variance (n-1)            Normalize by (n-1). For every gridpoint x_1, ..., x_n of the same field it is:             o(t,1) = var1\\{i(t,x'), x_1&lt;x'&lt;=x_n\\}            weighted by area weights obtained by the input field. fldskew    Field skewness            For every gridpoint x_1, ..., x_n of the same field it is:             o(t,1) = skew\\{i(t,x'), x_1&lt;x'&lt;=x_n\\} fldkurt    Field kurtosis            For every gridpoint x_1, ..., x_n of the same field it is:             o(t,1) = kurt\\{i(t,x'), x_1&lt;x'&lt;=x_n\\} fldmedian  Field median            For every gridpoint x_1, ..., x_n of the same field it is:             o(t,1) = median\\{i(t,x'), x_1&lt;x'&lt;=x_n\\} fldcount   Field count            Number of non-missing values of the field. fldpctl    Field percentiles            For every gridpoint x_1, ..., x_n of the same field it is:             o(t,1) = pth percentile \\{i(t,x'), x_1&lt;x'&lt;=x_n\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/fourier.html","id":null,"dir":"Reference","previous_headings":"","what":"Fourier transformation — cdo_fourier","title":"Fourier transformation — cdo_fourier","text":"fourier operator performs fourier transformation inverse fourier transformation input fields. number timesteps power 2 algorithm Fast Fourier Transformation (FFT) used.   input stream infile consists complex fields, fields outfile, computed cdo -f ext fourier,1 -fourier,-1 infile outfile infile. real input files see function retocomplex.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/fourier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fourier transformation — cdo_fourier","text":"","code":"cdo_fourier(ifile, epsilon = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/fourier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fourier transformation — cdo_fourier","text":"ifile String path input file. epsilon INTEGER - -1: forward transformation; 1: backward transformation ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/fourier.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fourier transformation — cdo_fourier","text":"Complex numbers can stored NetCDF4 EXTRA format.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/getgridcell.html","id":null,"dir":"Reference","previous_headings":"","what":"Get grid cell index — getgridcell","title":"Get grid cell index — getgridcell","text":"Get grid cell index one grid point selected parameter lon lat.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/gradsdes.html","id":null,"dir":"Reference","previous_headings":"","what":"GrADS data descriptor file — gradsdes","title":"GrADS data descriptor file — gradsdes","text":"Creates GrADS data descriptor file. Supported file formats GRIB1, NetCDF, SERVICE, EXTRA IEG. GRIB1 files GrADS map file also generated. SERVICE EXTRA files grid specified CDO option '-g <grid>'. module takes infile order create filenames descriptor (infile.ctl) map (infile.gmp) file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/gridboxstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical values over grid boxes — cdo_gridboxavg","title":"Statistical values over grid boxes — cdo_gridboxavg","text":"module computes statistical values surrounding grid boxes. Depending chosen operator, minimum, maximum, range, sum, average, standard deviation, variance, skewness, kurtosis median neighboring grid boxes written outfile. gridbox operators work quadrilateral curvilinear grids.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/gridboxstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical values over grid boxes — cdo_gridboxavg","text":"","code":"cdo_gridboxavg(ifile, nx = NULL, ny = NULL, ofile = NULL)  cdo_gridboxkurt(ifile, nx = NULL, ny = NULL, ofile = NULL)  cdo_gridboxmax(ifile, nx = NULL, ny = NULL, ofile = NULL)  cdo_gridboxmean(ifile, nx = NULL, ny = NULL, ofile = NULL)  cdo_gridboxmedian(ifile, nx = NULL, ny = NULL, ofile = NULL)  cdo_gridboxmin(ifile, nx = NULL, ny = NULL, ofile = NULL)  cdo_gridboxrange(ifile, nx = NULL, ny = NULL, ofile = NULL)  cdo_gridboxskew(ifile, nx = NULL, ny = NULL, ofile = NULL)  cdo_gridboxstd(ifile, nx = NULL, ny = NULL, ofile = NULL)  cdo_gridboxstd1(ifile, nx = NULL, ny = NULL, ofile = NULL)  cdo_gridboxsum(ifile, nx = NULL, ny = NULL, ofile = NULL)  cdo_gridboxvar(ifile, nx = NULL, ny = NULL, ofile = NULL)  cdo_gridboxvar1(ifile, nx = NULL, ny = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/gridboxstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical values over grid boxes — cdo_gridboxavg","text":"ifile String path input file. nx INTEGER - Number grid boxes x direction ny INTEGER - Number grid boxes y direction ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/gridboxstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Statistical values over grid boxes — cdo_gridboxavg","text":"","code":"gridboxmin     Gridbox minimum                Minimum value of the selected grid boxes. gridboxmax     Gridbox maximum                Maximum value of the selected grid boxes. gridboxrange   Gridbox range                Range (max-min value) of the selected grid boxes. gridboxsum     Gridbox sum                Sum of the selected grid boxes. gridboxmean    Gridbox mean                Mean of the selected grid boxes. gridboxavg     Gridbox average                Average of the selected grid boxes. gridboxstd     Gridbox standard deviation                Standard deviation of the selected grid boxes. Normalize by n. gridboxstd1    Gridbox standard deviation (n-1)                Standard deviation of the selected grid boxes. Normalize by (n-1). gridboxvar     Gridbox variance                Variance of the selected grid boxes. Normalize by n. gridboxvar1    Gridbox variance (n-1)                Variance of the selected grid boxes. Normalize by (n-1). gridboxskew    Gridbox skewness                Skewness of the selected grid boxes. gridboxkurt    Gridbox kurtosis                Kurtosis of the selected grid boxes. gridboxmedian  Gridbox median                Median of the selected grid boxes."},{"path":"https://eliocamp.github.io/rcdo/reference/gridcell.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid cell quantities — cdo_gridarea","title":"Grid cell quantities — cdo_gridarea","text":"module reads grid cell area first grid input stream. grid cell area missing computed grid coordinates. area grid cell calculated using spherical triangles coordinates center vertices. base unit sphere scaled radius planet. default planet radius 6371000 meter. parameter radius environment variable PLANET_RADIUS can used change default. Depending chosen operator grid cell area weights written output stream.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/gridcell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid cell quantities — cdo_gridarea","text":"","code":"cdo_gridarea(ifile, radius = NULL, ofile = NULL)  cdo_gridweights(ifile, radius = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/gridcell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid cell quantities — cdo_gridarea","text":"ifile String path input file. radius FLOAT - Planet radius meter ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/gridcell.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Grid cell quantities — cdo_gridarea","text":"","code":"gridarea     Grid cell area              Writes the grid cell area to the output stream. If the grid cell area have to              be computed it is scaled with the planet radius to square meters. gridweights  Grid cell weights              Writes the grid cell area weights to the output stream."},{"path":"https://eliocamp.github.io/rcdo/reference/healpix.html","id":null,"dir":"Reference","previous_headings":"","what":"Change healpix resolution — cdo_hpdegrade","title":"Change healpix resolution — cdo_hpdegrade","text":"Degrade upgrade resolution healpix grid.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/healpix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change healpix resolution — cdo_hpdegrade","text":"","code":"cdo_hpdegrade(ifile, nside = NULL, order = NULL, power = NULL, ofile = NULL)  cdo_hpupgrade(ifile, nside = NULL, order = NULL, power = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/healpix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change healpix resolution — cdo_hpdegrade","text":"ifile String path input file. nside INTEGER - nside target healpix, must power two [default: input]. order STRING - Pixel ordering target healpix ('nested' 'ring'). power FLOAT - non-zero, divide result (nside[]/nside[])**power. power=-2 keeps sum map invariant. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/healpix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change healpix resolution — cdo_hpdegrade","text":"","code":"hpdegrade  Degrade healpix            Degrade the resolution of a healpix grid. The value of the target pixel is the mean of the source pixels. hpupgrade  Upgrade healpix            Upgrade the resolution of a healpix grid. The values of the target pixels is the value of the source pixel."},{"path":"https://eliocamp.github.io/rcdo/reference/histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram — cdo_histcount","title":"Histogram — cdo_histcount","text":"module creates bins histogram input data. bins adjacent non-overlapping intervals. user define bounds bins. first value lower bound second value upper bound first bin. bounds second bin defined second third value, aso. 2-dimensional input fields allowed. output file contains one vertical level bins requested.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram — cdo_histcount","text":"","code":"cdo_histcount(ifile, bounds = NULL, ofile = NULL)  cdo_histfreq(ifile, bounds = NULL, ofile = NULL)  cdo_histmean(ifile, bounds = NULL, ofile = NULL)  cdo_histsum(ifile, bounds = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram — cdo_histcount","text":"ifile String path input file. bounds FLOAT - Comma-separated list bin bounds (-inf inf valid) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/histogram.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Histogram — cdo_histcount","text":"","code":"histcount  Histogram count            Number of elements in the bin range. histsum    Histogram sum            Sum of elements in the bin range. histmean   Histogram mean            Mean of elements in the bin range. histfreq   Histogram frequency            Relative frequency of elements in the bin range."},{"path":"https://eliocamp.github.io/rcdo/reference/hourpctl.html","id":null,"dir":"Reference","previous_headings":"","what":"Hourly percentile values — cdo_hourpctl","title":"Hourly percentile values — cdo_hourpctl","text":"operator computes percentiles timesteps hour infile1. algorithm uses histograms minimum maximum bounds given infile2 infile3, respectively. default number histogram bins 101. default can overridden defining environment variable CDO_PCTL_NBINS. files infile2 infile3 result corresponding hourmin hourmax operations, respectively. time outfile determined time middle contributing timesteps infile1. can change CDO option –timestat_date <first|middle|last>. every adjacent sequence t_1, ...,t_n timesteps hour :  o(t,x) = pth percentile {(t',x), t_1<t'<=t_n}","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/hourpctl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hourly percentile values — cdo_hourpctl","text":"","code":"cdo_hourpctl(ifile1, ifile2, ifile3, p = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/hourpctl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hourly percentile values — cdo_hourpctl","text":"ifile1, ifile2, ifile3 Strings path input files. p FLOAT - Percentile number {0, ..., 100} ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/hourstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Hourly statistics — cdo_houravg","title":"Hourly statistics — cdo_houravg","text":"module computes statistical values timesteps hour. Depending chosen operator minimum, maximum, range, sum, average, variance standard deviation timesteps hour written outfile. time outfile determined time middle contributing timesteps infile. can change CDO option –timestat_date <first|middle|last>.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/hourstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hourly statistics — cdo_houravg","text":"","code":"cdo_houravg(ifile, ofile = NULL)  cdo_hourmax(ifile, ofile = NULL)  cdo_hourmean(ifile, ofile = NULL)  cdo_hourmin(ifile, ofile = NULL)  cdo_hourrange(ifile, ofile = NULL)  cdo_hourstd(ifile, ofile = NULL)  cdo_hourstd1(ifile, ofile = NULL)  cdo_hoursum(ifile, ofile = NULL)  cdo_hourvar(ifile, ofile = NULL)  cdo_hourvar1(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/hourstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hourly statistics — cdo_houravg","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/hourstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hourly statistics — cdo_houravg","text":"","code":"hourmin    Hourly minimum            For every adjacent sequence t_1, ...,t_n of timesteps of the same hour it is:             o(t,x) = min\\{i(t',x), t_1&lt;t'&lt;=t_n\\} hourmax    Hourly maximum            For every adjacent sequence t_1, ...,t_n of timesteps of the same hour it is:             o(t,x) = max\\{i(t',x), t_1&lt;t'&lt;=t_n\\} hourrange  Hourly range            For every adjacent sequence t_1, ...,t_n of timesteps of the same hour it is:             o(t,x) = range\\{i(t',x), t_1&lt;t'&lt;=t_n\\} hoursum    Hourly sum            For every adjacent sequence t_1, ...,t_n of timesteps of the same hour it is:             o(t,x) = sum\\{i(t',x), t_1&lt;t'&lt;=t_n\\} hourmean   Hourly mean            For every adjacent sequence t_1, ...,t_n of timesteps of the same hour it is:             o(t,x) = mean\\{i(t',x), t_1&lt;t'&lt;=t_n\\} houravg    Hourly average            For every adjacent sequence t_1, ...,t_n of timesteps of the same hour it is:             o(t,x) = avg\\{i(t',x), t_1&lt;t'&lt;=t_n\\} hourstd    Hourly standard deviation            Normalize by n. For every adjacent sequence t_1, ...,t_n of timesteps of the same hour it is:             o(t,x) = std\\{i(t',x), t_1&lt;t'&lt;=t_n\\} hourstd1   Hourly standard deviation (n-1)            Normalize by (n-1). For every adjacent sequence t_1, ...,t_n of timesteps of the same hour it is:             o(t,x) = std1\\{i(t',x), t_1&lt;t'&lt;=t_n\\} hourvar    Hourly variance            Normalize by n. For every adjacent sequence t_1, ...,t_n of timesteps of the same hour it is:             o(t,x) = var\\{i(t',x), t_1&lt;t'&lt;=t_n\\} hourvar1   Hourly variance (n-1)            Normalize by (n-1). For every adjacent sequence t_1, ...,t_n of timesteps of the same hour it is:             o(t,x) = var1\\{i(t',x), t_1&lt;t'&lt;=t_n\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/hurr.html","id":null,"dir":"Reference","previous_headings":"","what":"Hurricane days index per time period — cdo_hurr","title":"Hurricane days index per time period — cdo_hurr","text":"Let infile time series daily maximum horizontal wind speed VX, number days VX greater equal 32.5 m/s counted. output variable maximum number consecutive days maximum wind speed greater equal 32.5 m/s. Note VX defined square root sum squares zonal meridional wind speeds given units m/s. date information timestep outfile date last contributing timestep infile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/hurr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hurricane days index per time period — cdo_hurr","text":"","code":"cdo_hurr(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/hurr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hurricane days index per time period — cdo_hurr","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/importamsr.html","id":null,"dir":"Reference","previous_headings":"","what":"Import AMSR binary files — cdo_import_amsr","title":"Import AMSR binary files — cdo_import_amsr","text":"operator imports gridded binary AMSR (Advanced Microwave Scanning Radiometer) data. binary data files available AMSR ftp site (ftp://ftp.ssmi.com/amsre). file consists twelve (daily) five (averaged) 0.25 x 0.25 degree grid (1440,720) byte maps. daily files, six daytime maps following order, Time (UTC), Sea Surface Temperature (SST), 10 meter Surface Wind Speed (WSPD), Atmospheric Water Vapor (VAPOR), Cloud Liquid Water (CLOUD), Rain Rate (RAIN), followed six nighttime maps order. Time-Averaged files contain just geophysical layers order [SST, WSPD, VAPOR, CLOUD, RAIN]. information data available AMSR homepage http://www.remss.com/amsr.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/importamsr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import AMSR binary files — cdo_import_amsr","text":"","code":"cdo_import_amsr(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/importamsr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import AMSR binary files — cdo_import_amsr","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/importbinary.html","id":null,"dir":"Reference","previous_headings":"","what":"Import binary data sets — cdo_import_binary","title":"Import binary data sets — cdo_import_binary","text":"operator imports gridded binary data sets via GrADS data descriptor file. GrADS data descriptor file contains complete description binary data well instructions find data read . descriptor file ASCII file can created easily text editor. general contents gridded data descriptor file follows: - Filename binary data - Missing undefined data value - Mapping grid coordinates world coordinates - Description variables binary data set  detailed description components GrADS data descriptor file can found GrADS. list supported components: BYTESWAPPED, CHSUB, DSET, ENDVARS, FILEHEADER, HEADERBYTES, OPTIONS, TDEF, TITLE, TRAILERBYTES, UNDEF, VARS, XDEF, XYHEADER, YDEF, ZDEF","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/importbinary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import binary data sets — cdo_import_binary","text":"","code":"cdo_import_binary(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/importbinary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import binary data sets — cdo_import_binary","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/importbinary.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Import binary data sets — cdo_import_binary","text":"32-bit IEEE floats supported standard binary files!","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/importcmsaf.html","id":null,"dir":"Reference","previous_headings":"","what":"Import CMSAF HDF5 files — cdo_import_cmsaf","title":"Import CMSAF HDF5 files — cdo_import_cmsaf","text":"operator imports gridded CM-SAF (Satellite Application Facility Climate Monitoring) HDF5 files. CM-SAF exploits data polar-orbiting geostationary satellites order provide climate monitoring products following parameters:  Cloud parameters: cloud fraction (CFC), cloud type (CTY), cloud phase (CPH), cloud top height, pressure temperature (CTH,CTP,CTT), cloud optical thickness (COT), cloud water path (CWP).  Surface radiation components: Surface albedo (SAL); surface incoming (SIS) net (SNS) shortwave radiation; surface downward (SDL) outgoing (SOL) longwave radiation, surface net longwave radiation (SNL) surface radiation budget (SRB).  Top--atmosphere radiation components: Incoming (TIS) reflected (TRS) solar radiative flux top--atmosphere. Emitted thermal radiative flux top--atmosphere (TET).  Water vapour:     Vertically integrated water vapour (HTW), layered vertically integrated water vapour layer mean temperature relative humidity 5 layers (HLW), temperature mixing ratio 6 pressure levels.  Daily monthly mean products can ordered via CM-SAF web page (www.cmsaf.eu). Products higher spatial temporal resolution, .e. instantaneous swath-based products, available request (contact.cmsaf@dwd.de). products distributed free--charge. information data available CM-SAF homepage (www.cmsaf.eu).  Daily monthly mean products provided equal-area projections. CDO reads projection parameters metadata HDF5-headers order allow spatial operations like remapping. spatial operations instantaneous products original satellite projection, additional files arrays latitudes longitudes needed. can obtained CM-SAF together data.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/importcmsaf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import CMSAF HDF5 files — cdo_import_cmsaf","text":"","code":"cdo_import_cmsaf(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/importcmsaf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import CMSAF HDF5 files — cdo_import_cmsaf","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/importcmsaf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Import CMSAF HDF5 files — cdo_import_cmsaf","text":"use operator, necessary build CDO HDF5 support (version 1.6 higher). PROJ library (version 5.0 higher) needed full support remapping functionality.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/info.html","id":null,"dir":"Reference","previous_headings":"","what":"Information and simple statistics — info","title":"Information and simple statistics — info","text":"module writes information structure contents field input files standard output. field horizontal layer data variable. input files need structure variables different timesteps. information displayed depends chosen operator.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Information and simple statistics — info","text":"","code":"info   Dataset information listed by parameter identifier        Prints information and simple statistics for each field of all input datasets.        For each field the operator prints one line with the following elements:        - Date and Time        - Level, Gridsize and number of Missing values        - Minimum, Mean and Maximum \\\\        The mean value is computed without the use of area weights!        - Parameter identifier infon  Dataset information listed by parameter name        The same as operator info but using the name instead of the        identifier to label the parameter. map    Dataset information and simple map        Prints information, simple statistics and a map for each field of all input        datasets. The map will be printed only for fields on a regular lon/lat grid."},{"path":"https://eliocamp.github.io/rcdo/reference/input.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatted input — cdo_input","title":"Formatted input — cdo_input","text":"module reads time series one 2D variable standard input. input fields need horizontal grid. format input depends chosen operator.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatted input — cdo_input","text":"","code":"cdo_input(ifile, grid = NULL, zaxis = NULL, ofile = NULL)  cdo_inputext(ifile, grid = NULL, zaxis = NULL, ofile = NULL)  cdo_inputsrv(ifile, grid = NULL, zaxis = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formatted input — cdo_input","text":"ifile Strings path input files. grid STRING - Grid description file name zaxis STRING - Z-axis description file ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/input.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Formatted input — cdo_input","text":"","code":"input     ASCII input           Reads fields with ASCII numbers from standard input and stores them           in outfile. The numbers read are exactly that ones which are written           out by the output operator. inputsrv  SERVICE ASCII input           Reads fields with ASCII numbers from standard input and stores them           in outfile. Each field should have a header of 8 integers (SERVICE likely).           The numbers that are read are exactly that ones which are written out by           the outputsrv operator. inputext  EXTRA ASCII input           Read fields with ASCII numbers from standard input and stores them           in outfile. Each field should have header of 4 integers (EXTRA likely).           The numbers read are exactly that ones which are written out by           the outputext operator."},{"path":"https://eliocamp.github.io/rcdo/reference/intlevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear level interpolation — cdo_intlevel","title":"Linear level interpolation — cdo_intlevel","text":"operator performs linear vertical interpolation 3D variables. 1D target levels can specified level parameter read via Z-axis description file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/intlevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear level interpolation — cdo_intlevel","text":"","code":"cdo_intlevel(   ifile,   level = NULL,   zdescription = NULL,   zvarname = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/intlevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear level interpolation — cdo_intlevel","text":"ifile String path input file. level FLOAT - Comma-separated list target levels zdescription STRING - Path file containing description Z-axis zvarname STRING - Use zvarname vertical 3D source coordinate instead 1D coordinate variable ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/intlevel3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear level interpolation from/to 3D vertical coordinates — cdo_intlevel3d","title":"Linear level interpolation from/to 3D vertical coordinates — cdo_intlevel3d","text":"operator performs linear vertical interpolation 3D variables fields given 3D vertical coordinates. infile1 contains 3D data variables infile2 3D vertical source coordinate. parameter tgtcoordinate datafile 3D vertical target coordinate.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/intlevel3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear level interpolation from/to 3D vertical coordinates — cdo_intlevel3d","text":"","code":"cdo_intlevel3d(ifile1, ifile2, tgtcoordinate = NULL, ofile = NULL)  cdo_intlevelx3d(ifile1, ifile2, tgtcoordinate = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/intlevel3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear level interpolation from/to 3D vertical coordinates — cdo_intlevel3d","text":"ifile1, ifile2 Strings path input files. tgtcoordinate STRING - filename 3D vertical target coordinates ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/intlevel3d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear level interpolation from/to 3D vertical coordinates — cdo_intlevel3d","text":"","code":"intlevel3d   Linear level interpolation onto a 3D vertical coordinate intlevelx3d  like intlevel3d but with extrapolation"},{"path":"https://eliocamp.github.io/rcdo/reference/inttime.html","id":null,"dir":"Reference","previous_headings":"","what":"Time interpolation — cdo_intntime","title":"Time interpolation — cdo_intntime","text":"module performs linear interpolation timesteps. Interpolation performed values exist. values missing values, result also missing value. one value exists, taken time weighting greater equal 0.5. new value created existing time steps, value missing .","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/inttime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time interpolation — cdo_intntime","text":"","code":"cdo_intntime(   ifile,   date = NULL,   time = NULL,   inc = NULL,   n = NULL,   ofile = NULL )  cdo_inttime(   ifile,   date = NULL,   time = NULL,   inc = NULL,   n = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/inttime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time interpolation — cdo_intntime","text":"ifile String path input file. date STRING - Start date (format YYYY-MM-DD) time STRING - Start time (format hh:mm:ss) inc STRING - Optional increment (seconds, minutes, hours, days, months, years) [default: 0hour] n INTEGER - Number timesteps one timestep next ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/inttime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Time interpolation — cdo_intntime","text":"","code":"inttime   Interpolation between timesteps           This operator creates a new dataset by linear interpolation between timesteps.           The user has to define the start date/time with an optional increment. intntime  Interpolation between timesteps           This operator performs linear interpolation between timesteps.           The user has to define the number of timesteps from one timestep to the next."},{"path":"https://eliocamp.github.io/rcdo/reference/intyear.html","id":null,"dir":"Reference","previous_headings":"","what":"Year interpolation — cdo_intyear","title":"Year interpolation — cdo_intyear","text":"operator performs linear interpolation two years, timestep timestep. input files need structure variables. output files named <obase><yyyy><suffix> yyyy year suffix filename extension derived file format.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/intyear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Year interpolation — cdo_intyear","text":"","code":"cdo_intyear(ifile1, ifile2, years = NULL, obase = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/intyear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Year interpolation — cdo_intyear","text":"ifile1, ifile2 Strings path input files. years INTEGER - Comma-separated list first/last[/inc] range years obase String basename output files.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/intyear.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Year interpolation — cdo_intyear","text":"operator needs open output files simultaneously. maximum number open files depends operating system!","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/invert.html","id":null,"dir":"Reference","previous_headings":"","what":"Invert latitudes — cdo_invertlat","title":"Invert latitudes — cdo_invertlat","text":"operator inverts latitudes fields rectilinear grid.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/invert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invert latitudes — cdo_invertlat","text":"","code":"cdo_invertlat(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/invert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invert latitudes — cdo_invertlat","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/invertlev.html","id":null,"dir":"Reference","previous_headings":"","what":"Invert levels — cdo_invertlev","title":"Invert levels — cdo_invertlev","text":"operator inverts levels 3D variables.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/invertlev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invert levels — cdo_invertlev","text":"","code":"cdo_invertlev(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/invertlev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invert levels — cdo_invertlev","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/maggraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Line graph plot — cdo_graph","title":"Line graph plot — cdo_graph","text":"operator generates line graph plots. data plot read infiles. result written outfile. default output file format postscript, can changed device parameter.  list graph plot parameters:  Keyname    & Type    & Description device     & STRING  & Output device (ps, eps, pdf, png, gif, gif_animation, jpeg, svg, kml) ymin       & FLOAT   & Minimum value y-axis data ymax       & FLOAT   & Maximum value y-axis data linewidth  & INT     & Linewidth (default 8) stat       & STRING  & \\\"TRUE\\\" \\\"FALSE\\ switch mean computation. Default \\\"FALSE\\\". &         & overridden \\\"FALSE\\ input files unequal number time &         & steps different start/end times. sigma      & FLOAT   & Standard deviation value generating shaded back ground around mean value. &         & used conjunction 'stat=\\\"TRUE\\\"' obsv       & STRING  & indicate input files observation data, setting \\\"TRUE\\\". &         & Default value \\\"FALSE\\\". observation data first file &         & input file list. observation data always plotted black colour.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/maggraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line graph plot — cdo_graph","text":"","code":"cdo_graph(ifiles, parameter = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/maggraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line graph plot — cdo_graph","text":"ifiles Character vector path input files. parameter STRING - Comma-separated list plot parameters ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/magplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Lat/Lon plot — cdo_contour","title":"Lat/Lon plot — cdo_contour","text":"operators module generates 2D Lon/Lat plots. data plot read infile. data rectilinear Lon/Lat grids supported. output file named <obase>_<param>.<device> param parameter name device device name. default output file format postscript, can changed device parameter. type plot depends choosen operator.  list common plot parameters:  Keyname     & Type    & Description device      & STRING  & Output device (ps, eps, pdf, png, gif, gif_animation, jpeg, svg, kml) projection  & STRING  & Projection (cylindrical, polar_stereographic, robinson, mercator) style       & STRING  & Contour line style (solid, dash, dot, chain_dash, chain_dot) min         & FLOAT   & Minimum value max         & FLOAT   & Maximum value lon_max     & FLOAT   & Maximum longitude image lon_min     & FLOAT   & Minimum longitude image lat_max     & FLOAT   & Maximum latitude image lat_min     & FLOAT   & Minimum latitude image count       & INTEGER & Number Contour levels / Colour bands interval    & FLOAT   & Interval data units two bands lines list        & INTEGER & List levels plotted RGB         & STRING  & TRUE FALSE,  indicate, input colour RGB format step_freq   & INTEGER & Frequency time steps considered making animation &         & (device=gif_animation). Default value \\\"1\\\" (time steps). &         & ignored input file multiple variables. file_split  & STRING  & TRUE FALSE, split output file variable, input &         & multiple variables. Default value \\\"FALSE\\\". Valid \\\"PS\\\" format.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/magplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lat/Lon plot — cdo_contour","text":"","code":"cdo_contour(ifile, parameter = NULL, ofile = NULL)  cdo_grfill(ifile, parameter = NULL, ofile = NULL)  cdo_shaded(ifile, parameter = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/magplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lat/Lon plot — cdo_contour","text":"ifile String path input file. parameter STRING - Comma-separated list plot parameters ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/magplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lat/Lon plot — cdo_contour","text":"","code":"contour  Contour plot          The operator contour generates the discrete contour lines of the input field values.          The following additional parameters are valid for contour operator,          module in addition to the common plot parameters:            Keyname      &amp; Type    &amp; Description           colour       &amp; STRING  &amp; Colour for drawing the contours           thickness    &amp; FLOAT   &amp; Thickness of the contour line           style        &amp; STRING  &amp; Line Style can be \\&quot;SOLID\\ \\&quot;DASH\\ \\&quot;DOT\\ \\&quot;CHAIN_DASH\\                        &amp;         &amp; \\&quot;CHAIN_DOT\\&quot; shaded   Shaded contour plot          The operator shaded generates the filled contours of the given input field values.          The following additional parameters are valid for shaded contour and gridfill operator,          in addition to the common plot parameters.            Keyname      &amp; Type    &amp; Description           colour_min   &amp; STRING  &amp; Colour for the Minimum colour band           colour_max   &amp; STRING  &amp; Colour for the Minimum colour band           colour_triad &amp; STRING  &amp; Direction of colour sequencing for shading \\&quot;CW\\&quot; or \\&quot;ACW\\                        &amp;         &amp; to denote \\&quot;clockwise\\&quot; and \\&quot;anticlockwise\\&quot; respectively.                        &amp;         &amp; To be used in conjunction with \\&quot;colour_min\\ \\&quot;colour_max\\&quot;                        &amp;         &amp; options. Default is \\&quot;ACW\\&quot;           colour_table &amp; STRING  &amp; File with user specified colours with the format as           Example file for 6 colours in RGB format:             6             RGB(0.0;0.0;1.0)             RGB(0.0;0.0;0.5)             RGB(0.0;0.5;0.5)             RGB(0.0;1.0;0.0)             RGB(0.5;0.5;0.0)             RGB(1.0;0.0;0.0)  grfill   Shaded gridfill plot          The operator grfill is similar to satellite imaging and shades each cell (pixel) according          to the value of the field at that cell."},{"path":"https://eliocamp.github.io/rcdo/reference/magplot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Lat/Lon plot — cdo_contour","text":"colour parameter can either standard name RGB format. valid standard name strings \\\"colour\\\" :  \\\"red\\ \\\"green\\ \\\"blue\\ \\\"yellow\\ \\\"cyan\\ \\\"magenta\\ \\\"black\\ \\\"avocado\\ \\\"beige\\ \\\"brick\\ \\\"brown\\ \\\"burgundy\\ \\\"charcoal\\ \\\"chestnut\\ \\\"coral\\ \\\"cream\\ \\\"evergreen\\ \\\"gold\\ \\\"grey\\ \\\"khaki\\ \\\"kellygreen\\ \\\"lavender\\ \\\"mustard\\ \\\"navy\\ \\\"ochre\\ \\\"olive\\ \\\"peach\\ \\\"pink\\ \\\"rose\\ \\\"rust\\ \\\"sky\\ \\\"tan\\ \\\"tangerine\\ \\\"turquoise\\ \\\"violet\\ \\\"reddishpurple\\ \\\"purplered\\ \\\"purplishred\\ \\\"orangishred\\ \\\"redorange\\ \\\"reddishorange\\ \\\"orange\\ \\\"yellowishorange\\ \\\"orangeyellow\\ \\\"orangishyellow\\ \\\"greenishyellow\\ \\\"yellowgreen\\ \\\"yellowishgreen\\ \\\"bluishgreen\\ \\\"bluegreen\\ \\\"greenishblue\\ \\\"purplishblue\\ \\\"bluepurple\\ \\\"bluishpurple\\ \\\"purple\\ \\\"white\\\"","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/magvector.html","id":null,"dir":"Reference","previous_headings":"","what":"Lat/Lon vector plot — cdo_vector","title":"Lat/Lon vector plot — cdo_vector","text":"operator generates 2D Lon/Lat vector plots. data plot read infile. input expected contain two velocity components. data rectilinear Lon/Lat grids supported. output file named <obase>.<device> device device name. default output file format postscript, can changed device parameter.  list vector plot parameters:  Keyname     & Type    & Description device      & STRING  & Output device (ps, eps, pdf, png, gif, gif_animation, jpeg, svg, kml) projection  & STRING  & Projection (cylindrical, polar_stereographic, robinson, mercator) thin_fac    & FLOAT   & Controls actual number wind arrows flags plotted (default 2). unit_vec    & FLOAT   & Wind speed m/s represented unit vector (1.0cm) step_freq   & INTEGER & Frequency time steps considered making animation &         & (device=gif_animation). Default value \\\"1\\\" (time steps). &         & ignored input file multiple variables.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/magvector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lat/Lon vector plot — cdo_vector","text":"","code":"cdo_vector(ifile, parameter = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/magvector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lat/Lon vector plot — cdo_vector","text":"ifile String path input file. parameter STRING - Comma-separated list plot parameters ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/mapreduce.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce fields to userdefined mask — cdo_reducegrid","title":"Reduce fields to userdefined mask — cdo_reducegrid","text":"module holds operator data reduction based user defined mask. output grid unstructured includes coordinate bounds. Bounds can avoided using additional 'nobounds' keyword. 'nocoords' given, coordinates completely suppressed.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/mapreduce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce fields to userdefined mask — cdo_reducegrid","text":"","code":"cdo_reducegrid(ifile, mask = NULL, limitCoordsOutput = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/mapreduce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce fields to userdefined mask — cdo_reducegrid","text":"ifile String path input file. mask STRING - file holds mask field limitCoordsOutput STRING - optional parameter limit coordinates output: 'nobounds' disables coordinate bounds, 'nocoords' avoids coordinate information ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/maskbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Mask a box — cdo_maskindexbox","title":"Mask a box — cdo_maskindexbox","text":"Masks grid cells inside lon/lat index box. elements inside box untouched, elements outside set missing value. input fields need horizontal grid. Use sellonlatbox selindexbox data inside box needed.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/maskbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mask a box — cdo_maskindexbox","text":"","code":"cdo_maskindexbox(   ifile,   lon1 = NULL,   lon2 = NULL,   lat1 = NULL,   lat2 = NULL,   idx1 = NULL,   idx2 = NULL,   idy1 = NULL,   idy2 = NULL,   ofile = NULL )  cdo_masklonlatbox(   ifile,   lon1 = NULL,   lon2 = NULL,   lat1 = NULL,   lat2 = NULL,   idx1 = NULL,   idx2 = NULL,   idy1 = NULL,   idy2 = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/maskbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mask a box — cdo_maskindexbox","text":"ifile String path input file. lon1 FLOAT - Western longitude lon2 FLOAT - Eastern longitude lat1 FLOAT - Southern northern latitude lat2 FLOAT - Northern southern latitude idx1 INTEGER - Index first longitude idx2 INTEGER - Index last longitude idy1 INTEGER - Index first latitude idy2 INTEGER - Index last latitude ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/maskbox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mask a box — cdo_maskindexbox","text":"","code":"masklonlatbox  Mask a longitude/latitude box                Masks grid cells inside a lon/lat box. The user must specify the longitude and latitude of the edges of the box.                Only those grid cells are considered whose grid center lies within the lon/lat box.                For rotated lon/lat grids the parameters must be specified in rotated coordinates. maskindexbox   Mask an index box                Masks grid cells within an index box. The user must specify the indices of the edges of the box.                The index of the left edge can be greater then the one of the right edge. Use negative indexing to                start from the end. The input grid must be a regular lon/lat or a 2D curvilinear grid."},{"path":"https://eliocamp.github.io/rcdo/reference/maskregion.html","id":null,"dir":"Reference","previous_headings":"","what":"Mask regions — cdo_maskregion","title":"Mask regions — cdo_maskregion","text":"Masks different regions input fields. grid cells inside region untouched, cells outside set missing value. Considered grid cells grid center inside regions. input fields must horizontal grid.  Regions can defined user via ASCII file. region consists geographic coordinates convex polygon. line polygon description file contains longitude latitude one point. polygon description file can contain one polygons separated line character \\&.  Predefined regions countries can specified via country codes. country specified dcw:<CountryCode>. Country codes can combined plus sign.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/maskregion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mask regions — cdo_maskregion","text":"","code":"cdo_maskregion(ifile, regions = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/maskregion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mask regions — cdo_maskregion","text":"ifile String path input file. regions STRING - Comma-separated list ASCII formatted files different regions ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/mastrfu.html","id":null,"dir":"Reference","previous_headings":"","what":"Mass stream function — cdo_mastrfu","title":"Mass stream function — cdo_mastrfu","text":"special operator post processing atmospheric general circulation model ECHAM. computes mass stream function (code=272). input dataset zonal mean v-velocity [m/s] (code=132) pressure levels.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/mastrfu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mass stream function — cdo_mastrfu","text":"","code":"cdo_mastrfu(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/mastrfu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mass stream function — cdo_mastrfu","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/math.html","id":null,"dir":"Reference","previous_headings":"","what":"Mathematical functions — cdo_abs","title":"Mathematical functions — cdo_abs","text":"module contains standard mathematical functions. trigonometric functions calculate radians.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/math.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mathematical functions — cdo_abs","text":"","code":"cdo_abs(ifile, ofile = NULL)  cdo_acos(ifile, ofile = NULL)  cdo_asin(ifile, ofile = NULL)  cdo_atan(ifile, ofile = NULL)  cdo_cos(ifile, ofile = NULL)  cdo_exp(ifile, ofile = NULL)  cdo_int(ifile, ofile = NULL)  cdo_ln(ifile, ofile = NULL)  cdo_log10(ifile, ofile = NULL)  cdo_nint(ifile, ofile = NULL)  cdo_not(ifile, ofile = NULL)  cdo_pow(ifile, ofile = NULL)  cdo_reci(ifile, ofile = NULL)  cdo_sin(ifile, ofile = NULL)  cdo_sqr(ifile, ofile = NULL)  cdo_sqrt(ifile, ofile = NULL)  cdo_tan(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/math.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mathematical functions — cdo_abs","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/math.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mathematical functions — cdo_abs","text":"","code":"abs    Absolute value        o(t,x) = abs(i(t,x)) int    Integer value        o(t,x) = int(i(t,x)) nint   Nearest integer value        o(t,x) = nint(i(t,x)) pow    Power        o(t,x) = i(t,x)^y sqr    Square        o(t,x) = i(t,x)^2 sqrt   Square root        o(t,x) = sqrt(i(t,x)) exp    Exponential        o(t,x) = e^i(t,x) ln     Natural logarithm        o(t,x) = ln(i(t,x)) log10  Base 10 logarithm        o(t,x) = log10(i(t,x)) sin    Sine        o(t,x) = sin(i(t,x)) cos    Cosine        o(t,x) = cos(i(t,x)) tan    Tangent        o(t,x) = tan(i(t,x)) asin   Arc sine        o(t,x) = asin(i(t,x)) acos   Arc cosine        o(t,x) = acos(i(t,x)) atan   Arc tangent        o(t,x) = atan(i(t,x)) reci   Reciprocal value        o(t,x) = 1 / i(t,x) not    Logical NOT        o(t,x) = 1, if x equal 0; else 0"},{"path":"https://eliocamp.github.io/rcdo/reference/merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge datasets — cdo_merge","title":"Merge datasets — cdo_merge","text":"module reads datasets several input files, merges writes resulting dataset outfile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge datasets — cdo_merge","text":"","code":"cdo_merge(ifiles, skip_same_time = NULL, names = NULL, ofile = NULL)  cdo_mergetime(ifiles, skip_same_time = NULL, names = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge datasets — cdo_merge","text":"ifiles Character vector path input files. skip_same_time BOOL - Skips consecutive timesteps double entry timestamp. names STRING - Fill missing variable names missing values (union) use intersection (intersect). ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/merge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge datasets — cdo_merge","text":"","code":"merge      Merge datasets with different fields            Merges time series of different fields from several input datasets. The number            of fields per timestep written to outfile is the sum of the field numbers            per timestep in all input datasets. The time series on all input datasets are            required to have different fields and the same number of timesteps.            The fields in each different input file either have to be different variables            or different levels of the same variable. A mixture of different variables on            different levels in different input files is not allowed. mergetime  Merge datasets sorted by date and time            Merges all timesteps of all input files sorted by date and time.            All input files need to have the same structure with the same variables on            different timesteps. After this operation every input timestep is in outfile            and all timesteps are sorted by date and time."},{"path":"https://eliocamp.github.io/rcdo/reference/merge.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Merge datasets — cdo_merge","text":"Operators module need open input files simultaneously. maximum number open files depends operating system!","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/mergegrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge grid — cdo_mergegrid","title":"Merge grid — cdo_mergegrid","text":"Merges grid points variables infile2 infile1 write result outfile. non missing values infile2 used. horizontal grid infile2 smaller equal grid infile1 resolution must . rectilinear grids supported. input files need variables number timesteps.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/mergegrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge grid — cdo_mergegrid","text":"","code":"cdo_mergegrid(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/mergegrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge grid — cdo_mergegrid","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/merstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Meridional statistics — cdo_meravg","title":"Meridional statistics — cdo_meravg","text":"module computes meridional statistical values input fields. Depending chosen operator, meridional minimum, maximum, range, sum, average, standard deviation, variance, skewness, kurtosis, median certain percentile field written outfile. Operators module require variables regular lon/lat grid.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/merstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meridional statistics — cdo_meravg","text":"","code":"cdo_meravg(ifile, p = NULL, ofile = NULL)  cdo_merkurt(ifile, p = NULL, ofile = NULL)  cdo_mermax(ifile, p = NULL, ofile = NULL)  cdo_mermean(ifile, p = NULL, ofile = NULL)  cdo_mermedian(ifile, p = NULL, ofile = NULL)  cdo_mermin(ifile, p = NULL, ofile = NULL)  cdo_merpctl(ifile, p = NULL, ofile = NULL)  cdo_merrange(ifile, p = NULL, ofile = NULL)  cdo_merskew(ifile, p = NULL, ofile = NULL)  cdo_merstd(ifile, p = NULL, ofile = NULL)  cdo_merstd1(ifile, p = NULL, ofile = NULL)  cdo_mersum(ifile, p = NULL, ofile = NULL)  cdo_mervar(ifile, p = NULL, ofile = NULL)  cdo_mervar1(ifile, p = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/merstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Meridional statistics — cdo_meravg","text":"ifile String path input file. p FLOAT - Percentile number {0, ..., 100} ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/merstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Meridional statistics — cdo_meravg","text":"","code":"mermin     Meridional minimum            For every longitude the minimum over all latitudes is computed. mermax     Meridional maximum            For every longitude the maximum over all latitudes is computed. merrange   Meridional range            For every longitude the range over all latitudes is computed. mersum     Meridional sum            For every longitude the sum over all latitudes is computed. mermean    Meridional mean            For every longitude the area weighted mean over all latitudes is computed. meravg     Meridional average            For every longitude the area weighted average over all latitudes is computed. merstd     Meridional standard deviation            For every longitude the standard deviation over all latitudes is computed. Normalize by n. merstd1    Meridional standard deviation (n-1)            For every longitude the standard deviation over all latitudes is computed. Normalize by (n-1). mervar     Meridional variance            For every longitude the variance over all latitudes is computed. Normalize by n. mervar1    Meridional variance (n-1)            For every longitude the variance over all latitudes is computed. Normalize by (n-1). merskew    Meridional skewness            For every longitude the skewness over all latitudes is computed. merkurt    Meridional kurtosis            For every longitude the kurtosis over all latitudes is computed. mermedian  Meridional median            For every longitude the median over all latitudes is computed. merpctl    Meridional percentiles            For every longitude the pth percentile over all latitudes is computed."},{"path":"https://eliocamp.github.io/rcdo/reference/monarith.html","id":null,"dir":"Reference","previous_headings":"","what":"Monthly arithmetic — cdo_monadd","title":"Monthly arithmetic — cdo_monadd","text":"module performs simple arithmetic time series one timestep month year. field infile1 corresponding field timestep infile2 month year used. input files need structure variables. Usually infile2 generated operator module MONSTAT.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/monarith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monthly arithmetic — cdo_monadd","text":"","code":"cdo_monadd(ifile1, ifile2, ofile = NULL)  cdo_mondiv(ifile1, ifile2, ofile = NULL)  cdo_monmul(ifile1, ifile2, ofile = NULL)  cdo_monsub(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/monarith.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monthly arithmetic — cdo_monadd","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/monarith.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monthly arithmetic — cdo_monadd","text":"","code":"monadd  Add monthly time series         Adds a time series and a monthly time series. monsub  Subtract monthly time series         Subtracts a time series and a monthly time series. monmul  Multiply monthly time series         Multiplies a time series and a monthly time series. mondiv  Divide monthly time series         Divides a time series and a monthly time series."},{"path":"https://eliocamp.github.io/rcdo/reference/monpctl.html","id":null,"dir":"Reference","previous_headings":"","what":"Monthly percentile values — cdo_monpctl","title":"Monthly percentile values — cdo_monpctl","text":"operator computes percentiles timesteps month infile1. algorithm uses histograms minimum maximum bounds given infile2 infile3, respectively. default number histogram bins 101. default can overridden defining environment variable CDO_PCTL_NBINS. files infile2 infile3 result corresponding monmin monmax operations, respectively. time outfile determined time middle contributing timesteps infile1. can change CDO option –timestat_date <first|middle|last>. every adjacent sequence t_1, ...,t_n timesteps month :  o(t,x) = pth percentile {(t',x), t_1<t'<=t_n}","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/monpctl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monthly percentile values — cdo_monpctl","text":"","code":"cdo_monpctl(ifile1, ifile2, ifile3, p = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/monpctl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monthly percentile values — cdo_monpctl","text":"ifile1, ifile2, ifile3 Strings path input files. p FLOAT - Percentile number {0, ..., 100} ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/monstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Monthly statistics — cdo_monavg","title":"Monthly statistics — cdo_monavg","text":"module computes statistical values timesteps month. Depending chosen operator minimum, maximum, range, sum, average, variance standard deviation timesteps month written outfile. time outfile determined time middle contributing timesteps infile. can change CDO option –timestat_date <first|middle|last>.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/monstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monthly statistics — cdo_monavg","text":"","code":"cdo_monavg(ifile, complete_only = NULL, ofile = NULL)  cdo_monmax(ifile, complete_only = NULL, ofile = NULL)  cdo_monmean(ifile, complete_only = NULL, ofile = NULL)  cdo_monmin(ifile, complete_only = NULL, ofile = NULL)  cdo_monrange(ifile, complete_only = NULL, ofile = NULL)  cdo_monstd(ifile, complete_only = NULL, ofile = NULL)  cdo_monstd1(ifile, complete_only = NULL, ofile = NULL)  cdo_monsum(ifile, complete_only = NULL, ofile = NULL)  cdo_monvar(ifile, complete_only = NULL, ofile = NULL)  cdo_monvar1(ifile, complete_only = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/monstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monthly statistics — cdo_monavg","text":"ifile String path input file. complete_only BOOL - Process last month complete ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/monstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monthly statistics — cdo_monavg","text":"","code":"monmin    Monthly minimum           For every adjacent sequence t_1, ...,t_n of timesteps of the same month it is:            o(t,x) = min\\{i(t',x), t_1&lt;t'&lt;=t_n\\} monmax    Monthly maximum           For every adjacent sequence t_1, ...,t_n of timesteps of the same month it is:            o(t,x) = max\\{i(t',x), t_1&lt;t'&lt;=t_n\\} monrange  Monthly range           For every adjacent sequence t_1, ...,t_n of timesteps of the same month it is:            o(t,x) = range\\{i(t',x), t_1&lt;t'&lt;=t_n\\} monsum    Monthly sum           For every adjacent sequence t_1, ...,t_n of timesteps of the same month it is:            o(t,x) = sum\\{i(t',x), t_1&lt;t'&lt;=t_n\\} monmean   Monthly mean           For every adjacent sequence t_1, ...,t_n of timesteps of the same month it is:            o(t,x) = mean\\{i(t',x), t_1&lt;t'&lt;=t_n\\} monavg    Monthly average           For every adjacent sequence t_1, ...,t_n of timesteps of the same month it is:            o(t,x) = avg\\{i(t',x), t_1&lt;t'&lt;=t_n\\} monstd    Monthly standard deviation           Normalize by n. For every adjacent sequence t_1, ...,t_n of timesteps of the same month it is:            o(t,x) = std\\{i(t',x), t_1 &lt; t' &lt;= t_n\\} monstd1   Monthly standard deviation (n-1)           Normalize by (n-1). For every adjacent sequence t_1, ...,t_n of timesteps of the same month it is:            o(t,x) = std1\\{i(t',x), t_1 &lt; t' &lt;= t_n\\} monvar    Monthly variance           Normalize by n. For every adjacent sequence t_1, ...,t_n of timesteps of the same month it is:            o(t,x) = var\\{i(t',x), t_1 &lt; t' &lt;= t_n\\} monvar1   Monthly variance (n-1)           Normalize by (n-1). For every adjacent sequence t_1, ...,t_n of timesteps of the same month it is:            o(t,x) = var1\\{i(t',x), t_1 &lt; t' &lt;= t_n\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/mrotuvb.html","id":null,"dir":"Reference","previous_headings":"","what":"Backward rotation of MPIOM data — cdo_mrotuvb","title":"Backward rotation of MPIOM data — cdo_mrotuvb","text":"MPIOM data rotated Arakawa C grid. velocity components U V located edges cells point direction grid lines rows. mrotuvb velocity vector rotated latitudinal longitudinal direction. rotation, U V interpolated scalar points (cell center). U located coordinates U infile1 V infile2. mrotuvb assumes positive meridional flow flow grid point(,j) grid point(,j+1) positive zonal flow flow grid point(+1,j) point(,j).","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/mrotuvb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backward rotation of MPIOM data — cdo_mrotuvb","text":"","code":"cdo_mrotuvb(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/mrotuvb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backward rotation of MPIOM data — cdo_mrotuvb","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/mrotuvb.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Backward rotation of MPIOM data — cdo_mrotuvb","text":"specific implementation data MPIOM model, may work data sources.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ncl_wind.html","id":null,"dir":"Reference","previous_headings":"","what":"Wind transformation — cdo_uv2dv_cfd","title":"Wind transformation — cdo_uv2dv_cfd","text":"module contains CDO operators interface NCL functions. corresponding NCL functions name. detailed description NCL function can found NCL homepage https://www.ncl.ucar.edu.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ncl_wind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wind transformation — cdo_uv2dv_cfd","text":"","code":"cdo_uv2dv_cfd(   ifile,   u = NULL,   v = NULL,   boundOpt = NULL,   outMode = NULL,   ofile = NULL )  cdo_uv2vr_cfd(   ifile,   u = NULL,   v = NULL,   boundOpt = NULL,   outMode = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/ncl_wind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wind transformation — cdo_uv2dv_cfd","text":"ifile String path input file. u STRING - Name variable u (default: u) v STRING - Name variable v (default: v) boundOpt INTEGER - Boundary condition option (0-3) (default: 0/1 cyclic grids) outMode STRING - Output mode new/append (default: new) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ncl_wind.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wind transformation — cdo_uv2dv_cfd","text":"","code":"uv2vr_cfd  U and V wind to relative vorticity            Computes relative vorticity for a latitude-longitude grid using centered finite differences.            The grid need not be global and missing values are allowed. uv2dv_cfd  U and V wind to divergence            Computes divergence for a latitude-longitude grid using centered finite differences.            The grid need not be global and missing values are allowed."},{"path":"https://eliocamp.github.io/rcdo/reference/ninfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the number of parameters, levels or times — ninfo","title":"Print the number of parameters, levels or times — ninfo","text":"module prints number variables, levels times input dataset.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ninfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print the number of parameters, levels or times — ninfo","text":"","code":"npar         Number of parameters              Prints the number of parameters (variables). nlevel       Number of levels              Prints the number of levels for each variable. nyear        Number of years              Prints the number of different years. nmon         Number of months              Prints the number of different combinations of years and months. ndate        Number of dates              Prints the number of different dates. ntime        Number of timesteps              Prints the number of timesteps. ngridpoints  Number of gridpoints              Prints the number of gridpoints for each variable. ngrids       Number of horizontal grids              Prints the number of horizontal grids."},{"path":"https://eliocamp.github.io/rcdo/reference/output.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatted output — output","title":"Formatted output — output","text":"module prints values input datasets standard output. input fields need horizontal grid. input files need structure variables. format output depends chosen operator.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/output.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Formatted output — output","text":"","code":"output     ASCII output            Prints all values to standard output.            Each row has 6 elements with the C-style format \\&quot;%13.6g\\&quot;. outputf    Formatted output            Prints all values to standard output.            The format and number of elements for each row have to be specified by the parameters            format and nelem. The default for nelem is 1. outputint  Integer output            Prints all values rounded to the nearest integer to standard output. outputsrv  SERVICE ASCII output            Prints all values to standard output.            Each field with a header of 8 integers (SERVICE likely). outputext  EXTRA ASCII output            Prints all values to standard output.            Each field with a header of 4 integers (EXTRA likely)."},{"path":"https://eliocamp.github.io/rcdo/reference/outputgmt.html","id":null,"dir":"Reference","previous_headings":"","what":"GMT output — outputgmt","title":"GMT output — outputgmt","text":"module prints first field input dataset standard output. output can used generate 2D Lon/Lat plots GMT. format output depends chosen operator.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/outputgmt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GMT output — outputgmt","text":"","code":"gmtxyz    GMT xyz format           The operator exports the first field to the GMT xyz ASCII format.           The output can be used to create contour plots with the GMT module pscontour. gmtcells  GMT multiple segment format           The operator exports the first field to the GMT multiple segment ASCII format.           The output can be used to create shaded gridfill plots with the GMT module psxy."},{"path":"https://eliocamp.github.io/rcdo/reference/outputtab.html","id":null,"dir":"Reference","previous_headings":"","what":"Table output — outputtab","title":"Table output — outputtab","text":"operator prints table input datasets standard output. infiles arbitrary number input files. input files need structure variables different timesteps. input fields need horizontal grid.  contents table depends chosen parameters. format table parameter keyname[:len]. len optional length table entry. number significant digits floating point parameters can set CDO option –precision, default 7. list valid keynames:  Keyname    & Type    & Description value      & FLOAT   & Value variable [len:8] name       & STRING  & Name variable [len:8] param      & STRING  & Parameter ID (GRIB1: code[.tabnum]; GRIB2: num[.cat[.dis]]) [len:11] code       & INTEGER & Code number [len:4] x          & FLOAT   & X coordinate original grid [len:6] y          & FLOAT   & Y coordinate original grid [len:6] lon        & FLOAT   & Longitude coordinate degrees [len:6] lat        & FLOAT   & Latitude coordinate degrees [len:6] lev        & FLOAT   & Vertical level [len:6] xind       & INTEGER & Grid x index [len:4] yind       & INTEGER & Grid y index [len:4] timestep   & INTEGER & Timestep number [len:6] date       & STRING  & Date (format YYYY-MM-DD) [len:10] time       & STRING  & Time (format hh:mm:ss) [len:8] year       & INTEGER & Year [len:5] month      & INTEGER & Month [len:2] day        & INTEGER & Day [len:2] nohead     & INTEGER & Disable output header line","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/pack.html","id":null,"dir":"Reference","previous_headings":"","what":"Pack data — cdo_pack","title":"Pack data — cdo_pack","text":"Packing reduces data volume reducing precision stored numbers. implemented using NetCDF attributes add_offset scale_factor. operator pack calculates attributes add_offset scale_factor variables. default data type variables automatically changed 16-bit integer. Use CDO option -b change data type different integer precision, needed. Missing values automatically transformed current data type.  Alternatively, pack parameters add_offset scale_factor can read file variable.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/pack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pack data — cdo_pack","text":"","code":"cdo_pack(ifile, printparam = NULL, filename = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/pack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pack data — cdo_pack","text":"ifile String path input file. printparam BOOL - Print pack parameters stdout variable filename STRING - Read pack parameters file variable[format: name=<> add_offset=<> scale_factor=<>] ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/pressure.html","id":null,"dir":"Reference","previous_headings":"","what":"Pressure on model levels — cdo_delta_pressure","title":"Pressure on model levels — cdo_delta_pressure","text":"module contains operators calculate pressure model levels. calculate pressure model levels, b coefficients defining model levels surface pressure required. b coefficients normally part model level data. available, surface pressure can derived logarithm surface pressure. surface pressure identified GRIB1 code number NetCDF CF standard name.  Name                       & Units      & GRIB1 code & CF standard name log surface pressure     &  Pa        &  152       & surface pressure         &  Pa        &  134       &  surface_air_pressure","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/pressure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pressure on model levels — cdo_delta_pressure","text":"","code":"cdo_delta_pressure(ifile, ofile = NULL)  cdo_pressure(ifile, ofile = NULL)  cdo_pressure_half(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/pressure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pressure on model levels — cdo_delta_pressure","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/pressure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pressure on model levels — cdo_delta_pressure","text":"","code":"pressure_half   Pressure on half-levels                 This operator computes the pressure on model half-levels in pascal.                 The model half-level pressure (p_half) is given by:                           p_half = a + b ∗ sp                  with                    a, b: coefficients defining the model levels                    sp: surface pressure pressure        Pressure on full-levels                 This operator computes the pressure on model full-levels in pascal.                 The pressure on model full-levels (p_full) is in the middle of the layers defined by the model half-levels:                          p_full = (p_half_above + p_half_below) / 2  delta_pressure  Pressure difference of half-levels                 This operator computes the pressure difference between to model half-levels.                          delta_p = p_half_below - p_half_above"},{"path":"https://eliocamp.github.io/rcdo/reference/regres.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression — cdo_regres","title":"Regression — cdo_regres","text":"values input file infile assumed distributed N(+b*t,S^2) unknown , b S^2. operator estimates parameter b. every field element x timesteps t belong sample S(x), (t,x) NE miss. assumed timesteps equidistant, case set parameter equal=false.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/regres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression — cdo_regres","text":"","code":"cdo_regres(ifile, equal = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/regres.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression — cdo_regres","text":"ifile String path input file. equal BOOL - Set false unequal distributed timesteps (default: true) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remap.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid remapping — cdo_remap","title":"Grid remapping — cdo_remap","text":"Interpolation different horizontal grids can time-consuming process. Especially data unstructured /large grid. case interpolation process can split two parts. Firstly generation interpolation weights, time-consuming part. interpolation weights can reused every remapping process operator remap. operator remaps input fields new horizontal grid. remap type interpolation weights one input grid read NetCDF file. weights computed input fields different grids. NetCDF file weights follow SCRIP convention. Normally weights come previous call one genXXX operators (e.g. genbil) created original SCRIP package.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid remapping — cdo_remap","text":"","code":"cdo_remap(ifile, grid = NULL, weights = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/remap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid remapping — cdo_remap","text":"ifile String path input file. grid STRING - Target grid description file name weights STRING - Interpolation weights (SCRIP NetCDF file) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remapbic.html","id":null,"dir":"Reference","previous_headings":"","what":"Bicubic interpolation — cdo_genbic","title":"Bicubic interpolation — cdo_genbic","text":"module contains operators bicubic remapping fields grids spherical coordinates. interpolation based adapted SCRIP library version. detailed description interpolation method see SCRIP. interpolation method works quadrilateral curvilinear source grids.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remapbic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bicubic interpolation — cdo_genbic","text":"","code":"cdo_genbic(ifile, grid = NULL, map3d = NULL, ofile = NULL)  cdo_remapbic(ifile, grid = NULL, map3d = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/remapbic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bicubic interpolation — cdo_genbic","text":"ifile String path input file. grid STRING - Target grid description file name map3d BOOL - Generate mapfiles first 3D field ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remapbic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bicubic interpolation — cdo_genbic","text":"","code":"remapbic  Bicubic interpolation           Performs a bicubic interpolation on all input fields. genbic    Generate bicubic interpolation weights           Generates bicubic interpolation weights for the first input field and writes the           result to a file. The format of this file is NetCDF following the SCRIP convention.           Use the operator remap to apply this remapping weights to a data file with the same source grid.           Set the parameter map3d=true to generate all mapfiles of the first 3D field with varying masks.           In this case the mapfiles will be named &lt;outfile&gt;&lt;xxx&gt;.nc. xxx will have five digits with the number of the mapfile."},{"path":"https://eliocamp.github.io/rcdo/reference/remapbil.html","id":null,"dir":"Reference","previous_headings":"","what":"Bilinear interpolation — cdo_genbil","title":"Bilinear interpolation — cdo_genbil","text":"module contains operators bilinear remapping fields grids spherical coordinates. interpolation based adapted SCRIP library version. detailed description interpolation method see SCRIP. interpolation method works quadrilateral curvilinear source grids.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remapbil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bilinear interpolation — cdo_genbil","text":"","code":"cdo_genbil(ifile, grid = NULL, map3d = NULL, ofile = NULL)  cdo_remapbil(ifile, grid = NULL, map3d = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/remapbil.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bilinear interpolation — cdo_genbil","text":"ifile String path input file. grid STRING - Target grid description file name map3d BOOL - Generate mapfiles first 3D field ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remapbil.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bilinear interpolation — cdo_genbil","text":"","code":"remapbil  Bilinear interpolation           Performs a bilinear interpolation on all input fields. genbil    Generate bilinear interpolation weights           Generates bilinear interpolation weights for the first input field and writes the           result to a file. The format of this file is NetCDF following the SCRIP convention.           Use the operator remap to apply this remapping weights to a data file with the same source grid.           Set the parameter map3d=true to generate all mapfiles of the first 3D field with varying masks.           In this case the mapfiles will be named &lt;outfile&gt;&lt;xxx&gt;.nc. xxx will have five digits with the number of the mapfile."},{"path":"https://eliocamp.github.io/rcdo/reference/remapcon.html","id":null,"dir":"Reference","previous_headings":"","what":"First order conservative remapping — cdo_gencon","title":"First order conservative remapping — cdo_gencon","text":"module contains operators first order conservative remapping fields grids spherical coordinates. operators module uses code YAC software package compute conservative remapping weights. detailed description interpolation method see YAC. interpolation method completely general can used grid sphere. search algorithm conservative remapping requires grid cell occurs .","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remapcon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"First order conservative remapping — cdo_gencon","text":"","code":"cdo_gencon(ifile, grid = NULL, map3d = NULL, ofile = NULL)  cdo_remapcon(ifile, grid = NULL, map3d = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/remapcon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"First order conservative remapping — cdo_gencon","text":"ifile String path input file. grid STRING - Target grid description file name map3d BOOL - Generate mapfiles first 3D field ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remapcon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"First order conservative remapping — cdo_gencon","text":"","code":"remapcon  First order conservative remapping           Performs a first order conservative remapping on all input fields. gencon    Generate 1st order conservative remap weights           Generates first order conservative remapping weights for the first input field and           writes the result to a file. The format of this file is NetCDF following the SCRIP convention.           Use the operator remap to apply this remapping weights to a data file with the same source grid.           Set the parameter map3d=true to generate all mapfiles of the first 3D field with varying masks.           In this case the mapfiles will be named &lt;outfile&gt;&lt;xxx&gt;.nc. xxx will have five digits with the number of the mapfile."},{"path":"https://eliocamp.github.io/rcdo/reference/remapdis.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance weighted average remapping — cdo_gendis","title":"Distance weighted average remapping — cdo_gendis","text":"module contains operators inverse distance weighted average remapping four nearest neighbor values fields grids spherical coordinates. default number 4 neighbors can changed neighbors parameter.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remapdis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance weighted average remapping — cdo_gendis","text":"","code":"cdo_gendis(ifile, grid = NULL, neighbors = NULL, map3d = NULL, ofile = NULL)  cdo_remapdis(ifile, grid = NULL, neighbors = NULL, map3d = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/remapdis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance weighted average remapping — cdo_gendis","text":"ifile String path input file. grid STRING - Target grid description file name neighbors INTEGER - Number nearest neighbors [default: 4] map3d BOOL - Generate mapfiles first 3D field ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remapdis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distance weighted average remapping — cdo_gendis","text":"","code":"remapdis  Distance weighted average remapping           Performs an inverse distance weighted averaged remapping of the nearest neighbor values on all input fields. gendis    Generate distance weighted average remap weights           Generates distance weighted averaged remapping weights of the nearest neighbor values for the first input           field and writes the result to a file. The format of this file is NetCDF following the SCRIP convention.           Use the operator remap to apply this remapping weights to a data file with the same source grid.           Set the parameter map3d=true to generate all mapfiles of the first 3D field with varying masks.           In this case the mapfiles will be named &lt;outfile&gt;&lt;xxx&gt;.nc. xxx will have five digits with the number of the mapfile."},{"path":"https://eliocamp.github.io/rcdo/reference/remapeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Remap vertical hybrid level — cdo_remapeta","title":"Remap vertical hybrid level — cdo_remapeta","text":"operator interpolates different vertical hybrid levels. include preparation consistent data free atmosphere. procedure vertical interpolation based HIRLAM scheme adapted INTERA. vertical interpolation based vertical integration hydrostatic equation adjustments. basic tasks following one: - first integration hydrostatic equation - extrapolation surface pressure - Planetary Boundary-Layer (PBL) proutfile interpolation - interpolation free atmosphere - merging proutfiles - final surface pressure correction  vertical interpolation corrects surface pressure. simply cut-addition air mass. mass correction influence geostrophic velocity field middle troposhere. Therefore total mass given reference level conserved. reference level geopotential height 400 hPa level used. Near surface correction can affect vertical structure PBL. Therefore interpolation done using potential temperature. free atmosphere certain n (n=0.8 defining top PBL) interpolation done linearly. interpolation proutfiles merged. resulting temperature/pressure correction hydrostatic equation integrated adjusted reference level finding final surface pressure correction. detailed description interpolation can found INTERA. operator requires variables horizontal grid.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remapeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remap vertical hybrid level — cdo_remapeta","text":"","code":"cdo_remapeta(ifile, vct = NULL, oro = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/remapeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remap vertical hybrid level — cdo_remapeta","text":"ifile String path input file. vct STRING - File name ASCII dataset vertical coordinate table oro STRING - File name orography (surf. geopotential) target dataset (optional) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remapeta.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Remap vertical hybrid level — cdo_remapeta","text":"code numbers variable names required parameter follow ECHAM convention.  Use sinfo command test vertical coordinate system recognized hybrid system.  case remapeta complains finding data hybrid model levels may wish use setzaxis command generate zaxis description conforms ECHAM convention. See section \\\"1.4 Z-axis description\\\" example define hybrid Z-axis.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remaplaf.html","id":null,"dir":"Reference","previous_headings":"","what":"Largest area fraction remapping — cdo_genlaf","title":"Largest area fraction remapping — cdo_genlaf","text":"module contains operators largest area fraction remapping fields grids spherical coordinates. operators module uses code YAC software package compute largest area fraction. detailed description interpolation method see YAC. interpolation method completely general can used grid sphere. search algorithm remapping method requires grid cell occurs .","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remaplaf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Largest area fraction remapping — cdo_genlaf","text":"","code":"cdo_genlaf(ifile, grid = NULL, ofile = NULL)  cdo_remaplaf(ifile, grid = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/remaplaf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Largest area fraction remapping — cdo_genlaf","text":"ifile String path input file. grid STRING - Target grid description file name ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remaplaf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Largest area fraction remapping — cdo_genlaf","text":"","code":"remaplaf  Largest area fraction remapping           Performs a largest area fraction remapping on all input fields. genlaf    Generate largest area fraction remap weights           Generates largest area fraction remapping weights for the first input field and           writes the result to a file. The format of this file is NetCDF following the SCRIP convention.           Use the operator remap to apply this remapping weights to a data file with the same source grid."},{"path":"https://eliocamp.github.io/rcdo/reference/remapnn.html","id":null,"dir":"Reference","previous_headings":"","what":"Nearest neighbor remapping — cdo_gennn","title":"Nearest neighbor remapping — cdo_gennn","text":"module contains operators nearest neighbor remapping fields grids spherical coordinates.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remapnn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nearest neighbor remapping — cdo_gennn","text":"","code":"cdo_gennn(ifile, grid = NULL, map3d = NULL, ofile = NULL)  cdo_remapnn(ifile, grid = NULL, map3d = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/remapnn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nearest neighbor remapping — cdo_gennn","text":"ifile String path input file. grid STRING - Target grid description file name map3d BOOL - Generate mapfiles first 3D field ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remapnn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nearest neighbor remapping — cdo_gennn","text":"","code":"remapnn  Nearest neighbor remapping          Performs a nearest neighbor remapping on all input fields. gennn    Generate nearest neighbor remap weights          Generates nearest neighbor remapping weights for the first input field and writes the result to a file.          The format of this file is NetCDF following the SCRIP convention.          Use the operator remap to apply this remapping weights to a data file with the same source grid.          Set the parameter map3d=true to generate all mapfiles of the first 3D field with varying masks.          In this case the mapfiles will be named &lt;outfile&gt;&lt;xxx&gt;.nc. xxx will have five digits with the number of the mapfile."},{"path":"https://eliocamp.github.io/rcdo/reference/remapstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Remaps source points to target cells — cdo_remapavg","title":"Remaps source points to target cells — cdo_remapavg","text":"module maps source points target cells calculating statistical value source points. target cell contains statistical value source points within target cell. source points within target cell, gets missing value. target grid must regular lon/lat Gaussian. Depending chosen operator minimum, maximum, range, sum, average, variance, standard deviation, skewness, kurtosis median source points computed.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remapstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remaps source points to target cells — cdo_remapavg","text":"","code":"cdo_remapavg(ifile, grid = NULL, ofile = NULL)  cdo_remapkurt(ifile, grid = NULL, ofile = NULL)  cdo_remapmax(ifile, grid = NULL, ofile = NULL)  cdo_remapmean(ifile, grid = NULL, ofile = NULL)  cdo_remapmedian(ifile, grid = NULL, ofile = NULL)  cdo_remapmin(ifile, grid = NULL, ofile = NULL)  cdo_remaprange(ifile, grid = NULL, ofile = NULL)  cdo_remapskew(ifile, grid = NULL, ofile = NULL)  cdo_remapstd(ifile, grid = NULL, ofile = NULL)  cdo_remapstd1(ifile, grid = NULL, ofile = NULL)  cdo_remapsum(ifile, grid = NULL, ofile = NULL)  cdo_remapvar(ifile, grid = NULL, ofile = NULL)  cdo_remapvar1(ifile, grid = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/remapstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remaps source points to target cells — cdo_remapavg","text":"ifile String path input file. grid STRING - Target grid description file name ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/remapstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remaps source points to target cells — cdo_remapavg","text":"","code":"remapmin     Remap minimum              Minimum value of the source points. remapmax     Remap maximum              Maximum value of the source points. remaprange   Remap range              Range (max-min value) of the source points. remapsum     Remap sum              Sum of the source points. remapmean    Remap mean              Mean of the source points. remapavg     Remap average              Average of the source points. remapstd     Remap standard deviation              Standard deviation of the source points. Normalize by n. remapstd1    Remap standard deviation (n-1)              Standard deviation of the source points. Normalize by (n-1). remapvar     Remap variance              Variance of the source points. Normalize by n. remapvar1    Remap variance (n-1)              Variance of the source points. Normalize by (n-1). remapskew    Remap skewness              Skewness of the source points. remapkurt    Remap kurtosis              Kurtosis of the source points. remapmedian  Remap median              Median of the source points."},{"path":"https://eliocamp.github.io/rcdo/reference/replace.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace variables — cdo_replace","title":"Replace variables — cdo_replace","text":"operator replaces variables infile1 variables infile2 write result outfile. input datasets need number timesteps. variable names may occur !","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/replace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace variables — cdo_replace","text":"","code":"cdo_replace(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/replace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace variables — cdo_replace","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/replacevalues.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace variable values — cdo_setrtoc","title":"Replace variable values — cdo_setrtoc","text":"module replaces old variable values new values, depending operator.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/replacevalues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace variable values — cdo_setrtoc","text":"","code":"cdo_setrtoc(   ifile,   oldval,   newval,   ... = NULL,   rmin = NULL,   rmax = NULL,   c = NULL,   c2 = NULL,   ofile = NULL )  cdo_setrtoc2(   ifile,   oldval,   newval,   ... = NULL,   rmin = NULL,   rmax = NULL,   c = NULL,   c2 = NULL,   ofile = NULL )  cdo_setvals(   ifile,   oldval,   newval,   ... = NULL,   rmin = NULL,   rmax = NULL,   c = NULL,   c2 = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/replacevalues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace variable values — cdo_setrtoc","text":"ifile String path input file. oldval, newval, ... FLOAT - Pairs old new values rmin FLOAT - Lower bound rmax FLOAT - Upper bound c FLOAT - New value - inside range c2 FLOAT - New value - outside range ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/replacevalues.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replace variable values — cdo_setrtoc","text":"","code":"setvals   Set list of old values to new values           Supply a list of n pairs of old and new values. setrtoc   Set range to constant                    / c      if i(t,x) GE rmin AND i(t,x) LE rmax           o(t,x) =                    \\\\ i(t,x) if i(t,x) LT rmin AND i(t,x) GT rmax setrtoc2  Set range to constant others to constant2                    / c      if i(t,x) GE rmin AND i(t,x) LE rmax           o(t,x) =                    \\\\ c2     if i(t,x) LT rmin AND i(t,x) GT rmax"},{"path":"https://eliocamp.github.io/rcdo/reference/rhopot.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates potential density — cdo_rhopot","title":"Calculates potential density — cdo_rhopot","text":"special operator post processing ocean sea ice model MPIOM. calculates sea water potential density (name=rhopoto; code=18). Required input fields sea water -situ temperature (name=; code=20) sea water salinity (name=sao; code=5). Pressure calculated level information can specified optional parameter.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/rhopot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates potential density — cdo_rhopot","text":"","code":"cdo_rhopot(ifile, pressure = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/rhopot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates potential density — cdo_rhopot","text":"ifile String path input file. pressure FLOAT - Pressure bar (constant value assigned levels) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/rotuvb.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotation — cdo_rotuvb","title":"Rotation — cdo_rotuvb","text":"special operator datsets wind components rotated grid, e.g. data regional model REMO. performs backward transformation velocity components U V rotated spherical system geographical system.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/rotuvb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotation — cdo_rotuvb","text":"","code":"cdo_rotuvb(ifile, u, v, ... = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/rotuvb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotation — cdo_rotuvb","text":"ifile String path input file. u, v, ... STRING - Pairs zonal meridional velocity components (use variable names code numbers) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/rotuvb.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rotation — cdo_rotuvb","text":"specific implementation data REMO model, may work data sources.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/runpctl.html","id":null,"dir":"Reference","previous_headings":"","what":"Running percentile values — cdo_runpctl","title":"Running percentile values — cdo_runpctl","text":"module computes running percentiles selected number timesteps infile. time outfile determined time middle contributing timesteps infile. can change CDO option –timestat_date <first|middle|last>.  o(t+(nts-1)/2,x) = pth percentile {(t,x), (t+1,x), ..., (t+nts-1,x)}","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/runpctl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Running percentile values — cdo_runpctl","text":"","code":"cdo_runpctl(ifile, p = NULL, nts = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/runpctl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Running percentile values — cdo_runpctl","text":"ifile String path input file. p FLOAT - Percentile number {0, ..., 100} nts INTEGER - Number timesteps ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/runstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Running statistics — cdo_runavg","title":"Running statistics — cdo_runavg","text":"module computes running statistical values selected number timesteps. Depending chosen operator minimum, maximum, range, sum, average, variance standard deviation selected number consecutive timesteps read infile written outfile. time outfile determined time middle contributing timesteps infile. can change CDO option –timestat_date <first|middle|last>.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/runstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Running statistics — cdo_runavg","text":"","code":"cdo_runavg(ifile, nts = NULL, ofile = NULL)  cdo_runmax(ifile, nts = NULL, ofile = NULL)  cdo_runmean(ifile, nts = NULL, ofile = NULL)  cdo_runmin(ifile, nts = NULL, ofile = NULL)  cdo_runrange(ifile, nts = NULL, ofile = NULL)  cdo_runstd(ifile, nts = NULL, ofile = NULL)  cdo_runstd1(ifile, nts = NULL, ofile = NULL)  cdo_runsum(ifile, nts = NULL, ofile = NULL)  cdo_runvar(ifile, nts = NULL, ofile = NULL)  cdo_runvar1(ifile, nts = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/runstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Running statistics — cdo_runavg","text":"ifile String path input file. nts INTEGER - Number timesteps ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/runstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Running statistics — cdo_runavg","text":"","code":"runmin    Running minimum           o(t+(nts-1)/2,x) = min\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x)\\} runmax    Running maximum           o(t+(nts-1)/2,x) = max\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x)\\} runrange  Running range           o(t+(nts-1)/2,x) = range\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x)\\} runsum    Running sum           o(t+(nts-1)/2,x) = sum\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x)\\} runmean   Running mean           o(t+(nts-1)/2,x) = mean\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x)\\} runavg    Running average           o(t+(nts-1)/2,x) = avg\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x)\\} runstd    Running standard deviation           Normalize by n.            o(t+(nts-1)/2,x) = std\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x)\\} runstd1   Running standard deviation (n-1)           Normalize by (n-1).            o(t+(nts-1)/2,x) = std1\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x)\\} runvar    Running variance           Normalize by n.            o(t+(nts-1)/2,x) = var\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x)\\} runvar1   Running variance (n-1)           Normalize by (n-1).            o(t+(nts-1)/2,x) = var1\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x)\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/samplegrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample grid — cdo_samplegrid","title":"Resample grid — cdo_samplegrid","text":"special operator resampling horizontal grid. interpolation takes place. Resample factor=2 means every second grid point removed. rectilinear curvilinear source grids supported operator.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/samplegrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample grid — cdo_samplegrid","text":"","code":"cdo_samplegrid(ifile, factor = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/samplegrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample grid — cdo_samplegrid","text":"ifile String path input file. factor INTEGER - Resample factor, typically 2, half resolution ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/seaspctl.html","id":null,"dir":"Reference","previous_headings":"","what":"Seasonal percentile values — cdo_seaspctl","title":"Seasonal percentile values — cdo_seaspctl","text":"operator computes percentiles timesteps infile1 season. algorithm uses histograms minimum maximum bounds given infile2 infile3, respectively. default number histogram bins 101. default can overridden defining environment variable CDO_PCTL_NBINS. files infile2 infile3 result corresponding seasmin seasmax operations, respectively. time outfile determined time middle contributing timesteps infile1. can change CDO option –timestat_date <first|middle|last>. careful first last output timestep, may incorrect values seasons incomplete timesteps. every adjacent sequence t_1, ...,t_n timesteps season :  o(t,x) = pth percentile {(t',x), t1 < t' <= tn}","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/seaspctl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seasonal percentile values — cdo_seaspctl","text":"","code":"cdo_seaspctl(ifile1, ifile2, ifile3, p = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/seaspctl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seasonal percentile values — cdo_seaspctl","text":"ifile1, ifile2, ifile3 Strings path input files. p FLOAT - Percentile number {0, ..., 100} ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/seasstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Seasonal statistics — cdo_seasavg","title":"Seasonal statistics — cdo_seasavg","text":"module computes statistical values timesteps season. Depending chosen operator minimum, maximum, range, sum, average, variance standard deviation timesteps season written outfile. time outfile determined time middle contributing timesteps infile. can change CDO option –timestat_date <first|middle|last>. careful first last output timestep, may incorrect values seasons incomplete timesteps.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/seasstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seasonal statistics — cdo_seasavg","text":"","code":"cdo_seasavg(ifile, ofile = NULL)  cdo_seasmax(ifile, ofile = NULL)  cdo_seasmean(ifile, ofile = NULL)  cdo_seasmin(ifile, ofile = NULL)  cdo_seasrange(ifile, ofile = NULL)  cdo_seasstd(ifile, ofile = NULL)  cdo_seasstd1(ifile, ofile = NULL)  cdo_seassum(ifile, ofile = NULL)  cdo_seasvar(ifile, ofile = NULL)  cdo_seasvar1(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/seasstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seasonal statistics — cdo_seasavg","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/seasstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Seasonal statistics — cdo_seasavg","text":"","code":"seasmin    Seasonal minimum            For every adjacent sequence t_1, ...,t_n of timesteps of the same season it is:             o(t,x) = min\\{i(t',x), t1 &lt; t' &lt;= tn\\} seasmax    Seasonal maximum            For every adjacent sequence t_1, ...,t_n of timesteps of the same season it is:             o(t,x) = max\\{i(t',x), t1 &lt; t' &lt;= tn\\} seasrange  Seasonal range            For every adjacent sequence t_1, ...,t_n of timesteps of the same season it is:             o(t,x) = range\\{i(t',x), t1 &lt; t' &lt;= tn\\} seassum    Seasonal sum            For every adjacent sequence t_1, ...,t_n of timesteps of the same season it is:             o(t,x) = sum\\{i(t',x), t1 &lt; t' &lt;= tn\\} seasmean   Seasonal mean            For every adjacent sequence t_1, ...,t_n of timesteps of the same season it is:             o(t,x) = mean\\{i(t',x), t1 &lt; t' &lt;= tn\\} seasavg    Seasonal average            For every adjacent sequence t_1, ...,t_n of timesteps of the same season it is:             o(t,x) = avg\\{i(t',x), t1 &lt; t' &lt;= tn\\} seasstd    Seasonal standard deviation            Normalize by n. For every adjacent sequence t_1, ...,t_n of timesteps of the same season it is:             o(t,x) = std\\{i(t',x), t1 &lt; t' &lt;= tn\\} seasstd1   Seasonal standard deviation (n-1)            Normalize by (n-1). For every adjacent sequence t_1, ...,t_n of timesteps of the same season it is:             o(t,x) = std1\\{i(t',x), t1 &lt; t' &lt;= tn\\} seasvar    Seasonal variance            Normalize by n. For every adjacent sequence t_1, ...,t_n of timesteps of the same season it is:             o(t,x) = var\\{i(t',x), t1 &lt; t' &lt;= tn\\} seasvar1   Seasonal variance (n-1)            Normalize by (n-1). For every adjacent sequence t_1, ...,t_n of timesteps of the same season it is:             o(t,x) = var1\\{i(t',x), t1 &lt; t' &lt;= tn\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/selbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Select a box — cdo_selindexbox","title":"Select a box — cdo_selindexbox","text":"Selects grid cells inside lon/lat index box.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/selbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select a box — cdo_selindexbox","text":"","code":"cdo_selindexbox(   ifile,   lon1 = NULL,   lon2 = NULL,   lat1 = NULL,   lat2 = NULL,   idx1 = NULL,   idx2 = NULL,   idy1 = NULL,   idy2 = NULL,   ofile = NULL )  cdo_sellonlatbox(   ifile,   lon1 = NULL,   lon2 = NULL,   lat1 = NULL,   lat2 = NULL,   idx1 = NULL,   idx2 = NULL,   idy1 = NULL,   idy2 = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/selbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select a box — cdo_selindexbox","text":"ifile String path input file. lon1 FLOAT - Western longitude degrees lon2 FLOAT - Eastern longitude degrees lat1 FLOAT - Southern northern latitude degrees lat2 FLOAT - Northern southern latitude degrees idx1 INTEGER - Index first longitude (1 - nlon) idx2 INTEGER - Index last longitude (1 - nlon) idy1 INTEGER - Index first latitude (1 - nlat) idy2 INTEGER - Index last latitude (1 - nlat) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/selbox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select a box — cdo_selindexbox","text":"","code":"sellonlatbox  Select a longitude/latitude box               Selects grid cells inside a lon/lat box. The user must specify the longitude and latitude of the edges of the box.               Only those grid cells are considered whose grid center lies within the lon/lat box.               For rotated lon/lat grids the parameters must be specified in rotated coordinates. selindexbox   Select an index box               Selects grid cells within an index box. The user must specify the indices of the edges of the box.               The index of the left edge can be greater then the one of the right edge. Use negative indexing to               start from the end. The input grid must be a regular lon/lat or a 2D curvilinear grid."},{"path":"https://eliocamp.github.io/rcdo/reference/select.html","id":null,"dir":"Reference","previous_headings":"","what":"Select fields — cdo_delete","title":"Select fields — cdo_delete","text":"module selects fields infiles writes outfile. infiles arbitrary number input files. input files need structure variables different timesteps. fields selected depends chosen parameters. Parameter comma-separated list \\\"key=value\\\" pairs. range integer values can specified first/last[/inc]. Wildcards supported string values.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select fields — cdo_delete","text":"","code":"cdo_delete(   ifiles,   name = NULL,   param = NULL,   code = NULL,   level = NULL,   levrange = NULL,   levidx = NULL,   zaxisname = NULL,   zaxisnum = NULL,   ltype = NULL,   gridname = NULL,   gridnum = NULL,   steptype = NULL,   date = NULL,   startdate = NULL,   enddate = NULL,   minute = NULL,   hour = NULL,   day = NULL,   month = NULL,   season = NULL,   year = NULL,   dom = NULL,   timestep = NULL,   timestep_of_year = NULL,   timestepmask = NULL,   ofile = NULL )  cdo_select(   ifiles,   name = NULL,   param = NULL,   code = NULL,   level = NULL,   levrange = NULL,   levidx = NULL,   zaxisname = NULL,   zaxisnum = NULL,   ltype = NULL,   gridname = NULL,   gridnum = NULL,   steptype = NULL,   date = NULL,   startdate = NULL,   enddate = NULL,   minute = NULL,   hour = NULL,   day = NULL,   month = NULL,   season = NULL,   year = NULL,   dom = NULL,   timestep = NULL,   timestep_of_year = NULL,   timestepmask = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select fields — cdo_delete","text":"ifiles Character vector path input files. name STRING - Comma-separated list variable names. param STRING - Comma-separated list parameter identifiers. code INTEGER - Comma-separated list first/last[/inc] range code numbers. level FLOAT - Comma-separated list vertical levels. levrange FLOAT - First last value level range. levidx INTEGER - Comma-separated list first/last[/inc] range index levels. zaxisname STRING - Comma-separated list zaxis names. zaxisnum INTEGER - Comma-separated list first/last[/inc] range zaxis numbers. ltype INTEGER - Comma-separated list first/last[/inc] range GRIB level types. gridname STRING - Comma-separated list grid names. gridnum INTEGER - Comma-separated list first/last[/inc] range grid numbers. steptype STRING - Comma-separated list timestep types (constant, avg, accum, min, max, range, diff, sum) date STRING - Comma-separated list dates (format YYYY-MM-DDThh:mm:ss). startdate STRING - Start date (format YYYY-MM-DDThh:mm:ss). enddate STRING - End date (format YYYY-MM-DDThh:mm:ss). minute INTEGER - Comma-separated list first/last[/inc] range minutes. hour INTEGER - Comma-separated list first/last[/inc] range hours. day INTEGER - Comma-separated list first/last[/inc] range days. month INTEGER - Comma-separated list first/last[/inc] range months. season STRING - Comma-separated list seasons (substring DJFMAMJJASOND ANN). year INTEGER - Comma-separated list first/last[/inc] range years. dom STRING - Comma-separated list day month (e.g. 29feb). timestep INTEGER - Comma-separated list first/last[/inc] range timesteps. Negative values select timesteps end (NetCDF ). timestep_of_year INTEGER - Comma-separated list first/last[/inc] range timesteps year. timestepmask STRING - Read timesteps mask file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/select.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select fields — cdo_delete","text":"","code":"select  Select fields         Selects all fields with parameters in a user given list. delete  Delete fields         Deletes all fields with parameters in a user given list."},{"path":"https://eliocamp.github.io/rcdo/reference/selgridcell.html","id":null,"dir":"Reference","previous_headings":"","what":"Select grid cells — cdo_delgridcell","title":"Select grid cells — cdo_delgridcell","text":"operator selects grid cells fields infile. user must specify index grid cell. resulting grid outfile unstructured.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/selgridcell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select grid cells — cdo_delgridcell","text":"","code":"cdo_delgridcell(ifile, indices = NULL, ofile = NULL)  cdo_selgridcell(ifile, indices = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/selgridcell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select grid cells — cdo_delgridcell","text":"ifile String path input file. indices INTEGER - Comma-separated list first/last[/inc] range indices ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/selgridcell.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select grid cells — cdo_delgridcell","text":"","code":"selgridcell  Select grid cells delgridcell  Delete grid cells"},{"path":"https://eliocamp.github.io/rcdo/reference/selmulti.html","id":null,"dir":"Reference","previous_headings":"","what":"Select multiple fields via GRIB1 parameters — cdo_changemulti","title":"Select multiple fields via GRIB1 parameters — cdo_changemulti","text":"module selects multiple fields infile writes outfile. selection-specification filename -place string selection specification. selection-specification following compact notation format:  <type>(parameters; leveltype(s); levels)  type      \"    \"    sel select del delete (optional) parameters\"    \"    GRIB1 parameter code number leveltype \"    \"    GRIB1 level type levels    \"    \"    value level  Examples:  (1; 103; 0) (33,34; 105; 10) (11,17; 105; 2) (71,73,74,75,61,62,65,117,67,122,121,11,131,66,84,111,112; 105; 0)  following descriptive notation can also used selection specification file:  SELECT/DELETE, PARAMETER=parameters, LEVTYPE=leveltye(s), LEVEL=levels  Examples:  SELECT, PARAMETER=1, LEVTYPE=103, LEVEL=0 SELECT, PARAMETER=33/34, LEVTYPE=105, LEVEL=10 SELECT, PARAMETER=11/17, LEVTYPE=105, LEVEL=2 SELECT, PARAMETER=71/73/74/75/61/62/65/117/67/122, LEVTYPE=105, LEVEL=0 DELETE, PARAMETER=128, LEVTYPE=109, LEVEL=*  following convert Pressure Pa hPa; Temp Kelvin Celsius: SELECT, PARAMETER=1, LEVTYPE= 103, LEVEL=0, SCALE=0.01 SELECT, PARAMETER=11, LEVTYPE=105, LEVEL=2, OFFSET=273.15 SCALE /OFFSET defined, data values scaled SCALE*(VALUE-OFFSET).","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/selmulti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select multiple fields via GRIB1 parameters — cdo_changemulti","text":"","code":"cdo_changemulti(ifile, ofile = NULL)  cdo_delmulti(ifile, ofile = NULL)  cdo_selmulti(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/selmulti.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select multiple fields via GRIB1 parameters — cdo_changemulti","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/selmulti.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select multiple fields via GRIB1 parameters — cdo_changemulti","text":"","code":"selmulti     Select multiple fields delmulti     Delete multiple fields changemulti  Change identication of multiple fields"},{"path":"https://eliocamp.github.io/rcdo/reference/selregion.html","id":null,"dir":"Reference","previous_headings":"","what":"Select horizontal regions — cdo_selcircle","title":"Select horizontal regions — cdo_selcircle","text":"Selects grid cells center point inside user defined regions circle. resulting grid unstructured.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/selregion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select horizontal regions — cdo_selcircle","text":"","code":"cdo_selcircle(   ifile,   regions = NULL,   lon = NULL,   lat = NULL,   radius = NULL,   ofile = NULL )  cdo_selregion(   ifile,   regions = NULL,   lon = NULL,   lat = NULL,   radius = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/selregion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select horizontal regions — cdo_selcircle","text":"ifile String path input file. regions STRING - Comma-separated list ASCII formatted files different regions lon FLOAT - Longitude center circle degrees, default lon=0.0 lat FLOAT - Latitude center circle degrees, default lat=0.0 radius STRING - Radius circle, default radius=1deg (units: deg, rad, km, m) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/selregion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select horizontal regions — cdo_selcircle","text":"","code":"selregion  Select cells inside regions            Selects all grid cells with the center point inside the regions.            Regions can be defined by the user via an ASCII file.            Each region consists of the geographic coordinates of a convex polygon.            Each line of a polygon description file contains the longitude and latitude of one point.            Each polygon description file can contain one or more polygons separated by a line with the character \\\\&amp;.             Predefined regions of countries can be specified via the country codes.            A country is specified with dcw:&lt;CountryCode&gt;. Country codes can be combined with the plus sign. selcircle  Select cells inside a circle            Selects all grid cells with the center point inside a circle. The circle is described by geographic coordinates            of the center and the radius of the circle."},{"path":"https://eliocamp.github.io/rcdo/reference/selsurface.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract surface — cdo_bottomvalue","title":"Extract surface — cdo_bottomvalue","text":"module computes surface 3D variables. result horizonal 2D field.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/selsurface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract surface — cdo_bottomvalue","text":"","code":"cdo_bottomvalue(ifile, isovalue = NULL, ofile = NULL)  cdo_isosurface(ifile, isovalue = NULL, ofile = NULL)  cdo_topvalue(ifile, isovalue = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/selsurface.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract surface — cdo_bottomvalue","text":"ifile String path input file. isovalue FLOAT - Isosurface value ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/selsurface.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract surface — cdo_bottomvalue","text":"","code":"bottomvalue  Extract bottom level              This operator selects the valid values at the bottom level.              The NetCDF CF compliant attribute positive is used to determine where top and bottom are.              If this attribute is missing, low values are bottom and high values are top. topvalue     Extract top level              This operator selects the valid values at the top level.              The NetCDF CF compliant attribute positive is used to determine where top and bottom are.              If this attribute is missing, low values are bottom and high values are top. isosurface   Extract isosurface              This operator computes an isosurface. The value of the isosurfce is specified by the parameter isovalue.              The isosurface is calculated by linear interpolation between two layers."},{"path":"https://eliocamp.github.io/rcdo/reference/seltime.html","id":null,"dir":"Reference","previous_headings":"","what":"Select timesteps — cdo_seldate","title":"Select timesteps — cdo_seldate","text":"module selects user specified timesteps infile writes outfile. timesteps selected depends chosen operator parameters. range integer values can specified first/last[/inc].","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/seltime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select timesteps — cdo_seldate","text":"","code":"cdo_seldate(   ifile,   timesteps = NULL,   times = NULL,   hours = NULL,   days = NULL,   months = NULL,   years = NULL,   seasons = NULL,   startdate = NULL,   enddate = NULL,   nts1 = NULL,   nts2 = NULL,   ofile = NULL )  cdo_selday(   ifile,   timesteps = NULL,   times = NULL,   hours = NULL,   days = NULL,   months = NULL,   years = NULL,   seasons = NULL,   startdate = NULL,   enddate = NULL,   nts1 = NULL,   nts2 = NULL,   ofile = NULL )  cdo_selhour(   ifile,   timesteps = NULL,   times = NULL,   hours = NULL,   days = NULL,   months = NULL,   years = NULL,   seasons = NULL,   startdate = NULL,   enddate = NULL,   nts1 = NULL,   nts2 = NULL,   ofile = NULL )  cdo_selmonth(   ifile,   timesteps = NULL,   times = NULL,   hours = NULL,   days = NULL,   months = NULL,   years = NULL,   seasons = NULL,   startdate = NULL,   enddate = NULL,   nts1 = NULL,   nts2 = NULL,   ofile = NULL )  cdo_selseason(   ifile,   timesteps = NULL,   times = NULL,   hours = NULL,   days = NULL,   months = NULL,   years = NULL,   seasons = NULL,   startdate = NULL,   enddate = NULL,   nts1 = NULL,   nts2 = NULL,   ofile = NULL )  cdo_selsmon(   ifile,   timesteps = NULL,   times = NULL,   hours = NULL,   days = NULL,   months = NULL,   years = NULL,   seasons = NULL,   startdate = NULL,   enddate = NULL,   nts1 = NULL,   nts2 = NULL,   ofile = NULL )  cdo_seltime(   ifile,   timesteps = NULL,   times = NULL,   hours = NULL,   days = NULL,   months = NULL,   years = NULL,   seasons = NULL,   startdate = NULL,   enddate = NULL,   nts1 = NULL,   nts2 = NULL,   ofile = NULL )  cdo_seltimestep(   ifile,   timesteps = NULL,   times = NULL,   hours = NULL,   days = NULL,   months = NULL,   years = NULL,   seasons = NULL,   startdate = NULL,   enddate = NULL,   nts1 = NULL,   nts2 = NULL,   ofile = NULL )  cdo_selyear(   ifile,   timesteps = NULL,   times = NULL,   hours = NULL,   days = NULL,   months = NULL,   years = NULL,   seasons = NULL,   startdate = NULL,   enddate = NULL,   nts1 = NULL,   nts2 = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/seltime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select timesteps — cdo_seldate","text":"ifile String path input file. timesteps INTEGER - Comma-separated list first/last[/inc] range timesteps. Negative values select timesteps end (NetCDF ). times STRING - Comma-separated list times (format hh:mm:ss). hours INTEGER - Comma-separated list first/last[/inc] range hours. days INTEGER - Comma-separated list first/last[/inc] range days. months INTEGER - Comma-separated list first/last[/inc] range months. years INTEGER - Comma-separated list first/last[/inc] range years. seasons STRING - Comma-separated list seasons (substring DJFMAMJJASOND ANN). startdate STRING - Start date (format YYYY-MM-DDThh:mm:ss). enddate STRING - End date (format YYYY-MM-DDThh:mm:ss) [default: startdate]. nts1 INTEGER - Number timesteps selected month [default: 0]. nts2 INTEGER - Number timesteps selected month [default: nts1]. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/seltime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select timesteps — cdo_seldate","text":"","code":"seltimestep  Select timesteps              Selects all timesteps with a timestep in a user given list or range. seltime      Select times              Selects all timesteps with a time in a user given list or range. selhour      Select hours              Selects all timesteps with a hour in a user given list or range. selday       Select days              Selects all timesteps with a day in a user given list or range. selmonth     Select months              Selects all timesteps with a month in a user given list or range. selyear      Select years              Selects all timesteps with a year in a user given list or range. selseason    Select seasons              Selects all timesteps with a month of a season in a user given list. seldate      Select dates              Selects all timesteps with a date in a user given range. selsmon      Select single month              Selects a month and optional an arbitrary number of timesteps before and after this month."},{"path":"https://eliocamp.github.io/rcdo/reference/seltimeidx.html","id":null,"dir":"Reference","previous_headings":"","what":"Select timestep by index — cdo_seltimeidx","title":"Select timestep by index — cdo_seltimeidx","text":"Selects field elements infile2 according timestep index infile1. index timestep infile1 result corresponding timminidx timmaxidx operations, respectively.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/seltimeidx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select timestep by index — cdo_seltimeidx","text":"","code":"cdo_seltimeidx(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/seltimeidx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select timestep by index — cdo_seltimeidx","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/selvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Select fields — cdo_delcode","title":"Select fields — cdo_delcode","text":"module selects fields infile writes outfile. fields selected depends chosen operator parameters. range integer values can specified first/last[/inc].","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/selvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select fields — cdo_delcode","text":"","code":"cdo_delcode(   ifile,   parameter = NULL,   codes = NULL,   names = NULL,   stdnames = NULL,   levels = NULL,   levidx = NULL,   ltypes = NULL,   grids = NULL,   zaxes = NULL,   zaxisnames = NULL,   tabnums = NULL,   ofile = NULL )  cdo_delname(   ifile,   parameter = NULL,   codes = NULL,   names = NULL,   stdnames = NULL,   levels = NULL,   levidx = NULL,   ltypes = NULL,   grids = NULL,   zaxes = NULL,   zaxisnames = NULL,   tabnums = NULL,   ofile = NULL )  cdo_delparam(   ifile,   parameter = NULL,   codes = NULL,   names = NULL,   stdnames = NULL,   levels = NULL,   levidx = NULL,   ltypes = NULL,   grids = NULL,   zaxes = NULL,   zaxisnames = NULL,   tabnums = NULL,   ofile = NULL )  cdo_selcode(   ifile,   parameter = NULL,   codes = NULL,   names = NULL,   stdnames = NULL,   levels = NULL,   levidx = NULL,   ltypes = NULL,   grids = NULL,   zaxes = NULL,   zaxisnames = NULL,   tabnums = NULL,   ofile = NULL )  cdo_selgrid(   ifile,   parameter = NULL,   codes = NULL,   names = NULL,   stdnames = NULL,   levels = NULL,   levidx = NULL,   ltypes = NULL,   grids = NULL,   zaxes = NULL,   zaxisnames = NULL,   tabnums = NULL,   ofile = NULL )  cdo_sellevel(   ifile,   parameter = NULL,   codes = NULL,   names = NULL,   stdnames = NULL,   levels = NULL,   levidx = NULL,   ltypes = NULL,   grids = NULL,   zaxes = NULL,   zaxisnames = NULL,   tabnums = NULL,   ofile = NULL )  cdo_sellevidx(   ifile,   parameter = NULL,   codes = NULL,   names = NULL,   stdnames = NULL,   levels = NULL,   levidx = NULL,   ltypes = NULL,   grids = NULL,   zaxes = NULL,   zaxisnames = NULL,   tabnums = NULL,   ofile = NULL )  cdo_selltype(   ifile,   parameter = NULL,   codes = NULL,   names = NULL,   stdnames = NULL,   levels = NULL,   levidx = NULL,   ltypes = NULL,   grids = NULL,   zaxes = NULL,   zaxisnames = NULL,   tabnums = NULL,   ofile = NULL )  cdo_selname(   ifile,   parameter = NULL,   codes = NULL,   names = NULL,   stdnames = NULL,   levels = NULL,   levidx = NULL,   ltypes = NULL,   grids = NULL,   zaxes = NULL,   zaxisnames = NULL,   tabnums = NULL,   ofile = NULL )  cdo_selparam(   ifile,   parameter = NULL,   codes = NULL,   names = NULL,   stdnames = NULL,   levels = NULL,   levidx = NULL,   ltypes = NULL,   grids = NULL,   zaxes = NULL,   zaxisnames = NULL,   tabnums = NULL,   ofile = NULL )  cdo_selstdname(   ifile,   parameter = NULL,   codes = NULL,   names = NULL,   stdnames = NULL,   levels = NULL,   levidx = NULL,   ltypes = NULL,   grids = NULL,   zaxes = NULL,   zaxisnames = NULL,   tabnums = NULL,   ofile = NULL )  cdo_seltabnum(   ifile,   parameter = NULL,   codes = NULL,   names = NULL,   stdnames = NULL,   levels = NULL,   levidx = NULL,   ltypes = NULL,   grids = NULL,   zaxes = NULL,   zaxisnames = NULL,   tabnums = NULL,   ofile = NULL )  cdo_selzaxis(   ifile,   parameter = NULL,   codes = NULL,   names = NULL,   stdnames = NULL,   levels = NULL,   levidx = NULL,   ltypes = NULL,   grids = NULL,   zaxes = NULL,   zaxisnames = NULL,   tabnums = NULL,   ofile = NULL )  cdo_selzaxisname(   ifile,   parameter = NULL,   codes = NULL,   names = NULL,   stdnames = NULL,   levels = NULL,   levidx = NULL,   ltypes = NULL,   grids = NULL,   zaxes = NULL,   zaxisnames = NULL,   tabnums = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/selvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select fields — cdo_delcode","text":"ifile String path input file. parameter STRING - Comma-separated list parameter identifiers. codes INTEGER - Comma-separated list first/last[/inc] range code numbers. names STRING - Comma-separated list variable names. stdnames STRING - Comma-separated list standard names. levels FLOAT - Comma-separated list vertical levels. levidx INTEGER - Comma-separated list first/last[/inc] range index levels. ltypes INTEGER - Comma-separated list first/last[/inc] range GRIB level types. grids STRING - Comma-separated list grid names numbers. zaxes STRING - Comma-separated list z-axis types numbers. zaxisnames STRING - Comma-separated list z-axis names. tabnums INTEGER - Comma-separated list range parameter table numbers. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/selvar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select fields — cdo_delcode","text":"","code":"selparam      Select parameters by identifier               Selects all fields with parameter identifiers in a user given list. delparam      Delete parameters by identifier               Deletes all fields with parameter identifiers in a user given list. selcode       Select parameters by code number               Selects all fields with code numbers in a user given list or range. delcode       Delete parameters by code number               Deletes all fields with code numbers in a user given list or range. selname       Select parameters by name               Selects all fields with parameter names in a user given list. delname       Delete parameters by name               Deletes all fields with parameter names in a user given list. selstdname    Select parameters by standard name               Selects all fields with standard names in a user given list. sellevel      Select levels               Selects all fields with levels in a user given list. sellevidx     Select levels by index               Selects all fields with index of levels in a user given list or range. selgrid       Select grids               Selects all fields with grids in a user given list. selzaxis      Select z-axes               Selects all fields with z-axes in a user given list. selzaxisname  Select z-axes by name               Selects all fields with z-axis names in a user given list. selltype      Select GRIB level types               Selects all fields with GRIB level type in a user given list or range. seltabnum     Select parameter table numbers               Selects all fields with parameter table numbers in a user given list or range."},{"path":"https://eliocamp.github.io/rcdo/reference/selyearidx.html","id":null,"dir":"Reference","previous_headings":"","what":"Select year by index — cdo_selyearidx","title":"Select year by index — cdo_selyearidx","text":"Selects field elements infile2 according year index infile1. index year infile1 result corresponding yearminidx yearmaxidx operations, respectively.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/selyearidx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select year by index — cdo_selyearidx","text":"","code":"cdo_selyearidx(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/selyearidx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select year by index — cdo_selyearidx","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set field info — cdo_setcode","title":"Set field info — cdo_setcode","text":"module sets field information. Depending chosen operator parameter table, code number, parameter identifier, variable name level set.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set field info — cdo_setcode","text":"","code":"cdo_setcode(   ifile,   table = NULL,   code = NULL,   param = NULL,   name = NULL,   level = NULL,   ltype = NULL,   maxsteps = NULL,   ofile = NULL )  cdo_setcodetab(   ifile,   table = NULL,   code = NULL,   param = NULL,   name = NULL,   level = NULL,   ltype = NULL,   maxsteps = NULL,   ofile = NULL )  cdo_setlevel(   ifile,   table = NULL,   code = NULL,   param = NULL,   name = NULL,   level = NULL,   ltype = NULL,   maxsteps = NULL,   ofile = NULL )  cdo_setltype(   ifile,   table = NULL,   code = NULL,   param = NULL,   name = NULL,   level = NULL,   ltype = NULL,   maxsteps = NULL,   ofile = NULL )  cdo_setmaxsteps(   ifile,   table = NULL,   code = NULL,   param = NULL,   name = NULL,   level = NULL,   ltype = NULL,   maxsteps = NULL,   ofile = NULL )  cdo_setname(   ifile,   table = NULL,   code = NULL,   param = NULL,   name = NULL,   level = NULL,   ltype = NULL,   maxsteps = NULL,   ofile = NULL )  cdo_setparam(   ifile,   table = NULL,   code = NULL,   param = NULL,   name = NULL,   level = NULL,   ltype = NULL,   maxsteps = NULL,   ofile = NULL )  cdo_setunit(   ifile,   table = NULL,   code = NULL,   param = NULL,   name = NULL,   level = NULL,   ltype = NULL,   maxsteps = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set field info — cdo_setcode","text":"ifile String path input file. table STRING - Parameter table file name code INTEGER - Code number param STRING - Parameter identifier (GRIB1: code[.tabnum]; GRIB2: num[.cat[.dis]]) name STRING - Variable name level FLOAT - New level ltype INTEGER - GRIB level type maxsteps INTEGER - Maximum number timesteps ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set field info — cdo_setcode","text":"","code":"setcodetab   Set parameter code table              Sets the parameter code table for all variables. setcode      Set code number              Sets the code number for all variables to the same given value. setparam     Set parameter identifier              Sets the parameter identifier of the first variable. setname      Set variable name              Sets the name of the first variable. setunit      Set variable unit              Sets the unit of the first variable. setlevel     Set level              Sets the first level of all variables. setltype     Set GRIB level type              Sets the GRIB level type of all variables. setmaxsteps  Set max timesteps              Sets maximum number of timesteps"},{"path":"https://eliocamp.github.io/rcdo/reference/setattribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Set attributes — cdo_delattribute","title":"Set attributes — cdo_delattribute","text":"operator sets deletes attributes dataset writes result outfile. new attributes available outfile file format supports attributes.  attribute following structure:  [var_nm@]att_nm[:{s|d|}]=[att_val|{[var_nm@]att_nm}]  var_nm  Variable name (optional). Example: pressure att_nm  Attribute name. Example: units att_val Comma-separated list attribute values. Example: pascal  value var_nm name variable containing attribute (named att_nm) want set. Use wildcards set attribute att_nm one variable. value var_nm '*' set attribute att_nm data variables. var_nm missing att_nm refers global attribute.  value att_nm name attribute want set. attribute string (att_nm:s), double (att_nm:d) integer (att_nm:) type can defined. default native type set.  value att_val contents attribute att_nm. att_val may single value one-dimensional array elements. type number elements attribute detected automatically contents values. already existing attribute att_nm overwritten removed att_val omitted. Alternatively, values existing attribute can copied. attribute must enclosed curly brackets.  special meaning attribute name FILE. 1st attribute attributes read file specified value att_val.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/setattribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set attributes — cdo_delattribute","text":"","code":"cdo_delattribute(ifile, attributes = NULL, ofile = NULL)  cdo_setattribute(ifile, attributes = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/setattribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set attributes — cdo_delattribute","text":"ifile String path input file. attributes STRING - Comma-separated list attributes. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/setattribute.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set attributes — cdo_delattribute","text":"","code":"setattribute  Set attributes delattribute  Delete attributes"},{"path":"https://eliocamp.github.io/rcdo/reference/setattribute.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Set attributes — cdo_delattribute","text":"Attributes evaluated CDO opening infile. Therefor result operator available operators operator used chaining operators.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/setbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a box to constant — cdo_setcindexbox","title":"Set a box to constant — cdo_setcindexbox","text":"Sets box rectangularly understood field constant value. elements outside box untouched, elements inside set given constant. input fields need horizontal grid.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/setbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a box to constant — cdo_setcindexbox","text":"","code":"cdo_setcindexbox(   ifile,   c = NULL,   lon1 = NULL,   lon2 = NULL,   lat1 = NULL,   lat2 = NULL,   idx1 = NULL,   idx2 = NULL,   idy1 = NULL,   idy2 = NULL,   ofile = NULL )  cdo_setclonlatbox(   ifile,   c = NULL,   lon1 = NULL,   lon2 = NULL,   lat1 = NULL,   lat2 = NULL,   idx1 = NULL,   idx2 = NULL,   idy1 = NULL,   idy2 = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/setbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a box to constant — cdo_setcindexbox","text":"ifile String path input file. c FLOAT - Constant lon1 FLOAT - Western longitude lon2 FLOAT - Eastern longitude lat1 FLOAT - Southern northern latitude lat2 FLOAT - Northern southern latitude idx1 INTEGER - Index first longitude idx2 INTEGER - Index last longitude idy1 INTEGER - Index first latitude idy2 INTEGER - Index last latitude ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/setbox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set a box to constant — cdo_setcindexbox","text":"","code":"setclonlatbox  Set a longitude/latitude box to constant                Sets the values of a longitude/latitude box to a constant value. The                user has to give the longitudes and latitudes of the edges of the box. setcindexbox   Set an index box to constant                Sets the values of an index box to a constant value. The user has to                give the indices of the edges of the box. The index of the left edge                can be greater than the one of the right edge."},{"path":"https://eliocamp.github.io/rcdo/reference/setgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Set grid information — cdo_setgrid","title":"Set grid information — cdo_setgrid","text":"module modifies metadata horizontal grid. Depending chosen operator new grid description set, coordinates converted grid cell area added.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/setgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set grid information — cdo_setgrid","text":"","code":"cdo_setgrid(   ifile,   grid = NULL,   gridtype = NULL,   gridarea = NULL,   gridmask = NULL,   projparams = NULL,   ofile = NULL )  cdo_setgridarea(   ifile,   grid = NULL,   gridtype = NULL,   gridarea = NULL,   gridmask = NULL,   projparams = NULL,   ofile = NULL )  cdo_setgridmask(   ifile,   grid = NULL,   gridtype = NULL,   gridarea = NULL,   gridmask = NULL,   projparams = NULL,   ofile = NULL )  cdo_setgridtype(   ifile,   grid = NULL,   gridtype = NULL,   gridarea = NULL,   gridmask = NULL,   projparams = NULL,   ofile = NULL )  cdo_setprojparams(   ifile,   grid = NULL,   gridtype = NULL,   gridarea = NULL,   gridmask = NULL,   projparams = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/setgrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set grid information — cdo_setgrid","text":"ifile String path input file. grid STRING - Grid description file name gridtype STRING - Grid type (curvilinear, unstructured, regular, lonlat, projection dereference) gridarea STRING - Data file, first field used grid cell area gridmask STRING - Data file, first field used grid mask projparams STRING - Proj library parameter (e.g.:+init=EPSG:3413) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/setgrid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set grid information — cdo_setgrid","text":"","code":"setgrid        Set grid                Sets a new grid description. The input fields need to have the same grid size as the size                of the target grid description. setgridtype    Set grid type                Sets the grid type of all input fields. The following grid types are available:                curvilinear &quot;    &quot;    Converts a regular grid to a curvilinear grid                unstructured&quot;    &quot;    Converts a regular or curvilinear grid to an unstructured grid                dereference &quot;    &quot;    Dereference a reference to a grid                regular     &quot;    &quot;    Linear interpolation of a reduced Gaussian grid to a regular Gaussian grid                regularnn   &quot;    &quot;    Nearest neighbor interpolation of a reduced Gaussian grid to a regular Gaussian grid                lonlat      &quot;    &quot;    Converts a regular lonlat grid stored as a curvilinear grid back to a lonlat grid                projection  &quot;    &quot;    Removes the geographical coordinates if projection parameter available setgridarea    Set grid cell area                Sets the grid cell area. The parameter gridarea is the path to a data file,                the first field is used as grid cell area. The input fields need to have the same                grid size as the grid cell area. The grid cell area is used to compute                the weights of each grid cell if needed by an operator, e.g. for fldmean. setgridmask    Set grid mask                Sets the grid mask. The parameter gridmask is the path to a data file,                the first field is used as the grid mask. The input fields need to have the same                grid size as the grid mask. The grid mask is used as the target grid mask for                remapping, e.g. for remapbil. setprojparams  Set proj params                Sets the proj_params attribute of a projection. This attribute is used to compute                geographic coordinates of a projecton with the proj library."},{"path":"https://eliocamp.github.io/rcdo/reference/setgridcell.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the value of a grid cell — cdo_setgridcell","title":"Set the value of a grid cell — cdo_setgridcell","text":"operator sets value selected grid cells. grid cells can selected comma-separated list grid cell indices mask. mask read data file, may contain one field. grid cells selected, values set.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/setgridcell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the value of a grid cell — cdo_setgridcell","text":"","code":"cdo_setgridcell(ifile, value = NULL, cell = NULL, mask = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/setgridcell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the value of a grid cell — cdo_setgridcell","text":"ifile String path input file. value FLOAT - Value grid cell cell INTEGER - Comma-separated list grid cell indices mask STRING - Name data file contains mask ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/sethalo.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the bounds of a field — cdo_sethalo","title":"Set the bounds of a field — cdo_sethalo","text":"operator sets boundary east, west, south north rectangular understood fields. Positive values parameters increase boundary selected direction. Negative values decrease field selected boundary. new rows columns filled missing value. optional parameter value different fill value can used. Global cyclic fields filled cyclically east west borders, fill value set user.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/sethalo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the bounds of a field — cdo_sethalo","text":"","code":"cdo_sethalo(   ifile,   east = NULL,   west = NULL,   south = NULL,   north = NULL,   value = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/sethalo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the bounds of a field — cdo_sethalo","text":"ifile String path input file. east INTEGER - East halo west INTEGER - West halo south INTEGER - South halo north INTEGER - North halo value FLOAT - Fill value (default missing value) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/setmiss.html","id":null,"dir":"Reference","previous_headings":"","what":"Set missing value — cdo_setctomiss","title":"Set missing value — cdo_setctomiss","text":"module sets part field missing value missing values constant value. part field set depends chosen operator.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/setmiss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set missing value — cdo_setctomiss","text":"","code":"cdo_setctomiss(   ifile,   neighbors = NULL,   newmiss = NULL,   c = NULL,   rmin = NULL,   rmax = NULL,   ofile = NULL )  cdo_setmisstoc(   ifile,   neighbors = NULL,   newmiss = NULL,   c = NULL,   rmin = NULL,   rmax = NULL,   ofile = NULL )  cdo_setmisstodis(   ifile,   neighbors = NULL,   newmiss = NULL,   c = NULL,   rmin = NULL,   rmax = NULL,   ofile = NULL )  cdo_setmisstonn(   ifile,   neighbors = NULL,   newmiss = NULL,   c = NULL,   rmin = NULL,   rmax = NULL,   ofile = NULL )  cdo_setmissval(   ifile,   neighbors = NULL,   newmiss = NULL,   c = NULL,   rmin = NULL,   rmax = NULL,   ofile = NULL )  cdo_setrtomiss(   ifile,   neighbors = NULL,   newmiss = NULL,   c = NULL,   rmin = NULL,   rmax = NULL,   ofile = NULL )  cdo_setvrange(   ifile,   neighbors = NULL,   newmiss = NULL,   c = NULL,   rmin = NULL,   rmax = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/setmiss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set missing value — cdo_setctomiss","text":"ifile String path input file. neighbors INTEGER - Number nearest neighbors newmiss FLOAT - New missing value c FLOAT - Constant rmin FLOAT - Lower bound rmax FLOAT - Upper bound ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/setmiss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set missing value — cdo_setctomiss","text":"","code":"setmissval    Set a new missing value                        / newmiss   if i(t,x) EQ miss               o(t,x) =                        \\\\ i(t,x)    if i(t,x) NE miss setctomiss    Set constant to missing value                        / miss   if i(t,x) EQ c               o(t,x) =                        \\\\ i(t,x) if i(t,x) NE c setmisstoc    Set missing value to constant                        / c      if i(t,x) EQ miss               o(t,x) =                        \\\\ i(t,x) if i(t,x) NE miss setrtomiss    Set range to missing value                        / miss   if i(t,x) GE rmin AND i(t,x) LE rmax               o(t,x) =                        \\\\ i(t,x) if i(t,x) LT rmin OR  i(t,x) GT rmax setvrange     Set valid range                        / miss   if i(t,x) LT rmin OR  i(t,x) GT rmax               o(t,x) =                        \\\\ i(t,x) if i(t,x) GE rmin AND i(t,x) LE rmax setmisstonn   Set missing value to nearest neighbor               Set all missing values to the nearest non missing value.                        / i(t,y) if i(t,x) EQ miss AND i(t,y) NE miss               o(t,x) =                        \\\\ i(t,x) if i(t,x) NE miss setmisstodis  Set missing value to distance-weighted average               Set all missing values to the distance-weighted average of the nearest non missing values.               The default number of nearest neighbors is 4."},{"path":"https://eliocamp.github.io/rcdo/reference/setpartab.html","id":null,"dir":"Reference","previous_headings":"","what":"Set parameter table — cdo_setpartabn","title":"Set parameter table — cdo_setpartabn","text":"module transforms data metadata infile via parameter table writes result outfile. parameter table ASCII formatted file set parameter entries variable. new set start \\\"\\&parameter\\\" end \\\"/\\\".  following parameter table entries supported:  Entry           & Type        & Description name            & WORD        & Name variable out_name        & WORD        & New name variable param           & WORD        & Parameter identifier (GRIB1: code[.tabnum];  GRIB2: num[.cat[.dis]]) out_param       & WORD        & New parameter identifier type            & WORD        & Data type (real double) standard_name   & WORD        & defined CF standard name table long_name       & STRING      & Describing variable units           & STRING      & Specifying units variable comment         & STRING      & Information concerning variable cell_methods    & STRING      & Information concerning calculation means climatologies cell_measures   & STRING      & Indicates names variables containing cell areas volumes missing_value   & FLOAT       & Specifying missing data identified valid_min       & FLOAT       & Minimum valid value valid_max       & FLOAT       & Maximum valid value ok_min_mean_abs & FLOAT       & Minimum absolute mean ok_max_mean_abs & FLOAT       & Maximum absolute mean factor          & FLOAT       & Scale factor delete          & INTEGER     & Set 1 delete variable convert         & INTEGER     & Set 1 convert unit necessary  Unsupported parameter table entries stored variable attributes. search key variable depends operator. Use setpartabn search variables name. typically used NetCDF datasets. operator setpartabp searches variables parameter ID.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/setpartab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set parameter table — cdo_setpartabn","text":"","code":"cdo_setpartabn(ifile, table = NULL, convert = NULL, ofile = NULL)  cdo_setpartabp(ifile, table = NULL, convert = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/setpartab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set parameter table — cdo_setpartabn","text":"ifile String path input file. table STRING - Parameter table file name convert STRING - Converts units necessary ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/setpartab.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set parameter table — cdo_setpartabn","text":"","code":"setpartabp  Set parameter table             Search variables by the parameter identifier. setpartabn  Set parameter table             Search variables by name."},{"path":"https://eliocamp.github.io/rcdo/reference/settime.html","id":null,"dir":"Reference","previous_headings":"","what":"Set time — cdo_setcalendar","title":"Set time — cdo_setcalendar","text":"module sets time axis part time axis. part time axis overwritten/created depends chosen operator. number time steps change.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/settime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set time — cdo_setcalendar","text":"","code":"cdo_setcalendar(   ifile,   day = NULL,   month = NULL,   year = NULL,   units = NULL,   date = NULL,   time = NULL,   inc = NULL,   frequency = NULL,   calendar = NULL,   shiftValue = NULL,   ofile = NULL )  cdo_setdate(   ifile,   day = NULL,   month = NULL,   year = NULL,   units = NULL,   date = NULL,   time = NULL,   inc = NULL,   frequency = NULL,   calendar = NULL,   shiftValue = NULL,   ofile = NULL )  cdo_setday(   ifile,   day = NULL,   month = NULL,   year = NULL,   units = NULL,   date = NULL,   time = NULL,   inc = NULL,   frequency = NULL,   calendar = NULL,   shiftValue = NULL,   ofile = NULL )  cdo_setmon(   ifile,   day = NULL,   month = NULL,   year = NULL,   units = NULL,   date = NULL,   time = NULL,   inc = NULL,   frequency = NULL,   calendar = NULL,   shiftValue = NULL,   ofile = NULL )  cdo_setreftime(   ifile,   day = NULL,   month = NULL,   year = NULL,   units = NULL,   date = NULL,   time = NULL,   inc = NULL,   frequency = NULL,   calendar = NULL,   shiftValue = NULL,   ofile = NULL )  cdo_settaxis(   ifile,   day = NULL,   month = NULL,   year = NULL,   units = NULL,   date = NULL,   time = NULL,   inc = NULL,   frequency = NULL,   calendar = NULL,   shiftValue = NULL,   ofile = NULL )  cdo_settbounds(   ifile,   day = NULL,   month = NULL,   year = NULL,   units = NULL,   date = NULL,   time = NULL,   inc = NULL,   frequency = NULL,   calendar = NULL,   shiftValue = NULL,   ofile = NULL )  cdo_settime(   ifile,   day = NULL,   month = NULL,   year = NULL,   units = NULL,   date = NULL,   time = NULL,   inc = NULL,   frequency = NULL,   calendar = NULL,   shiftValue = NULL,   ofile = NULL )  cdo_settunits(   ifile,   day = NULL,   month = NULL,   year = NULL,   units = NULL,   date = NULL,   time = NULL,   inc = NULL,   frequency = NULL,   calendar = NULL,   shiftValue = NULL,   ofile = NULL )  cdo_setyear(   ifile,   day = NULL,   month = NULL,   year = NULL,   units = NULL,   date = NULL,   time = NULL,   inc = NULL,   frequency = NULL,   calendar = NULL,   shiftValue = NULL,   ofile = NULL )  cdo_shifttime(   ifile,   day = NULL,   month = NULL,   year = NULL,   units = NULL,   date = NULL,   time = NULL,   inc = NULL,   frequency = NULL,   calendar = NULL,   shiftValue = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/settime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set time — cdo_setcalendar","text":"ifile String path input file. day INTEGER - Value new day month INTEGER - Value new month year INTEGER - Value new year units STRING - Base units time axis (seconds, minutes, hours, days, months, years) date STRING - Date (format: YYYY-MM-DD) time STRING - Time (format: hh:mm:ss) inc STRING - Optional increment (seconds, minutes, hours, days, months, years) [default: 1hour] frequency STRING - Frequency time series (hour, day, month, year) calendar STRING - Calendar (standard, proleptic_gregorian, 360_day, 365_day, 366_day) shiftValue STRING - Shift value (e.g. -3hour) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/settime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set time — cdo_setcalendar","text":"","code":"setdate      Set date              Sets the date in every timestep to the same given value. settime      Set time of the day              Sets the time in every timestep to the same given value. setday       Set day              Sets the day in every timestep to the same given value. setmon       Set month              Sets the month in every timestep to the same given value. setyear      Set year              Sets the year in every timestep to the same given value. settunits    Set time units              Sets the base units of a relative time axis. settaxis     Set time axis              Sets the time axis. settbounds   Set time bounds              Sets the time bounds. setreftime   Set reference time              Sets the reference time of a relative time axis. setcalendar  Set calendar              Sets the calendar attribute of a relative time axis. shifttime    Shift timesteps              Shifts all timesteps by the parameter shiftValue."},{"path":"https://eliocamp.github.io/rcdo/reference/setzaxis.html","id":null,"dir":"Reference","previous_headings":"","what":"Set zaxis information — cdo_genlevelbounds","title":"Set zaxis information — cdo_genlevelbounds","text":"module modifies metadata vertical grid.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/setzaxis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set zaxis information — cdo_genlevelbounds","text":"","code":"cdo_genlevelbounds(ifile, zaxis = NULL, zbot = NULL, ztop = NULL, ofile = NULL)  cdo_setzaxis(ifile, zaxis = NULL, zbot = NULL, ztop = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/setzaxis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set zaxis information — cdo_genlevelbounds","text":"ifile String path input file. zaxis STRING - Z-axis description file name target z-axis zbot FLOAT - Specifying bottom vertical column. Must units z-axis. ztop FLOAT - Specifying top vertical column. Must units z-axis. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/setzaxis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set zaxis information — cdo_genlevelbounds","text":"","code":"setzaxis        Set z-axis                 This operator sets the z-axis description of all variables with the same number of level as the new z-axis. genlevelbounds  Generate level bounds                 Generates the layer bounds of the z-axis."},{"path":"https://eliocamp.github.io/rcdo/reference/shiftxy.html","id":null,"dir":"Reference","previous_headings":"","what":"Shift field — cdo_shiftx","title":"Shift field — cdo_shiftx","text":"module contains operators shift fields x y direction. fields need horizontal rectilinear curvilinear grid.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/shiftxy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shift field — cdo_shiftx","text":"","code":"cdo_shiftx(ifile, nshift = NULL, cyclic = NULL, coord = NULL, ofile = NULL)  cdo_shifty(ifile, nshift = NULL, cyclic = NULL, coord = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/shiftxy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shift field — cdo_shiftx","text":"ifile String path input file. nshift INTEGER - Number grid cells shift (default: 1) cyclic STRING - set, cells filled cyclic (default: missing value) coord STRING - set, coordinates also shifted ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/shiftxy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shift field — cdo_shiftx","text":"","code":"shiftx  Shift x         Shifts all fields in x direction. shifty  Shift y         Shifts all fields in y direction."},{"path":"https://eliocamp.github.io/rcdo/reference/showattribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Show attributes — showattribute","title":"Show attributes — showattribute","text":"operator prints attributes data variables dataset.  attribute following structure:  [var_nm@][att_nm]  var_nm  Variable name (optional). Example: pressure att_nm  Attribute name (optional). Example: units  value var_nm name variable containing attribute (named att_nm) want print. Use wildcards print attribute att_nm one variable. value var_nm '' print attribute att_nm data variables. var_nm missing att_nm refers global attribute.  value att_nm name attribute want print. Use wildcards print one attribute. value att_nm '' print attributes.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/showinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Show variables, levels or times — showinfo","title":"Show variables, levels or times — showinfo","text":"module prints format, variables, levels times input dataset.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/showinfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show variables, levels or times — showinfo","text":"","code":"showformat     Show file format                Prints the file format of the input dataset. showcode       Show code numbers                Prints the code number of all variables. showname       Show variable names                Prints the name of all variables. showstdname    Show standard names                Prints the standard name of all variables. showlevel      Show levels                Prints all levels for each variable. showltype      Show GRIB level types                Prints the GRIB level type for all z-axes. showyear       Show years                Prints all years. showmon        Show months                Prints all months. showdate       Show date information                Prints date information of all timesteps (format YYYY-MM-DD). showtime       Show time information                Prints time information of all timesteps (format hh:mm:ss). showtimestamp  Show timestamp                Prints timestamp of all timesteps (format YYYY-MM-DDThh:mm:ss)."},{"path":"https://eliocamp.github.io/rcdo/reference/sinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Short information — sinfo","title":"Short information — sinfo","text":"module writes information structure infiles standard output. infiles arbitrary number input files. input files need structure variables different timesteps. information displayed depends chosen operator.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/sinfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Short information — sinfo","text":"","code":"sinfo   Short information listed by parameter identifier         Prints short information of a dataset. The information is divided into 4 sections.         Section 1 prints one line per parameter with the following information:         - institute and source         - time c=constant v=varying         - type of statistical processing         - number of levels and z-axis number         - horizontal grid size and number         - data type         - parameter identifier         Section 2 and 3 gives a short overview of all grid and vertical coordinates.         And the last section contains short information of the time coordinate. sinfon  Short information listed by parameter name         The same as operator sinfo but using the name instead of the identifier to label the parameter."},{"path":"https://eliocamp.github.io/rcdo/reference/smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth grid points — cdo_smooth","title":"Smooth grid points — cdo_smooth","text":"Smooth grid points horizontal grid. Options comma-separated list \\\"key=value\\\" pairs optional parameters.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth grid points — cdo_smooth","text":"","code":"cdo_smooth(   ifile,   nsmooth = NULL,   radius = NULL,   maxpoints = NULL,   form = NULL,   weight0 = NULL,   weightR = NULL,   ofile = NULL )  cdo_smooth9(   ifile,   nsmooth = NULL,   radius = NULL,   maxpoints = NULL,   form = NULL,   weight0 = NULL,   weightR = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth grid points — cdo_smooth","text":"ifile String path input file. nsmooth INTEGER - Number times smooth, default nsmooth=1 radius STRING - Search radius, default radius=1deg (units: deg, rad, km, m) maxpoints INTEGER - Maximum number points, default maxpoints=<gridsize> form STRING - Form curve, default form=linear weight0 FLOAT - Weight distance 0, default weight0=0.25 weightR FLOAT - Weight search radius, default weightR=0.25 ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/smooth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Smooth grid points — cdo_smooth","text":"","code":"smooth   Smooth grid points          Performs a N point smoothing on all input fields. The number of points used depend          on the search radius (radius) and the maximum number of points (maxpoints).          Per default all points within the search radius of 1degree are used.          The weights for the points depend on the form of the curve and the distance.          The implemented form of the curve is linear with constant default weights of 0.25          at distance 0 (weight0) and at the search radius (weightR). smooth9  9 point smoothing          Performs a 9 point smoothing on all fields with a quadrilateral curvilinear grid.          The result at each grid point is a weighted average of the grid point plus          the 8 surrounding points. The center point receives a weight of 1.0, the          points at each side and above and below receive a weight of 0.5, and corner          points receive a weight of 0.3.          All 9 points are multiplied by their weights and summed, then divided by          the total weight to obtain the smoothed value. Any missing data points are          not included in the sum; points beyond the grid boundary are considered to          be missing. Thus the final result may be the result of an averaging with less          than 9 points."},{"path":"https://eliocamp.github.io/rcdo/reference/specconv.html","id":null,"dir":"Reference","previous_headings":"","what":"Spectral conversion — cdo_sp2sp","title":"Spectral conversion — cdo_sp2sp","text":"Changed triangular truncation spectral fields. operator performs downward conversion cutting resolution. Upward conversions achieved filling zeros.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/specconv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spectral conversion — cdo_sp2sp","text":"","code":"cdo_sp2sp(ifile, trunc = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/specconv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spectral conversion — cdo_sp2sp","text":"ifile String path input file. trunc INTEGER - New spectral resolution ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/spectral.html","id":null,"dir":"Reference","previous_headings":"","what":"Spectral transformation — cdo_gp2sp","title":"Spectral transformation — cdo_gp2sp","text":"module transforms fields global regular Gaussian grid spectral coefficients vice versa. transformation achieved applying Fast Fourier Transformation (FFT) first direct Legendre Transformation afterwards gp2sp. sp2gp inverse Legendre Transformation inverse FFT used. Missing values supported.  relationship spectral resolution, governed truncation number T, grid resolution depends number grid points shortest wavelength field represented. grid 2N points poles (4N grid points total around globe) relationship :  linear grid: shortest wavelength represented 2 grid points → 4N ≃ 2(TL + 1)  quadratic grid: shortest wavelength represented 3 grid points → 4N ≃ 3(TQ + 1)  cubic grid: shortest wavelength represented 4 grid points → 4N ≃ 4(TC + 1)  quadratic grid used ECHAM ERA15. ERA40 using linear Gaussian grid reflected TL notation.  following table shows calculation number latitudes triangular truncation different grid types:  Gridtype           & Number latitudes: nlat   & Triangular truncation: ntr linear           &     NINT((ntr2 + 1)/2)     &     (nlat2 - 1) / 2 quadratic        &     NINT((ntr3 + 1)/2)     &     (nlat2 - 1) / 3 cubic            &     NINT((ntr4 + 1)/2)     &     (nlat2 - 1) / 4","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/spectral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spectral transformation — cdo_gp2sp","text":"","code":"cdo_gp2sp(ifile, type = NULL, trunc = NULL, ofile = NULL)  cdo_sp2gp(ifile, type = NULL, trunc = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/spectral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spectral transformation — cdo_gp2sp","text":"ifile String path input file. type STRING - Type grid: quadratic, linear, cubic (default: type=quadratic) trunc STRING - Triangular truncation ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/spectral.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spectral transformation — cdo_gp2sp","text":"","code":"sp2gp  Spectral to gridpoint        Convert all spectral fields to a global regular Gaussian grid.        The optional parameter trunc must be greater than the input truncation. gp2sp  Gridpoint to spectral        Convert all Gaussian gridpoint fields to spectral fields.        The optional parameter trunc must be lower than the input truncation."},{"path":"https://eliocamp.github.io/rcdo/reference/spectral.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Spectral transformation — cdo_gp2sp","text":"speed calculations, Legendre polynoms kept memory. requires relatively large amount memory. example 12GB T1279 data.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/split.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a dataset — cdo_splitcode","title":"Split a dataset — cdo_splitcode","text":"module splits infile pieces. output files named <obase><xxx><suffix> suffix filename extension derived file format. xxx contents output files depends chosen operator. params comma-separated list processing parameters.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a dataset — cdo_splitcode","text":"","code":"cdo_splitcode(ifile, swap = NULL, uuid = NULL, obase = NULL)  cdo_splitgrid(ifile, swap = NULL, uuid = NULL, obase = NULL)  cdo_splitlevel(ifile, swap = NULL, uuid = NULL, obase = NULL)  cdo_splitname(ifile, swap = NULL, uuid = NULL, obase = NULL)  cdo_splitparam(ifile, swap = NULL, uuid = NULL, obase = NULL)  cdo_splittabnum(ifile, swap = NULL, uuid = NULL, obase = NULL)  cdo_splitzaxis(ifile, swap = NULL, uuid = NULL, obase = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a dataset — cdo_splitcode","text":"ifile String path input file. swap STRING - Swap position obase xxx output filename uuid STRING - Add UUID global attribute <attname> output file obase String basename output files.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/split.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split a dataset — cdo_splitcode","text":"","code":"splitcode    Split code numbers              Splits a dataset into pieces, one for each different code number.              xxx will have three digits with the code number. splitparam   Split parameter identifiers              Splits a dataset into pieces, one for each different parameter identifier.              xxx will be a string with the parameter identifier. splitname    Split variable names              Splits a dataset into pieces, one for each variable name.              xxx will be a string with the variable name. splitlevel   Split levels              Splits a dataset into pieces, one for each different level.              xxx will have six digits with the level. splitgrid    Split grids              Splits a dataset into pieces, one for each different grid.              xxx will have two digits with the grid number. splitzaxis   Split z-axes              Splits a dataset into pieces, one for each different z-axis.              xxx will have two digits with the z-axis number. splittabnum  Split parameter table numbers              Splits a dataset into pieces, one for each GRIB1 parameter table number.              xxx will have three digits with the GRIB1 parameter table number."},{"path":"https://eliocamp.github.io/rcdo/reference/split.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Split a dataset — cdo_splitcode","text":"Operators module need open output files simultaneously. maximum number open files depends operating system!","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/splitdate.html","id":null,"dir":"Reference","previous_headings":"","what":"Splits a file into dates — cdo_splitdate","title":"Splits a file into dates — cdo_splitdate","text":"operator splits infile pieces, one different date. output files named <obase><YYYY-MM-DD><suffix> YYYY-MM-DD date suffix filename extension derived file format.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/splitdate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Splits a file into dates — cdo_splitdate","text":"","code":"cdo_splitdate(ifile, obase = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/splitdate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Splits a file into dates — cdo_splitdate","text":"ifile String path input file. obase String basename output files.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/splitsel.html","id":null,"dir":"Reference","previous_headings":"","what":"Split selected timesteps — cdo_splitsel","title":"Split selected timesteps — cdo_splitsel","text":"operator splits infile pieces, one adjacent sequence t_1, ...., t_n timesteps selected time range. output files named <obase><nnnnnn><suffix> nnnnnn sequence number suffix filename extension derived file format.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/splitsel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split selected timesteps — cdo_splitsel","text":"","code":"cdo_splitsel(ifile, nsets = NULL, noffset = NULL, nskip = NULL, obase = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/splitsel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split selected timesteps — cdo_splitsel","text":"ifile String path input file. nsets INTEGER - Number input timesteps output file noffset INTEGER - Number input timesteps skipped first timestep range (optional) nskip INTEGER - Number input timesteps skipped timestep ranges (optional) obase String basename output files.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/splittime.html","id":null,"dir":"Reference","previous_headings":"","what":"Split timesteps of a dataset — cdo_splitday","title":"Split timesteps of a dataset — cdo_splitday","text":"module splits infile  timesteps pieces. output files named <obase><xxx><suffix> suffix filename extension derived file format. xxx contents output files depends chosen operator.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/splittime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split timesteps of a dataset — cdo_splitday","text":"","code":"cdo_splitday(ifile, format = NULL, obase = NULL)  cdo_splithour(ifile, format = NULL, obase = NULL)  cdo_splitmon(ifile, format = NULL, obase = NULL)  cdo_splitseas(ifile, format = NULL, obase = NULL)  cdo_splityear(ifile, format = NULL, obase = NULL)  cdo_splityearmon(ifile, format = NULL, obase = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/splittime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split timesteps of a dataset — cdo_splitday","text":"ifile String path input file. format STRING - C-style format strftime() (e.g. %B full month name) obase String basename output files.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/splittime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split timesteps of a dataset — cdo_splitday","text":"","code":"splithour     Split hours               Splits a file into pieces, one for each different hour.               xxx will have two digits with the hour. splitday      Split days               Splits a file into pieces, one for each different day.               xxx will have two digits with the day. splitseas     Split seasons               Splits a file into pieces, one for each different season.               xxx will have three characters with the season. splityear     Split years               Splits a file into pieces, one for each different year.               xxx will have four digits with the year (YYYY). splityearmon  Split in years and months               Splits a file into pieces, one for each different year and month.               xxx will have six digits with the year and month (YYYYMM). splitmon      Split months               Splits a file into pieces, one for each different month.               xxx will have two digits with the month."},{"path":"https://eliocamp.github.io/rcdo/reference/splittime.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Split timesteps of a dataset — cdo_splitday","text":"Operators module need open output files simultaneously. maximum number open files depends operating system!","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/strbre.html","id":null,"dir":"Reference","previous_headings":"","what":"Strong breeze days index per time period — cdo_strbre","title":"Strong breeze days index per time period — cdo_strbre","text":"Let infile time series daily maximum horizontal wind speed VX, number days VX greater equal 10.5 m/s counted. output variable maximum number consecutive days maximum wind speed greater equal 10.5 m/s. Note VX defined square root sum squares zonal meridional wind speeds given units m/s. date information timestep outfile date last contributing timestep infile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/strbre.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strong breeze days index per time period — cdo_strbre","text":"","code":"cdo_strbre(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/strbre.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strong breeze days index per time period — cdo_strbre","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/strgal.html","id":null,"dir":"Reference","previous_headings":"","what":"Strong gale days index per time period — cdo_strgal","title":"Strong gale days index per time period — cdo_strgal","text":"Let infile time series daily maximum horizontal wind speed VX, number days VX greater equal 20.5 m/s counted. output variable maximum number consecutive days maximum wind speed greater equal 20.5 m/s. Note VX defined square root sum square zonal meridional wind speeds given units m/s. date information timestep outfile date last contributing timestep infile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/strgal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strong gale days index per time period — cdo_strgal","text":"","code":"cdo_strgal(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/strgal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strong gale days index per time period — cdo_strgal","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/strwin.html","id":null,"dir":"Reference","previous_headings":"","what":"Strong wind days index per time period — cdo_strwin","title":"Strong wind days index per time period — cdo_strwin","text":"Let infile time series daily maximum horizontal wind speed VX, number days VX > v counted. horizontal wind speed v optional parameter default v = 10.5 m/s. output variable maximum number consecutive days maximum wind speed greater equal v. Note VX v given units m/s. Also note horizontal wind speed defined square root sum squares zonal meridional wind speeds. date information timestep outfile date last contributing timestep infile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/strwin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strong wind days index per time period — cdo_strwin","text":"","code":"cdo_strwin(ifile, v = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/strwin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strong wind days index per time period — cdo_strwin","text":"ifile String path input file. v FLOAT - Horizontal wind speed threshold (m/s, default v = 10.5 m/s) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/tee.html","id":null,"dir":"Reference","previous_headings":"","what":"Duplicate a data stream and write it to file — cdo_tee","title":"Duplicate a data stream and write it to file — cdo_tee","text":"operator copies input dataset outfile1 outfile2. first output stream outfile1 can processesd cdo operators. second output outfile2 written disk. can used store intermediate results file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/tee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Duplicate a data stream and write it to file — cdo_tee","text":"","code":"cdo_tee(ifile, outfile2 = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/tee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Duplicate a data stream and write it to file — cdo_tee","text":"ifile String path input file. outfile2 STRING - Destination filename copy input file ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timcor.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation over time — cdo_timcor","title":"Correlation over time — cdo_timcor","text":"correlation coefficient quantity gives quality least squares fitting original data. operator correlates gridpoint two fields timesteps.  S(x) = {t, i_1(t,x) != missval i_2(t,x) != missval}   o(1,x) = Cor{(i_1(t,x), i_2(t,x)), t_1 < t <= t_n}  every gridpoint x timesteps t belong sample, i_1(t,x) != missval i_2(t,x) != missval.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timcor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation over time — cdo_timcor","text":"","code":"cdo_timcor(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/timcor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation over time — cdo_timcor","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timcovar.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance over time — cdo_timcovar","title":"Covariance over time — cdo_timcovar","text":"operator calculates covariance two fields gridpoint timesteps.  S(x) = {t, i_1(t,x) != missval i_2(t,x) != missval}   o(1,x) = Covar{(i_1(t,x), i_2(t,x)), t_1 < t <= t_n}  every gridpoint x timesteps t belong sample, i_1(t,x) != missval i_2(t,x) != missval.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timcovar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance over time — cdo_timcovar","text":"","code":"cdo_timcovar(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/timcovar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance over time — cdo_timcovar","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timcumsum.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative sum over all timesteps — cdo_timcumsum","title":"Cumulative sum over all timesteps — cdo_timcumsum","text":"timcumsum operator calculates cumulative sum timesteps. Missing values treated numeric zero summing.  o(t,x) = sum{(t',x), 0<t'<=t}","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timcumsum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative sum over all timesteps — cdo_timcumsum","text":"","code":"cdo_timcumsum(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/timcumsum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative sum over all timesteps — cdo_timcumsum","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timfillmiss.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporal filling of missing values — cdo_timfillmiss","title":"Temporal filling of missing values — cdo_timfillmiss","text":"operator fills temporally missing values. method parameter can used select filling method. default method=nearest fills missing values nearest neighbor value. options forward backward fill missing values forward backward propagation values. Use limit parameter set maximum number consecutive missing values fill max_gaps set maximum number gaps fill.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timfillmiss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporal filling of missing values — cdo_timfillmiss","text":"","code":"cdo_timfillmiss(   ifile,   method = NULL,   limit = NULL,   max_gaps = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/timfillmiss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporal filling of missing values — cdo_timfillmiss","text":"ifile String path input file. method STRING - Fill method [nearest|linear|forward|backward] (default: nearest) limit INTEGER - maximum number consecutive missing values fill (default: ) max_gaps INTEGER - maximum number gaps fill (default: ) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timpctl.html","id":null,"dir":"Reference","previous_headings":"","what":"Percentile values over all timesteps — cdo_timpctl","title":"Percentile values over all timesteps — cdo_timpctl","text":"operator computes percentiles timesteps infile1. algorithm uses histograms minimum maximum bounds given infile2 infile3, respectively. default number histogram bins 101. default can overridden defining environment variable CDO_PCTL_NBINS. files infile2 infile3 result corresponding timmin timmax operations, respectively. time outfile determined time middle contributing timesteps infile1. can change CDO option –timestat_date <first|middle|last>.  o(1,x) = pth percentile {(t',x), t_1<t'<=t_n}","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timpctl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percentile values over all timesteps — cdo_timpctl","text":"","code":"cdo_timpctl(ifile1, ifile2, ifile3, p = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/timpctl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percentile values over all timesteps — cdo_timpctl","text":"ifile1, ifile2, ifile3 Strings path input files. p FLOAT - Percentile number {0, ..., 100} ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timselpctl.html","id":null,"dir":"Reference","previous_headings":"","what":"Time range percentile values — cdo_timselpctl","title":"Time range percentile values — cdo_timselpctl","text":"operator computes percentile values selected number timesteps infile1. algorithm uses histograms minimum maximum bounds given infile2 infile3, respectively. default number histogram bins 101. default can overridden setting environment variable CDO_PCTL_NBINS different value. files infile2 infile3 result corresponding timselmin timselmax operations, respectively. time outfile determined time middle contributing timesteps infile1. can change CDO option –timestat_date <first|middle|last>. every adjacent sequence t1, ...., tn timesteps selected time range :  o(t,x) = pth percentile {(t',x), t1 < t' <= tn}","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timselpctl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time range percentile values — cdo_timselpctl","text":"","code":"cdo_timselpctl(   ifile1,   ifile2,   ifile3,   p = NULL,   nsets = NULL,   noffset = NULL,   nskip = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/timselpctl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time range percentile values — cdo_timselpctl","text":"ifile1, ifile2, ifile3 Strings path input files. p FLOAT - Percentile number {0, ..., 100} nsets INTEGER - Number input timesteps output timestep noffset INTEGER - Number input timesteps skipped first timestep range (optional) nskip INTEGER - Number input timesteps skipped timestep ranges (optional) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timselstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Time range statistics — cdo_timselavg","title":"Time range statistics — cdo_timselavg","text":"module computes statistical values selected number timesteps. According chosen operator minimum, maximum, range, sum, average, variance standard deviation selected timesteps written outfile. time outfile determined time middle contributing timesteps infile. can change CDO option –timestat_date <first|middle|last>.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timselstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time range statistics — cdo_timselavg","text":"","code":"cdo_timselavg(ifile, nsets = NULL, noffset = NULL, nskip = NULL, ofile = NULL)  cdo_timselmax(ifile, nsets = NULL, noffset = NULL, nskip = NULL, ofile = NULL)  cdo_timselmean(ifile, nsets = NULL, noffset = NULL, nskip = NULL, ofile = NULL)  cdo_timselmin(ifile, nsets = NULL, noffset = NULL, nskip = NULL, ofile = NULL)  cdo_timselrange(   ifile,   nsets = NULL,   noffset = NULL,   nskip = NULL,   ofile = NULL )  cdo_timselstd(ifile, nsets = NULL, noffset = NULL, nskip = NULL, ofile = NULL)  cdo_timselstd1(ifile, nsets = NULL, noffset = NULL, nskip = NULL, ofile = NULL)  cdo_timselsum(ifile, nsets = NULL, noffset = NULL, nskip = NULL, ofile = NULL)  cdo_timselvar(ifile, nsets = NULL, noffset = NULL, nskip = NULL, ofile = NULL)  cdo_timselvar1(ifile, nsets = NULL, noffset = NULL, nskip = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/timselstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time range statistics — cdo_timselavg","text":"ifile String path input file. nsets INTEGER - Number input timesteps output timestep noffset INTEGER - Number input timesteps skipped first timestep range (optional) nskip INTEGER - Number input timesteps skipped timestep ranges (optional) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timselstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Time range statistics — cdo_timselavg","text":"","code":"timselmin    Time selection minimum              For every adjacent sequence t1, ...., tn of timesteps of the same selected time range it is:               o(t,x) = min\\{i(t',x), t1 &lt; t' &lt;= tn\\} timselmax    Time selection maximum              For every adjacent sequence t1, ...., tn of timesteps of the same selected time range it is:               o(t,x) = max\\{i(t',x), t1 &lt; t' &lt;= tn\\} timselrange  Time selection range              For every adjacent sequence t1, ...., tn of timesteps of the same selected time range it is:               o(t,x) = range\\{i(t',x), t1 &lt; t' &lt;= tn\\} timselsum    Time selection sum              For every adjacent sequence t1, ...., tn of timesteps of the same selected time range it is:               o(t,x) = sum\\{i(t',x), t1 &lt; t' &lt;= tn\\} timselmean   Time selection mean              For every adjacent sequence t1, ...., tn of timesteps of the same selected time range it is:               o(t,x) = mean\\{i(t',x), t1 &lt; t' &lt;= tn\\} timselavg    Time selection average              For every adjacent sequence t1, ...., tn of timesteps of the same selected time range it is:               o(t,x) = avg\\{i(t',x), t1 &lt; t' &lt;= tn\\} timselstd    Time selection standard deviation              Normalize by n. For every adjacent sequence t1, ...., tn of timesteps of the same selected time range it is:               o(t,x) = std\\{i(t',x), t1 &lt; t' &lt;= tn\\} timselstd1   Time selection standard deviation (n-1)              Normalize by (n-1). For every adjacent sequence t1, ...., tn of timesteps of the same selected time range it is:               o(t,x) = std1\\{i(t',x), t1 &lt; t' &lt;= tn\\} timselvar    Time selection variance              Normalize by n. For every adjacent sequence t1, ...., tn of timesteps of the same selected time range it is:               o(t,x) = var\\{i(t',x), t1 &lt; t' &lt;= tn\\} timselvar1   Time selection variance (n-1)              Normalize by (n-1). For every adjacent sequence t1, ...., tn of timesteps of the same selected time range it is:               o(t,x) = var1\\{i(t',x), t1 &lt; t' &lt;= tn\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/timsort.html","id":null,"dir":"Reference","previous_headings":"","what":"Timsort — cdo_timsort","title":"Timsort — cdo_timsort","text":"Sorts elements ascending order timesteps every field position. sorting :  o(t_1,x) <= o(t_2,x)      forall (t_1<t_2),x","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timsort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Timsort — cdo_timsort","text":"","code":"cdo_timsort(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/timsort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Timsort — cdo_timsort","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical values over all timesteps — cdo_timavg","title":"Statistical values over all timesteps — cdo_timavg","text":"module computes statistical values timesteps infile. Depending chosen operator minimum, maximum, range, sum, average, variance standard deviation timesteps read infile written outfile. time outfile determined time middle contributing timesteps infile. can change CDO option –timestat_date <first|middle|last>.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical values over all timesteps — cdo_timavg","text":"","code":"cdo_timavg(ifile, ofile = NULL)  cdo_timmax(ifile, ofile = NULL)  cdo_timmaxidx(ifile, ofile = NULL)  cdo_timmean(ifile, ofile = NULL)  cdo_timmin(ifile, ofile = NULL)  cdo_timminidx(ifile, ofile = NULL)  cdo_timrange(ifile, ofile = NULL)  cdo_timstd(ifile, ofile = NULL)  cdo_timstd1(ifile, ofile = NULL)  cdo_timsum(ifile, ofile = NULL)  cdo_timvar(ifile, ofile = NULL)  cdo_timvar1(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/timstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical values over all timesteps — cdo_timavg","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/timstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Statistical values over all timesteps — cdo_timavg","text":"","code":"timmin     Time minimum            o(1,x) = min\\{i(t',x), t_1&lt;t'&lt;=t_n\\} timmax     Time maximum            o(1,x) = max\\{i(t',x), t_1&lt;t'&lt;=t_n\\} timminidx  Index of time minimum            o(1,x) = minidx\\{i(t',x), t_1&lt;t'&lt;=t_n\\} timmaxidx  Index of time maximum            o(1,x) = maxidx\\{i(t',x), t_1&lt;t'&lt;=t_n\\} timrange   Time range            o(1,x) = range\\{i(t',x), t_1&lt;t'&lt;=t_n\\} timsum     Time sum            o(1,x) = sum\\{i(t',x), t_1&lt;t'&lt;=t_n\\} timmean    Time mean            o(1,x) = mean\\{i(t',x), t_1&lt;t'&lt;=t_n\\} timavg     Time average            o(1,x) = avg\\{i(t',x), t_1&lt;t'&lt;=t_n\\} timstd     Time standard deviation            Normalize by n.             o(1,x) = std\\{i(t',x), t_1&lt;t'&lt;=t_n\\} timstd1    Time standard deviation (n-1)            Normalize by (n-1).             o(1,x) = std1\\{i(t',x), t_1&lt;t'&lt;=t_n\\} timvar     Time variance            Normalize by n.             o(1,x) = var\\{i(t',x), t_1&lt;t'&lt;=t_n\\} timvar1    Time variance (n-1)            Normalize by (n-1).             o(1,x) = var1\\{i(t',x), t_1&lt;t'&lt;=t_n\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/trend.html","id":null,"dir":"Reference","previous_headings":"","what":"Trend of time series — cdo_trend","title":"Trend of time series — cdo_trend","text":"values input file infile assumed distributed N(+b*t,S^2) unknown , b S^2. operator estimates parameter b. every field element x timesteps t belong sample S(x), (t,x) NE miss. Thus estimation stored outfile1 b stored outfile2. subtract trend data see operator subtrend. assumed timesteps equidistant, case set parameter equal=false.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/trend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trend of time series — cdo_trend","text":"","code":"cdo_trend(ifile, equal = NULL, ofile1 = NULL, ofile2 = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/trend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trend of time series — cdo_trend","text":"ifile String path input file. equal BOOL - Set false unequal distributed timesteps (default: true) ofile1, ofile2 Strings path output files.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/trendarith.html","id":null,"dir":"Reference","previous_headings":"","what":"Add or subtract a trend — cdo_addtrend","title":"Add or subtract a trend — cdo_addtrend","text":"module adding subtracting trend computed operator trend.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/trendarith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add or subtract a trend — cdo_addtrend","text":"","code":"cdo_addtrend(ifile1, ifile2, ifile3, equal = NULL, ofile = NULL)  cdo_subtrend(ifile1, ifile2, ifile3, equal = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/trendarith.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add or subtract a trend — cdo_addtrend","text":"ifile1, ifile2, ifile3 Strings path input files. equal BOOL - Set false unequal distributed timesteps (default: true) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/trendarith.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add or subtract a trend — cdo_addtrend","text":"","code":"addtrend  Add trend           It is            o(t,x) = i_1(t,x) + (i_2(1,x) + i_3(1,x)*t)           where t is the timesteps. subtrend  Subtract trend           It is            o(t,x) = i_1(t,x) - (i_2(1,x) + i_3(1,x)*t)           where t is the timesteps."},{"path":"https://eliocamp.github.io/rcdo/reference/unpack.html","id":null,"dir":"Reference","previous_headings":"","what":"Unpack data — cdo_unpack","title":"Unpack data — cdo_unpack","text":"Packing reduces data volume reducing precision stored numbers. implemented using NetCDF attributes add_offset scale_factor. operator unpack unpack packed variables. default data type variables automatically changed 32-bit floats. Use CDO option -b F64 change data type 64-bit floats, needed.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/unpack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unpack data — cdo_unpack","text":"","code":"cdo_unpack(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/unpack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unpack data — cdo_unpack","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vargen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a field — cdo_const","title":"Generate a field — cdo_const","text":"Generates dataset one fields","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vargen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a field — cdo_const","text":"","code":"cdo_const(   ifile,   const = NULL,   seed = NULL,   grid = NULL,   start = NULL,   end = NULL,   inc = NULL,   levels = NULL,   ofile = NULL )  cdo_random(   ifile,   const = NULL,   seed = NULL,   grid = NULL,   start = NULL,   end = NULL,   inc = NULL,   levels = NULL,   ofile = NULL )  cdo_seq(   ifile,   const = NULL,   seed = NULL,   grid = NULL,   start = NULL,   end = NULL,   inc = NULL,   levels = NULL,   ofile = NULL )  cdo_stdatm(   ifile,   const = NULL,   seed = NULL,   grid = NULL,   start = NULL,   end = NULL,   inc = NULL,   levels = NULL,   ofile = NULL )  cdo_topo(   ifile,   const = NULL,   seed = NULL,   grid = NULL,   start = NULL,   end = NULL,   inc = NULL,   levels = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/vargen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a field — cdo_const","text":"ifile Strings path input files. const FLOAT - Constant seed INTEGER - seed new sequence pseudo-random numbers [default: 1] grid STRING - Target grid description file name start FLOAT - Start value loop end FLOAT - End value loop inc FLOAT - Increment loop [default: 1] levels FLOAT - Target levels metre surface ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vargen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a field — cdo_const","text":"","code":"const   Create a constant field         Creates a constant field. All field elements of the grid have the same value. random  Create a field with random numbers         Creates a field with rectangularly distrubuted random numbers in the interval \\[0,1\\]. topo    Create a field with topography         Creates a field with topography data, per default on a global half degree grid. seq     Create a time series         Creates a time series with field size 1 and field elements beginning with a start value in time step 1         which is increased from one time step to the next. stdatm  Create values for pressure and temperature for hydrostatic atmosphere         Creates pressure and temperature values for the given list of vertical levels.         The formulas are:          P(z) = P_0 * exp(-1 * g/R * H/T_0 * log( (exp(z/H)*T_0 + T_Delta)/(T_0 + T_Delta))         T(z) = T_0 + T_Delta * exp(-z/H)          with the following constants          T_0     = 213 K           Offset to get a surface temperature of 288K         T_Delta = 75 K            Temperature lapse rate for 10Km         P_0     = 1013.25 hPa     Surface pressure         H       = 10000.0 m       Scale height         g       = 9.80665 m/s**2  Earth gravity         R       = 287.05 J/kg*K   Gas constant for air          This is the solution for the hydrostatic equations and is only valid for the         troposphere (constant positive lapse rate). The temperature increase in the         stratosphere and other effects of the upper atmosphere are not taken into         account."},{"path":"https://eliocamp.github.io/rcdo/reference/varsstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical values over all variables — cdo_varsavg","title":"Statistical values over all variables — cdo_varsavg","text":"module computes statistical values variables timestep. Depending chosen operator minimum, maximum, range, sum, average, variance standard deviation written outfile. input variables need gridsize number levels.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/varsstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical values over all variables — cdo_varsavg","text":"","code":"cdo_varsavg(ifile, ofile = NULL)  cdo_varsmax(ifile, ofile = NULL)  cdo_varsmean(ifile, ofile = NULL)  cdo_varsmin(ifile, ofile = NULL)  cdo_varsrange(ifile, ofile = NULL)  cdo_varsstd(ifile, ofile = NULL)  cdo_varsstd1(ifile, ofile = NULL)  cdo_varssum(ifile, ofile = NULL)  cdo_varsvar(ifile, ofile = NULL)  cdo_varsvar1(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/varsstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical values over all variables — cdo_varsavg","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/varsstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Statistical values over all variables — cdo_varsavg","text":"","code":"varsmin    Variables minimum            For every timestep the minimum over all variables is computed. varsmax    Variables maximum            For every timestep the maximum over all variables is computed. varsrange  Variables range            For every timestep the range over all variables is computed. varssum    Variables sum            For every timestep the sum over all variables is computed. varsmean   Variables mean            For every timestep the mean over all variables is computed. varsavg    Variables average            For every timestep the average over all variables is computed. varsstd    Variables standard deviation            For every timestep the standard deviation over all variables is computed. Normalize by n. varsstd1   Variables standard deviation (n-1)            For every timestep the standard deviation over all variables is computed. Normalize by (n-1). varsvar    Variables variance            For every timestep the variance over all variables is computed. Normalize by n. varsvar1   Variables variance (n-1)            For every timestep the variance over all variables is computed. Normalize by (n-1)."},{"path":"https://eliocamp.github.io/rcdo/reference/verifygrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify grid coordinates — verifygrid","title":"Verify grid coordinates — verifygrid","text":"operator verifies coordinates horizontal grids found infile. Among things, searches duplicate cells, non-convex cells, whether center located outside cell bounds. Use CDO option -v output position cells. information can useful avoid problems interpolating data.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vertfillmiss.html","id":null,"dir":"Reference","previous_headings":"","what":"Vertical filling of missing values — cdo_vertfillmiss","title":"Vertical filling of missing values — cdo_vertfillmiss","text":"operator fills vertical missing values. method parameter can used select filling method. default method=nearest fills missing values nearest neighbor value. options forward backward fill missing values forward backward propagation values. Use limit parameter set maximum number consecutive missing values fill max_gaps set maximum number gaps fill.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vertfillmiss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vertical filling of missing values — cdo_vertfillmiss","text":"","code":"cdo_vertfillmiss(   ifile,   method = NULL,   limit = NULL,   max_gaps = NULL,   ofile = NULL )"},{"path":"https://eliocamp.github.io/rcdo/reference/vertfillmiss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vertical filling of missing values — cdo_vertfillmiss","text":"ifile String path input file. method STRING - Fill method [nearest|linear|forward|backward] (default: nearest) limit INTEGER - maximum number consecutive missing values fill (default: ) max_gaps INTEGER - maximum number gaps fill (default: ) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vertintap.html","id":null,"dir":"Reference","previous_headings":"","what":"Vertical pressure interpolation — cdo_ap2pl","title":"Vertical pressure interpolation — cdo_ap2pl","text":"Interpolate 3D variables hybrid sigma height coordinates pressure levels. input file must contain 3D air pressure pascal. air pressure identified NetCDF CF standard name air_pressure. Use alias  ap2plx environment variable EXTRAPOLATE extrapolate missing values. operator requires variables horizontal grid.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vertintap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vertical pressure interpolation — cdo_ap2pl","text":"","code":"cdo_ap2pl(ifile, plevels = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/vertintap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vertical pressure interpolation — cdo_ap2pl","text":"ifile String path input file. plevels FLOAT - Comma-separated list pressure levels pascal ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vertintap.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Vertical pressure interpolation — cdo_ap2pl","text":"specific implementation NetCDF files ICON model, may work data sources.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vertintgh.html","id":null,"dir":"Reference","previous_headings":"","what":"Vertical height interpolation — cdo_gh2hl","title":"Vertical height interpolation — cdo_gh2hl","text":"Interpolate 3D variables hybrid sigma height coordinates height levels. input file must contain 3D geometric height meter. geometric height identified NetCDF CF standard name geometric_height_at_full_level_center. Use alias  gh2hlx environment variable EXTRAPOLATE extrapolate missing values. operator requires variables horizontal grid.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vertintgh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vertical height interpolation — cdo_gh2hl","text":"","code":"cdo_gh2hl(ifile, hlevels = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/vertintgh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vertical height interpolation — cdo_gh2hl","text":"ifile String path input file. hlevels FLOAT - Comma-separated list height levels meter ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vertintgh.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Vertical height interpolation — cdo_gh2hl","text":"specific implementation NetCDF files ICON model, may work data sources.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vertintml.html","id":null,"dir":"Reference","previous_headings":"","what":"Vertical interpolation — cdo_ml2hl","title":"Vertical interpolation — cdo_ml2hl","text":"Interpolates 3D variables hybrid sigma pressure level pressure height levels. calculate pressure model levels, b coefficients defining model levels surface pressure required. b coefficients normally part model level data. available, surface pressure can derived logarithm surface pressure. extrapolate temperature, surface geopotential also needed. geopotential height must present hybrid layer interfaces (model half-layers)! needed variables identified GRIB1 code number NetCDF CF standard name. Supported parameter tables : WMO standard table number 2 ECMWF local table number 128.  Name                       & Units      & GRIB1 code & CF standard name log surface pressure     &  Pa        &  152       & surface pressure         &  Pa        &  134       &  surface_air_pressure air temperature          &  K         &  130       &  air_temperature surface geopotential     &  m2 s-2    &  129       &  surface_geopotential geopotential height      &  m         &  156       &  geopotential_height  Use alias  ml2plx/ml2hlx environment variable EXTRAPOLATE extrapolate missing values. operator requires variables horizontal grid. Missing values input data supported.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vertintml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vertical interpolation — cdo_ml2hl","text":"","code":"cdo_ml2hl(ifile, plevels = NULL, hlevels = NULL, ofile = NULL)  cdo_ml2pl(ifile, plevels = NULL, hlevels = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/vertintml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vertical interpolation — cdo_ml2hl","text":"ifile String path input file. plevels FLOAT - Pressure levels pascal hlevels FLOAT - Height levels meter ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vertintml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vertical interpolation — cdo_ml2hl","text":"","code":"ml2pl  Model to pressure level interpolation        Interpolates 3D variables on hybrid sigma pressure level to pressure level. ml2hl  Model to height level interpolation        Interpolates 3D variables on hybrid sigma pressure level to height level.        The procedure is the same as for the operator ml2pl except for        the pressure levels being calculated from the heights by:        plevel = 101325*exp(hlevel/-7000)"},{"path":"https://eliocamp.github.io/rcdo/reference/vertintml.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Vertical interpolation — cdo_ml2hl","text":"components hybrid coordinate must always avaiable hybrid layer interfaces even data defined hybrid layer midpoints.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vertstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Vertical statistics — cdo_vertavg","title":"Vertical statistics — cdo_vertavg","text":"module computes statistical values levels input variables. According chosen operator vertical minimum, maximum, range, sum, average, variance standard deviation written outfile.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vertstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vertical statistics — cdo_vertavg","text":"","code":"cdo_vertavg(ifile, weights = NULL, ofile = NULL)  cdo_vertmax(ifile, weights = NULL, ofile = NULL)  cdo_vertmean(ifile, weights = NULL, ofile = NULL)  cdo_vertmin(ifile, weights = NULL, ofile = NULL)  cdo_vertrange(ifile, weights = NULL, ofile = NULL)  cdo_vertstd(ifile, weights = NULL, ofile = NULL)  cdo_vertstd1(ifile, weights = NULL, ofile = NULL)  cdo_vertsum(ifile, weights = NULL, ofile = NULL)  cdo_vertvar(ifile, weights = NULL, ofile = NULL)  cdo_vertvar1(ifile, weights = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/vertstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vertical statistics — cdo_vertavg","text":"ifile String path input file. weights BOOL - weights=FALSE disables weighting layer thickness [default: weights=TRUE] ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/vertstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vertical statistics — cdo_vertavg","text":"","code":"vertmin    Vertical minimum            For every gridpoint the minimum over all levels is computed. vertmax    Vertical maximum            For every gridpoint the maximum over all levels is computed. vertrange  Vertical range            For every gridpoint the range over all levels is computed. vertsum    Vertical sum            For every gridpoint the sum over all levels is computed. vertmean   Vertical mean            For every gridpoint the layer weighted mean over all levels is computed. vertavg    Vertical average            For every gridpoint the layer weighted average over all levels is computed. vertstd    Vertical standard deviation            For every gridpoint the standard deviation over all levels is computed. Normalize by n. vertstd1   Vertical standard deviation (n-1)            For every gridpoint the standard deviation over all levels is computed. Normalize by (n-1). vertvar    Vertical variance            For every gridpoint the variance over all levels is computed. Normalize by n. vertvar1   Vertical variance (n-1)            For every gridpoint the variance over all levels is computed. Normalize by (n-1)."},{"path":"https://eliocamp.github.io/rcdo/reference/wct.html","id":null,"dir":"Reference","previous_headings":"","what":"Windchill temperature — cdo_wct","title":"Windchill temperature — cdo_wct","text":"Let infile1 infile2 time series temperature wind speed records, corresponding time series resulting windchill temperatures written outfile. wind chill temperature calculation valid temperature T <= 33 °C wind speed v >= 1.39 m/s. Whenever conditions satisfied, missing value written outfile. Note temperature wind speed records given units °C m/s, respectively.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/wct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Windchill temperature — cdo_wct","text":"","code":"cdo_wct(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/wct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Windchill temperature — cdo_wct","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/wind.html","id":null,"dir":"Reference","previous_headings":"","what":"Wind transformation — cdo_dv2uv","title":"Wind transformation — cdo_dv2uv","text":"module converts relative divergence vorticity U V wind vice versa. Divergence vorticity spherical harmonic coefficients spectral space U V global regular Gaussian grid. Gaussian latitudes need ordered north south. Missing values supported.  relationship spectral resolution, governed truncation number T, grid resolution depends number grid points shortest wavelength field represented. grid 2N points poles (4N grid points total around globe) relationship :  linear grid: shortest wavelength represented 2 grid points → 4N ≃ 2(TL + 1)  quadratic grid: shortest wavelength represented 3 grid points → 4N ≃ 3(TQ + 1)  cubic grid: shortest wavelength represented 4 grid points → 4N ≃ 4(TC + 1)  quadratic grid used ECHAM ERA15. ERA40 using linear Gaussian grid reflected TL notation.  following table shows calculation number latitudes triangular truncation different grid types:  Gridtype           & Number latitudes: nlat   & Triangular truncation: ntr linear           &     NINT((ntr2 + 1)/2)     &     (nlat2 - 1) / 2 quadratic        &     NINT((ntr3 + 1)/2)     &     (nlat2 - 1) / 3 cubic            &     NINT((ntr4 + 1)/2)     &     (nlat2 - 1) / 4","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/wind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wind transformation — cdo_dv2uv","text":"","code":"cdo_dv2uv(ifile, gridtype = NULL, ofile = NULL)  cdo_uv2dv(ifile, gridtype = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/wind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wind transformation — cdo_dv2uv","text":"ifile String path input file. gridtype STRING - Type grid: quadratic, linear, cubic (default: quadratic) ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/wind.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wind transformation — cdo_dv2uv","text":"","code":"dv2uv  Divergence and vorticity to U and V wind        Calculate U and V wind on a Gaussian grid from spherical harmonic        coefficients of relative divergence and vorticity. The divergence and vorticity        need to have the names sd and svo or code numbers 155 and 138. uv2dv  U and V wind to divergence and vorticity        Calculate spherical harmonic coefficients of relative divergence and vorticity        from U and V wind. The U and V wind need to be on a Gaussian grid and need to have the        names u and v or the code numbers 131 and 132."},{"path":"https://eliocamp.github.io/rcdo/reference/wind.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Wind transformation — cdo_dv2uv","text":"speed calculations, Legendre polynoms kept memory. requires relatively large amount memory. example 12GB T1279 data.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/wind2.html","id":null,"dir":"Reference","previous_headings":"","what":"D and V to velocity potential and stream function — cdo_dv2ps","title":"D and V to velocity potential and stream function — cdo_dv2ps","text":"Calculate spherical harmonic coefficients velocity potential stream function spherical harmonic coefficients relative divergence vorticity. divergence vorticity need names sd svo code numbers 155 138.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/wind2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"D and V to velocity potential and stream function — cdo_dv2ps","text":"","code":"cdo_dv2ps(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/wind2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"D and V to velocity potential and stream function — cdo_dv2ps","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/xsinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Extra short information — xsinfo","title":"Extra short information — xsinfo","text":"module writes information structure infiles standard output. infiles arbitrary number input files. input files need structure variables different timesteps. information displayed depends chosen operator.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/xsinfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extra short information — xsinfo","text":"","code":"xsinfo   Extra short information listed by parameter name          Prints short information of a dataset. The information is divided into 4 sections.          Section 1 prints one line per parameter with the following information:          - institute and source          - time c=constant v=varying          - type of statistical processing          - number of levels and z-axis number          - horizontal grid size and number          - data type          - memory type (float or double)          - parameter name          Section 2 to 4 gives a short overview of all grid, vertical and time coordinates. xsinfop  Extra short information listed by parameter identifier          The same as operator xsinfo but using the identifier instead of the name to label the parameter."},{"path":"https://eliocamp.github.io/rcdo/reference/ydayarith.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiyear daily arithmetic — cdo_ydayadd","title":"Multiyear daily arithmetic — cdo_ydayadd","text":"module performs simple arithmetic time series one timestep day year. field infile1 corresponding field timestep infile2 day year used. input files need structure variables. Usually infile2 generated operator module YDAYSTAT.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ydayarith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiyear daily arithmetic — cdo_ydayadd","text":"","code":"cdo_ydayadd(ifile1, ifile2, ofile = NULL)  cdo_ydaydiv(ifile1, ifile2, ofile = NULL)  cdo_ydaymul(ifile1, ifile2, ofile = NULL)  cdo_ydaysub(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ydayarith.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiyear daily arithmetic — cdo_ydayadd","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ydayarith.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiyear daily arithmetic — cdo_ydayadd","text":"","code":"ydayadd  Add multi-year daily time series          Adds a time series and a multi-year daily time series. ydaysub  Subtract multi-year daily time series          Subtracts a time series and a multi-year daily time series. ydaymul  Multiply multi-year daily time series          Multiplies a time series and a multi-year daily time series. ydaydiv  Divide multi-year daily time series          Divides a time series and a multi-year daily time series."},{"path":"https://eliocamp.github.io/rcdo/reference/ydaypctl.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiyear daily percentile values — cdo_ydaypctl","title":"Multiyear daily percentile values — cdo_ydaypctl","text":"operator writes certain percentile day year infile1 outfile. algorithm uses histograms minimum maximum bounds given infile2 infile3, respectively. default number histogram bins 101. default can overridden setting environment variable CDO_PCTL_NBINS different value. files infile2 infile3 result corresponding ydaymin ydaymax operations, respectively. date information output field date last contributing input field.  o(001,x) = pth percentile {(t,x), day((t)) = 001} ... o(366,x) = pth percentile {(t,x), day((t)) = 366}","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ydaypctl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiyear daily percentile values — cdo_ydaypctl","text":"","code":"cdo_ydaypctl(ifile1, ifile2, ifile3, p = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ydaypctl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiyear daily percentile values — cdo_ydaypctl","text":"ifile1, ifile2, ifile3 Strings path input files. p FLOAT - Percentile number {0, ..., 100} ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ydaystat.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiyear daily statistics — cdo_ydayavg","title":"Multiyear daily statistics — cdo_ydayavg","text":"module computes statistical values day year. Depending chosen operator minimum, maximum, range, sum, average, variance standard deviation day year infile written outfile. date information output field date last contributing input field.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ydaystat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiyear daily statistics — cdo_ydayavg","text":"","code":"cdo_ydayavg(ifile, ofile = NULL)  cdo_ydaymax(ifile, ofile = NULL)  cdo_ydaymean(ifile, ofile = NULL)  cdo_ydaymin(ifile, ofile = NULL)  cdo_ydayrange(ifile, ofile = NULL)  cdo_ydaystd(ifile, ofile = NULL)  cdo_ydaystd1(ifile, ofile = NULL)  cdo_ydaysum(ifile, ofile = NULL)  cdo_ydayvar(ifile, ofile = NULL)  cdo_ydayvar1(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ydaystat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiyear daily statistics — cdo_ydayavg","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ydaystat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiyear daily statistics — cdo_ydayavg","text":"","code":"ydaymin    Multi-year daily minimum            o(001,x) = min\\{i(t,x), day(i(t)) = 001\\}                             ...            o(366,x) = min\\{i(t,x), day(i(t)) = 366\\} ydaymax    Multi-year daily maximum            o(001,x) = max\\{i(t,x), day(i(t)) = 001\\}                             ...            o(366,x) = max\\{i(t,x), day(i(t)) = 366\\} ydayrange  Multi-year daily range            o(001,x) = range\\{i(t,x), day(i(t)) = 001\\}                             ...            o(366,x) = range\\{i(t,x), day(i(t)) = 366\\} ydaysum    Multi-year daily sum            o(001,x) = sum\\{i(t,x), day(i(t)) = 001\\}                             ...            o(366,x) = sum\\{i(t,x), day(i(t)) = 366\\} ydaymean   Multi-year daily mean            o(001,x) = mean\\{i(t,x), day(i(t)) = 001\\}                             ...            o(366,x) = mean\\{i(t,x), day(i(t)) = 366\\} ydayavg    Multi-year daily average            o(001,x) = avg\\{i(t,x), day(i(t)) = 001\\}                             ...            o(366,x) = avg\\{i(t,x), day(i(t)) = 366\\} ydaystd    Multi-year daily standard deviation            Normalize by n.             o(001,x) = std\\{i(t,x), day(i(t)) = 001\\}                             ...            o(366,x) = std\\{i(t,x), day(i(t)) = 366\\} ydaystd1   Multi-year daily standard deviation (n-1)            Normalize by (n-1).             o(001,x) = std1\\{i(t,x), day(i(t)) = 001\\}                             ...            o(366,x) = std1\\{i(t,x), day(i(t)) = 366\\} ydayvar    Multi-year daily variance            Normalize by n.             o(001,x) = var\\{i(t,x), day(i(t)) = 001\\}                             ...            o(366,x) = var\\{i(t,x), day(i(t)) = 366\\} ydayvar1   Multi-year daily variance (n-1)            Normalize by (n-1).             o(001,x) = var1\\{i(t,x), day(i(t)) = 001\\}                             ...            o(366,x) = var1\\{i(t,x), day(i(t)) = 366\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/ydrunpctl.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiyear daily running percentile values — cdo_ydrunpctl","title":"Multiyear daily running percentile values — cdo_ydrunpctl","text":"operator writes running percentile values day year infile1 outfile. certain percentile computed timesteps running windows medium timestep corresponds certain day year. algorithm uses histograms minimum maximum bounds given infile2 infile3, respectively. default number histogram bins 101. default can overridden setting environment variable CDO_PCTL_NBINS different value. files infile2 infile3 result corresponding ydrunmin ydrunmax operations, respectively. date information output field date timestep middle last contributing running window. Note operator applied continuous time series daily measurements order yield physically meaningful results. Also note output time series begins (nts-1)/2 timesteps first timestep input time series ends (nts-1)/2 timesteps last. input data complete continuous, time series daily measurements month season within different years, operator yields physically meaningful results input time series include (nts-1)/2 days period interest.  o(001,x) = pth percentile {(t,x), (t+1,x), ..., (t+nts-1,x); day[((t+(nts-1)/2)] = 001} ... o(366,x) = pth percentile {(t,x), (t+1,x), ..., (t+nts-1,x); day[((t+(nts-1)/2)] = 366}","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ydrunpctl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiyear daily running percentile values — cdo_ydrunpctl","text":"","code":"cdo_ydrunpctl(ifile1, ifile2, ifile3, p = NULL, nts = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ydrunpctl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiyear daily running percentile values — cdo_ydrunpctl","text":"ifile1, ifile2, ifile3 Strings path input files. p FLOAT - Percentile number {0, ..., 100} nts INTEGER - Number timesteps ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ydrunstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiyear daily running statistics — cdo_ydrunavg","title":"Multiyear daily running statistics — cdo_ydrunavg","text":"module writes running statistical values day year infile outfile. Depending chosen operator, minimum, maximum, sum, average, variance standard deviation timesteps running windows medium timestep corresponds certain day year computed. date information output field date timestep middle last contributing running window. Note operator applied continuous time series daily measurements order yield physically meaningful results. Also note output time series begins (nts-1)/2 timesteps first timestep input time series ends (nts-1)/2 timesteps last one. input data complete continuous, time series daily measurements month season within different years, operator yields physically meaningful results input time series include (nts-1)/2 days period interest.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ydrunstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiyear daily running statistics — cdo_ydrunavg","text":"","code":"cdo_ydrunavg(ifile, nts = NULL, ofile = NULL)  cdo_ydrunmax(ifile, nts = NULL, ofile = NULL)  cdo_ydrunmean(ifile, nts = NULL, ofile = NULL)  cdo_ydrunmin(ifile, nts = NULL, ofile = NULL)  cdo_ydrunstd(ifile, nts = NULL, ofile = NULL)  cdo_ydrunstd1(ifile, nts = NULL, ofile = NULL)  cdo_ydrunsum(ifile, nts = NULL, ofile = NULL)  cdo_ydrunvar(ifile, nts = NULL, ofile = NULL)  cdo_ydrunvar1(ifile, nts = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ydrunstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiyear daily running statistics — cdo_ydrunavg","text":"ifile String path input file. nts INTEGER - Number timesteps ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ydrunstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiyear daily running statistics — cdo_ydrunavg","text":"","code":"ydrunmin   Multi-year daily running minimum            o(001,x) = min\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[(i(t+(nts-1)/2)\\] = 001\\}                             ...            o(366,x) = min\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[(i(t+(nts-1)/2)\\] = 366\\} ydrunmax   Multi-year daily running maximum            o(001,x) = max\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[(i(t+(nts-1)/2)\\] = 001\\}                             ...            o(366,x) = max\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[(i(t+(nts-1)/2)\\] = 366\\} ydrunsum   Multi-year daily running sum            o(001,x) = sum\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[(i(t+(nts-1)/2)\\] = 001\\}                             ...            o(366,x) = sum\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[(i(t+(nts-1)/2)\\] = 366\\} ydrunmean  Multi-year daily running mean            o(001,x) = mean\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[(i(t+(nts-1)/2)\\] = 001\\}                             ...            o(366,x) = mean\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[(i(t+(nts-1)/2)\\] = 366\\} ydrunavg   Multi-year daily running average            o(001,x) = avg\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[(i(t+(nts-1)/2)\\] = 001\\}                             ...            o(366,x) = avg\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[(i(t+(nts-1)/2)\\] = 366\\} ydrunstd   Multi-year daily running standard deviation            Normalize by n.             o(001,x) = std\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[i(t+(nts-1)/2)\\] = 001\\}                             ...            o(366,x) = std\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[i(t+(nts-1)/2)\\] = 366\\} ydrunstd1  Multi-year daily running standard deviation (n-1)            Normalize by (n-1).             o(001,x) = std1\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[i(t+(nts-1)/2)\\] = 001\\}                             ...            o(366,x) = std1\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[i(t+(nts-1)/2)\\] = 366\\} ydrunvar   Multi-year daily running variance            Normalize by n.             o(001,x) = var\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[(i(t+(nts-1)/2)\\] = 001\\}                             ...            o(366,x) = var\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[(i(t+(nts-1)/2)\\] = 366\\} ydrunvar1  Multi-year daily running variance (n-1)            Normalize by (n-1).             o(001,x) = var1\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[(i(t+(nts-1)/2)\\] = 001\\}                             ...            o(366,x) = var1\\{i(t,x), i(t+1,x), ..., i(t+nts-1,x); day\\[(i(t+(nts-1)/2)\\] = 366\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/yeararith.html","id":null,"dir":"Reference","previous_headings":"","what":"Yearly arithmetic — cdo_yearadd","title":"Yearly arithmetic — cdo_yearadd","text":"module performs simple arithmetic time series one timestep year. field infile1 corresponding field timestep infile2 year used. header information infile1 infile2. Usually infile2 generated operator module YEARSTAT.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yeararith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Yearly arithmetic — cdo_yearadd","text":"","code":"cdo_yearadd(ifile1, ifile2, ofile = NULL)  cdo_yeardiv(ifile1, ifile2, ofile = NULL)  cdo_yearmul(ifile1, ifile2, ofile = NULL)  cdo_yearsub(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/yeararith.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Yearly arithmetic — cdo_yearadd","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yeararith.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Yearly arithmetic — cdo_yearadd","text":"","code":"yearadd  Add yearly time series          Adds a time series and a yearly time series. yearsub  Subtract yearly time series          Subtracts a time series and a yearly time series. yearmul  Multiply yearly time series          Multiplies a time series and a yearly time series. yeardiv  Divide yearly time series          Divides a time series and a yearly time series."},{"path":"https://eliocamp.github.io/rcdo/reference/yearmonstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Yearly mean from monthly data — cdo_yearmonmean","title":"Yearly mean from monthly data — cdo_yearmonmean","text":"operator computes yearly mean monthly time series. month weighted number days per month. time outfile determined time middle contributing timesteps infile.  every adjacent sequence t_1, ...,t_n timesteps year :  o(t,x) = mean{(t',x), t_1<t'<=t_n}","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yearmonstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Yearly mean from monthly data — cdo_yearmonmean","text":"","code":"cdo_yearmonmean(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/yearmonstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Yearly mean from monthly data — cdo_yearmonmean","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yearpctl.html","id":null,"dir":"Reference","previous_headings":"","what":"Yearly percentile values — cdo_yearpctl","title":"Yearly percentile values — cdo_yearpctl","text":"operator computes percentiles timesteps year infile1. algorithm uses histograms minimum maximum bounds given infile2 infile3, respectively. default number histogram bins 101. default can overridden defining environment variable CDO_PCTL_NBINS. files infile2 infile3 result corresponding yearmin yearmax operations, respectively. time outfile determined time middle contributing timesteps infile1. can change CDO option –timestat_date <first|middle|last>. every adjacent sequence t_1, ...,t_n timesteps year :  o(t,x) = pth percentile {(t',x), t_1<t'<=t_n}","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yearpctl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Yearly percentile values — cdo_yearpctl","text":"","code":"cdo_yearpctl(ifile1, ifile2, ifile3, p = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/yearpctl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Yearly percentile values — cdo_yearpctl","text":"ifile1, ifile2, ifile3 Strings path input files. p FLOAT - Percentile number {0, ..., 100} ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yearstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Yearly statistics — cdo_yearavg","title":"Yearly statistics — cdo_yearavg","text":"module computes statistical values timesteps year. Depending chosen operator minimum, maximum, range, sum, average, variance standard deviation timesteps year written outfile. time outfile determined time middle contributing timesteps infile. can change CDO option –timestat_date <first|middle|last>.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yearstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Yearly statistics — cdo_yearavg","text":"","code":"cdo_yearavg(ifile, complete_only = NULL, ofile = NULL)  cdo_yearmax(ifile, complete_only = NULL, ofile = NULL)  cdo_yearmaxidx(ifile, complete_only = NULL, ofile = NULL)  cdo_yearmean(ifile, complete_only = NULL, ofile = NULL)  cdo_yearmin(ifile, complete_only = NULL, ofile = NULL)  cdo_yearminidx(ifile, complete_only = NULL, ofile = NULL)  cdo_yearrange(ifile, complete_only = NULL, ofile = NULL)  cdo_yearstd(ifile, complete_only = NULL, ofile = NULL)  cdo_yearstd1(ifile, complete_only = NULL, ofile = NULL)  cdo_yearsum(ifile, complete_only = NULL, ofile = NULL)  cdo_yearvar(ifile, complete_only = NULL, ofile = NULL)  cdo_yearvar1(ifile, complete_only = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/yearstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Yearly statistics — cdo_yearavg","text":"ifile String path input file. complete_only BOOL - Process last year complete ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yearstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Yearly statistics — cdo_yearavg","text":"","code":"yearmin     Yearly minimum             For every adjacent sequence t_1, ...,t_n of timesteps of the same year it is:              o(t,x) = min\\{i(t',x), t_1&lt;t'&lt;=t_n\\} yearmax     Yearly maximum             For every adjacent sequence t_1, ...,t_n of timesteps of the same year it is:              o(t,x) = max\\{i(t',x), t_1&lt;t'&lt;=t_n\\} yearminidx  Index of yearly minimum             For every adjacent sequence t_1, ...,t_n of timesteps of the same year it is:              o(t,x) = minidx\\{i(t',x), t_1&lt;t'&lt;=t_n\\} yearmaxidx  Index of yearly maximum             For every adjacent sequence t_1, ...,t_n of timesteps of the same year it is:              o(t,x) = maxidx\\{i(t',x), t_1&lt;t'&lt;=t_n\\} yearrange   Yearly range             For every adjacent sequence t_1, ...,t_n of timesteps of the same year it is:              o(t,x) = range\\{i(t',x), t_1&lt;t'&lt;=t_n\\} yearsum     Yearly sum             For every adjacent sequence t_1, ...,t_n of timesteps of the same year it is:              o(t,x) = sum\\{i(t',x), t_1&lt;t'&lt;=t_n\\} yearmean    Yearly mean             For every adjacent sequence t_1, ...,t_n of timesteps of the same year it is:              o(t,x) = mean\\{i(t',x), t_1&lt;t'&lt;=t_n\\} yearavg     Yearly average             For every adjacent sequence t_1, ...,t_n of timesteps of the same year it is:              o(t,x) = avg\\{i(t',x), t_1&lt;t'&lt;=t_n\\} yearstd     Yearly standard deviation             Normalize by n. For every adjacent sequence t_1, ...,t_n of timesteps of the same year it is:              o(t,x) = std\\{i(t',x), t_1 &lt; t' &lt;= t_n\\} yearstd1    Yearly standard deviation (n-1)             Normalize by (n-1). For every adjacent sequence t_1, ...,t_n of timesteps of the same year it is:              o(t,x) = std1\\{i(t',x), t_1 &lt; t' &lt;= t_n\\} yearvar     Yearly variance             Normalize by n. For every adjacent sequence t_1, ...,t_n of timesteps of the same year it is:              o(t,x) = var\\{i(t',x), t_1 &lt; t' &lt;= t_n\\} yearvar1    Yearly variance (n-1)             Normalize by (n-1). For every adjacent sequence t_1, ...,t_n of timesteps of the same year it is:              o(t,x) = var1\\{i(t',x), t_1 &lt; t' &lt;= t_n\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/yearstat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Yearly statistics — cdo_yearavg","text":"operators yearmean yearavg compute arithmetical means!","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yhourarith.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiyear hourly arithmetic — cdo_yhouradd","title":"Multiyear hourly arithmetic — cdo_yhouradd","text":"module performs simple arithmetic time series one timestep hour day year. field infile1 corresponding field timestep infile2 hour day year used. input files need structure variables. Usually infile2 generated operator module YHOURSTAT.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yhourarith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiyear hourly arithmetic — cdo_yhouradd","text":"","code":"cdo_yhouradd(ifile1, ifile2, ofile = NULL)  cdo_yhourdiv(ifile1, ifile2, ofile = NULL)  cdo_yhourmul(ifile1, ifile2, ofile = NULL)  cdo_yhoursub(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/yhourarith.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiyear hourly arithmetic — cdo_yhouradd","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yhourarith.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiyear hourly arithmetic — cdo_yhouradd","text":"","code":"yhouradd  Add multi-year hourly time series           Adds a time series and a multi-year hourly time series. yhoursub  Subtract multi-year hourly time series           Subtracts a time series and a multi-year hourly time series. yhourmul  Multiply multi-year hourly time series           Multiplies a time series and a multi-year hourly time series. yhourdiv  Divide multi-year hourly time series           Divides a time series and a multi-year hourly time series."},{"path":"https://eliocamp.github.io/rcdo/reference/yhourstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiyear hourly statistics — cdo_yhouravg","title":"Multiyear hourly statistics — cdo_yhouravg","text":"module computes statistical values hour day year. Depending chosen operator minimum, maximum, range, sum, average, variance standard deviation hour day year infile written outfile. date information output field date last contributing input field.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yhourstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiyear hourly statistics — cdo_yhouravg","text":"","code":"cdo_yhouravg(ifile, ofile = NULL)  cdo_yhourmax(ifile, ofile = NULL)  cdo_yhourmean(ifile, ofile = NULL)  cdo_yhourmin(ifile, ofile = NULL)  cdo_yhourrange(ifile, ofile = NULL)  cdo_yhourstd(ifile, ofile = NULL)  cdo_yhourstd1(ifile, ofile = NULL)  cdo_yhoursum(ifile, ofile = NULL)  cdo_yhourvar(ifile, ofile = NULL)  cdo_yhourvar1(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/yhourstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiyear hourly statistics — cdo_yhouravg","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yhourstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiyear hourly statistics — cdo_yhouravg","text":"","code":"yhourmin    Multi-year hourly minimum             o(0001,x) = min\\{i(t,x), day(i(t)) = 0001\\}                              ...             o(8784,x) = min\\{i(t,x), day(i(t)) = 8784\\} yhourmax    Multi-year hourly maximum             o(0001,x) = max\\{i(t,x), day(i(t)) = 0001\\}                              ...             o(8784,x) = max\\{i(t,x), day(i(t)) = 8784\\} yhourrange  Multi-year hourly range             o(0001,x) = range\\{i(t,x), day(i(t)) = 0001\\}                              ...             o(8784,x) = range\\{i(t,x), day(i(t)) = 8784\\} yhoursum    Multi-year hourly sum             o(0001,x) = sum\\{i(t,x), day(i(t)) = 0001\\}                              ...             o(8784,x) = sum\\{i(t,x), day(i(t)) = 8784\\} yhourmean   Multi-year hourly mean             o(0001,x) = mean\\{i(t,x), day(i(t)) = 0001\\}                              ...             o(8784,x) = mean\\{i(t,x), day(i(t)) = 8784\\} yhouravg    Multi-year hourly average             o(0001,x) = avg\\{i(t,x), day(i(t)) = 0001\\}                              ...             o(8784,x) = avg\\{i(t,x), day(i(t)) = 8784\\} yhourstd    Multi-year hourly standard deviation             Normalize by n.              o(0001,x) = std\\{i(t,x), day(i(t)) = 0001\\}                              ...             o(8784,x) = std\\{i(t,x), day(i(t)) = 8784\\} yhourstd1   Multi-year hourly standard deviation (n-1)             Normalize by (n-1).              o(0001,x) = std1\\{i(t,x), day(i(t)) = 0001\\}                              ...             o(8784,x) = std1\\{i(t,x), day(i(t)) = 8784\\} yhourvar    Multi-year hourly variance             Normalize by n.              o(0001,x) = var\\{i(t,x), day(i(t)) = 0001\\}                              ...             o(8784,x) = var\\{i(t,x), day(i(t)) = 8784\\} yhourvar1   Multi-year hourly variance (n-1)             Normalize by (n-1).              o(0001,x) = var1\\{i(t,x), day(i(t)) = 0001\\}                              ...             o(8784,x) = var1\\{i(t,x), day(i(t)) = 8784\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/ymonarith.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiyear monthly arithmetic — cdo_ymonadd","title":"Multiyear monthly arithmetic — cdo_ymonadd","text":"module performs simple arithmetic time series one timestep month year. field infile1 corresponding field timestep infile2 month year used. input files need structure variables. Usually infile2 generated operator module YMONSTAT.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ymonarith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiyear monthly arithmetic — cdo_ymonadd","text":"","code":"cdo_ymonadd(ifile1, ifile2, ofile = NULL)  cdo_ymondiv(ifile1, ifile2, ofile = NULL)  cdo_ymonmul(ifile1, ifile2, ofile = NULL)  cdo_ymonsub(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ymonarith.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiyear monthly arithmetic — cdo_ymonadd","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ymonarith.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiyear monthly arithmetic — cdo_ymonadd","text":"","code":"ymonadd  Add multi-year monthly time series          Adds a time series and a multi-year monthly time series. ymonsub  Subtract multi-year monthly time series          Subtracts a time series and a multi-year monthly time series. ymonmul  Multiply multi-year monthly time series          Multiplies a time series with a multi-year monthly time series. ymondiv  Divide multi-year monthly time series          Divides a time series by a multi-year monthly time series."},{"path":"https://eliocamp.github.io/rcdo/reference/ymoncomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiyear monthly comparison — cdo_ymoneq","title":"Multiyear monthly comparison — cdo_ymoneq","text":"module performs compaisons time series one timestep month year. field infile1 corresponding field timestep infile2 month year used. resulting field mask containing 1 comparison true 0 . type comparison depends chosen operator. input files need structure variables. Usually infile2 generated operator module YMONSTAT.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ymoncomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiyear monthly comparison — cdo_ymoneq","text":"","code":"cdo_ymoneq(ifile1, ifile2, ofile = NULL)  cdo_ymonge(ifile1, ifile2, ofile = NULL)  cdo_ymongt(ifile1, ifile2, ofile = NULL)  cdo_ymonle(ifile1, ifile2, ofile = NULL)  cdo_ymonlt(ifile1, ifile2, ofile = NULL)  cdo_ymonne(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ymoncomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiyear monthly comparison — cdo_ymoneq","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ymoncomp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiyear monthly comparison — cdo_ymoneq","text":"","code":"ymoneq  Compare time series with Equal         Compares whether a time series is equal to a multi-year monthly time series. ymonne  Compare time series with NotEqual         Compares whether a time series is not equal to a multi-year monthly time series. ymonle  Compare time series with LessEqual         Compares whether a time series is less than or equal to a multi-year monthly time series. ymonlt  Compares if time series with LessThan         Compares whether a time series is less than a multi-year monthly time series. ymonge  Compares if time series with GreaterEqual         Compares whether a time series is greater than or equal to a multi-year monthly time series. ymongt  Compares if time series with GreaterThan         Compares whether a time series is greater than a multi-year monthly time series."},{"path":"https://eliocamp.github.io/rcdo/reference/ymonpctl.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiyear monthly percentile values — cdo_ymonpctl","title":"Multiyear monthly percentile values — cdo_ymonpctl","text":"operator writes certain percentile month year infile1 outfile. algorithm uses histograms minimum maximum bounds given infile2 infile3, respectively. default number histogram bins 101. default can overridden setting environment variable CDO_PCTL_NBINS different value. files infile2 infile3 result corresponding ymonmin ymonmax operations, respectively. date information output field date last contributing input field.  o(01,x) = pth percentile {(t,x), month((t)) = 01} ... o(12,x) = pth percentile {(t,x), month((t)) = 12}","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ymonpctl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiyear monthly percentile values — cdo_ymonpctl","text":"","code":"cdo_ymonpctl(ifile1, ifile2, ifile3, p = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ymonpctl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiyear monthly percentile values — cdo_ymonpctl","text":"ifile1, ifile2, ifile3 Strings path input files. p FLOAT - Percentile number {0, ..., 100} ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ymonstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiyear monthly statistics — cdo_ymonavg","title":"Multiyear monthly statistics — cdo_ymonavg","text":"module computes statistical values month year. Depending chosen operator minimum, maximum, range, sum, average, variance standard deviation month year infile written outfile. date information output field date last contributing input field. can change CDO option –timestat_date <first|middle|last>.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ymonstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiyear monthly statistics — cdo_ymonavg","text":"","code":"cdo_ymonavg(ifile, ofile = NULL)  cdo_ymonmax(ifile, ofile = NULL)  cdo_ymonmean(ifile, ofile = NULL)  cdo_ymonmin(ifile, ofile = NULL)  cdo_ymonrange(ifile, ofile = NULL)  cdo_ymonstd(ifile, ofile = NULL)  cdo_ymonstd1(ifile, ofile = NULL)  cdo_ymonsum(ifile, ofile = NULL)  cdo_ymonvar(ifile, ofile = NULL)  cdo_ymonvar1(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/ymonstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiyear monthly statistics — cdo_ymonavg","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/ymonstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiyear monthly statistics — cdo_ymonavg","text":"","code":"ymonmin    Multi-year monthly minimum            o(01,x) = min\\{i(t,x), month(i(t)) = 01\\}                             ...            o(12,x) = min\\{i(t,x), month(i(t)) = 12\\} ymonmax    Multi-year monthly maximum            o(01,x) = max\\{i(t,x), month(i(t)) = 01\\}                             ...            o(12,x) = max\\{i(t,x), month(i(t)) = 12\\} ymonrange  Multi-year monthly range            o(01,x) = range\\{i(t,x), month(i(t)) = 01\\}                             ...            o(12,x) = range\\{i(t,x), month(i(t)) = 12\\} ymonsum    Multi-year monthly sum            o(01,x) = sum\\{i(t,x), month(i(t)) = 01\\}                             ...            o(12,x) = sum\\{i(t,x), month(i(t)) = 12\\} ymonmean   Multi-year monthly mean            o(01,x) = mean\\{i(t,x), month(i(t)) = 01\\}                             ...            o(12,x) = mean\\{i(t,x), month(i(t)) = 12\\} ymonavg    Multi-year monthly average            o(01,x) = avg\\{i(t,x), month(i(t)) = 01\\}                             ...            o(12,x) = avg\\{i(t,x), month(i(t)) = 12\\} ymonstd    Multi-year monthly standard deviation            Normalize by n.             o(01,x) = std\\{i(t,x), month(i(t)) = 01\\}                             ...            o(12,x) = std\\{i(t,x), month(i(t)) = 12\\} ymonstd1   Multi-year monthly standard deviation (n-1)            Normalize by (n-1).             o(01,x) = std1\\{i(t,x), month(i(t)) = 01\\}                             ...            o(12,x) = std1\\{i(t,x), month(i(t)) = 12\\} ymonvar    Multi-year monthly variance            Normalize by n.             o(01,x) = var\\{i(t,x), month(i(t)) = 01\\}                             ...            o(12,x) = var\\{i(t,x), month(i(t)) = 12\\} ymonvar1   Multi-year monthly variance (n-1)            Normalize by (n-1).             o(01,x) = var1\\{i(t,x), month(i(t)) = 01\\}                             ...            o(12,x) = var1\\{i(t,x), month(i(t)) = 12\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/yseasarith.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiyear seasonal arithmetic — cdo_yseasadd","title":"Multiyear seasonal arithmetic — cdo_yseasadd","text":"module performs simple arithmetic time series one timestep season. field infile1 corresponding field timestep infile2 season used. input files need structure variables. Usually infile2 generated operator module YSEASSTAT.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yseasarith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiyear seasonal arithmetic — cdo_yseasadd","text":"","code":"cdo_yseasadd(ifile1, ifile2, ofile = NULL)  cdo_yseasdiv(ifile1, ifile2, ofile = NULL)  cdo_yseasmul(ifile1, ifile2, ofile = NULL)  cdo_yseassub(ifile1, ifile2, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/yseasarith.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiyear seasonal arithmetic — cdo_yseasadd","text":"ifile1, ifile2 Strings path input files. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yseasarith.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiyear seasonal arithmetic — cdo_yseasadd","text":"","code":"yseasadd  Add multi-year seasonal time series           Adds a time series and a multi-year seasonal time series. yseassub  Subtract multi-year seasonal time series           Subtracts a time series and a multi-year seasonal time series. yseasmul  Multiply multi-year seasonal time series           Multiplies a time series and a multi-year seasonal time series. yseasdiv  Divide multi-year seasonal time series           Divides a time series and a multi-year seasonal time series."},{"path":"https://eliocamp.github.io/rcdo/reference/yseaspctl.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiyear seasonal percentile values — cdo_yseaspctl","title":"Multiyear seasonal percentile values — cdo_yseaspctl","text":"operator writes certain percentile season infile1 outfile. algorithm uses histograms minimum maximum bounds given infile2 infile3, respectively. default number histogram bins 101. default can overridden setting environment variable CDO_PCTL_NBINS different value. files infile2 infile3 result corresponding yseasmin yseasmax operations, respectively. date information output field date last contributing input field.  o(1,x) = pth percentile {(t,x), month((t)) = 12, 01, 02} o(2,x) = pth percentile {(t,x), month((t)) = 03, 04, 05} o(3,x) = pth percentile {(t,x), month((t)) = 06, 07, 08} o(4,x) = pth percentile {(t,x), month((t)) = 09, 10, 11}","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yseaspctl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiyear seasonal percentile values — cdo_yseaspctl","text":"","code":"cdo_yseaspctl(ifile1, ifile2, ifile3, p = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/yseaspctl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiyear seasonal percentile values — cdo_yseaspctl","text":"ifile1, ifile2, ifile3 Strings path input files. p FLOAT - Percentile number {0, ..., 100} ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yseasstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiyear seasonal statistics — cdo_yseasavg","title":"Multiyear seasonal statistics — cdo_yseasavg","text":"module computes statistical values season. Depending chosen operator minimum, maximum, range, sum, average, variance standard deviation season infile written outfile. date information output field date last contributing input field.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yseasstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiyear seasonal statistics — cdo_yseasavg","text":"","code":"cdo_yseasavg(ifile, ofile = NULL)  cdo_yseasmax(ifile, ofile = NULL)  cdo_yseasmean(ifile, ofile = NULL)  cdo_yseasmin(ifile, ofile = NULL)  cdo_yseasrange(ifile, ofile = NULL)  cdo_yseasstd(ifile, ofile = NULL)  cdo_yseasstd1(ifile, ofile = NULL)  cdo_yseassum(ifile, ofile = NULL)  cdo_yseasvar(ifile, ofile = NULL)  cdo_yseasvar1(ifile, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/yseasstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiyear seasonal statistics — cdo_yseasavg","text":"ifile String path input file. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/yseasstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiyear seasonal statistics — cdo_yseasavg","text":"","code":"yseasmin    Multi-year seasonal minimum             o(1,x) = min\\{i(t,x), month(i(t)) = 12, 01, 02\\}             o(2,x) = min\\{i(t,x), month(i(t)) = 03, 04, 05\\}             o(3,x) = min\\{i(t,x), month(i(t)) = 06, 07, 08\\}             o(4,x) = min\\{i(t,x), month(i(t)) = 09, 10, 11\\} yseasmax    Multi-year seasonal maximum             o(1,x) = max\\{i(t,x), month(i(t)) = 12, 01, 02\\}             o(2,x) = max\\{i(t,x), month(i(t)) = 03, 04, 05\\}             o(3,x) = max\\{i(t,x), month(i(t)) = 06, 07, 08\\}             o(4,x) = max\\{i(t,x), month(i(t)) = 09, 10, 11\\} yseasrange  Multi-year seasonal range             o(1,x) = range\\{i(t,x), month(i(t)) = 12, 01, 02\\}             o(2,x) = range\\{i(t,x), month(i(t)) = 03, 04, 05\\}             o(3,x) = range\\{i(t,x), month(i(t)) = 06, 07, 08\\}             o(4,x) = range\\{i(t,x), month(i(t)) = 09, 10, 11\\} yseassum    Multi-year seasonal sum             o(1,x) = sum\\{i(t,x), month(i(t)) = 12, 01, 02\\}             o(2,x) = sum\\{i(t,x), month(i(t)) = 03, 04, 05\\}             o(3,x) = sum\\{i(t,x), month(i(t)) = 06, 07, 08\\}             o(4,x) = sum\\{i(t,x), month(i(t)) = 09, 10, 11\\} yseasmean   Multi-year seasonal mean             o(1,x) = mean\\{i(t,x), month(i(t)) = 12, 01, 02\\}             o(2,x) = mean\\{i(t,x), month(i(t)) = 03, 04, 05\\}             o(3,x) = mean\\{i(t,x), month(i(t)) = 06, 07, 08\\}             o(4,x) = mean\\{i(t,x), month(i(t)) = 09, 10, 11\\} yseasavg    Multi-year seasonal average             o(1,x) = avg\\{i(t,x), month(i(t)) = 12, 01, 02\\}             o(2,x) = avg\\{i(t,x), month(i(t)) = 03, 04, 05\\}             o(3,x) = avg\\{i(t,x), month(i(t)) = 06, 07, 08\\}             o(4,x) = avg\\{i(t,x), month(i(t)) = 09, 10, 11\\} yseasstd    Multi-year seasonal standard deviation             o(1,x) = std\\{i(t,x), month(i(t)) = 12, 01, 02\\}             o(2,x) = std\\{i(t,x), month(i(t)) = 03, 04, 05\\}             o(3,x) = std\\{i(t,x), month(i(t)) = 06, 07, 08\\}             o(4,x) = std\\{i(t,x), month(i(t)) = 09, 10, 11\\} yseasstd1   Multi-year seasonal standard deviation (n-1)             o(1,x) = std1\\{i(t,x), month(i(t)) = 12, 01, 02\\}             o(2,x) = std1\\{i(t,x), month(i(t)) = 03, 04, 05\\}             o(3,x) = std1\\{i(t,x), month(i(t)) = 06, 07, 08\\}             o(4,x) = std1\\{i(t,x), month(i(t)) = 09, 10, 11\\} yseasvar    Multi-year seasonal variance             o(1,x) = var\\{i(t,x), month(i(t)) = 12, 01, 02\\}             o(2,x) = var\\{i(t,x), month(i(t)) = 03, 04, 05\\}             o(3,x) = var\\{i(t,x), month(i(t)) = 06, 07, 08\\}             o(4,x) = var\\{i(t,x), month(i(t)) = 09, 10, 11\\} yseasvar1   Multi-year seasonal variance (n-1)             o(1,x) = var1\\{i(t,x), month(i(t)) = 12, 01, 02\\}             o(2,x) = var1\\{i(t,x), month(i(t)) = 03, 04, 05\\}             o(3,x) = var1\\{i(t,x), month(i(t)) = 06, 07, 08\\}             o(4,x) = var1\\{i(t,x), month(i(t)) = 09, 10, 11\\}"},{"path":"https://eliocamp.github.io/rcdo/reference/zonstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Zonal statistics — cdo_zonavg","title":"Zonal statistics — cdo_zonavg","text":"module computes zonal statistical values input fields. Depending chosen operator, zonal minimum, maximum, range, sum, average, standard deviation, variance, skewness, kurtosis, median certain percentile field written outfile. Operators module require variables regular lon/lat grid. zonal mean (zonmean) can calculated data unstructured grid latitude bins defined optional parameter zonaldes.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/zonstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zonal statistics — cdo_zonavg","text":"","code":"cdo_zonavg(ifile, p = NULL, zonaldes = NULL, ofile = NULL)  cdo_zonkurt(ifile, p = NULL, zonaldes = NULL, ofile = NULL)  cdo_zonmax(ifile, p = NULL, zonaldes = NULL, ofile = NULL)  cdo_zonmean(ifile, p = NULL, zonaldes = NULL, ofile = NULL)  cdo_zonmedian(ifile, p = NULL, zonaldes = NULL, ofile = NULL)  cdo_zonmin(ifile, p = NULL, zonaldes = NULL, ofile = NULL)  cdo_zonpctl(ifile, p = NULL, zonaldes = NULL, ofile = NULL)  cdo_zonrange(ifile, p = NULL, zonaldes = NULL, ofile = NULL)  cdo_zonskew(ifile, p = NULL, zonaldes = NULL, ofile = NULL)  cdo_zonstd(ifile, p = NULL, zonaldes = NULL, ofile = NULL)  cdo_zonstd1(ifile, p = NULL, zonaldes = NULL, ofile = NULL)  cdo_zonsum(ifile, p = NULL, zonaldes = NULL, ofile = NULL)  cdo_zonvar(ifile, p = NULL, zonaldes = NULL, ofile = NULL)  cdo_zonvar1(ifile, p = NULL, zonaldes = NULL, ofile = NULL)"},{"path":"https://eliocamp.github.io/rcdo/reference/zonstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zonal statistics — cdo_zonavg","text":"ifile String path input file. p FLOAT - Percentile number {0, ..., 100} zonaldes STRING - Description zonal latitude bins needed data unstructured grid. predefined zonal description zonal_<DY>. DY increment latitudes degrees. ofile String path output file.","code":""},{"path":"https://eliocamp.github.io/rcdo/reference/zonstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Zonal statistics — cdo_zonavg","text":"","code":"zonmin     Zonal minimum            For every latitude the minimum over all longitudes is computed. zonmax     Zonal maximum            For every latitude the maximum over all longitudes is computed. zonrange   Zonal range            For every latitude the range over all longitudes is computed. zonsum     Zonal sum            For every latitude the sum over all longitudes is computed. zonmean    Zonal mean            For every latitude the mean over all longitudes is computed.            Use the optional parameter zonaldes for data on an unstructured grid. zonavg     Zonal average            For every latitude the average over all longitudes is computed. zonstd     Zonal standard deviation            For every latitude the standard deviation over all longitudes is computed. Normalize by n. zonstd1    Zonal standard deviation (n-1)            For every latitude the standard deviation over all longitudes is computed. Normalize by (n-1). zonvar     Zonal variance            For every latitude the variance over all longitudes is computed. Normalize by n. zonvar1    Zonal variance (n-1)            For every latitude the variance over all longitudes is computed. Normalize by (n-1). zonskew    Zonal skewness            For every latitude the skewness over all longitudes is computed. zonkurt    Zonal kurtosis            For every latitude the kurtosis over all longitudes is computed. zonmedian  Zonal median            For every latitude the median over all longitudes is computed. zonpctl    Zonal percentiles            For every latitude the pth percentile over all longitudes is computed."}]
